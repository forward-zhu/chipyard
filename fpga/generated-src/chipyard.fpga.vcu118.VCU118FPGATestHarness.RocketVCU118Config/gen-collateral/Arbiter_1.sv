// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module Arbiter_1(
  input         io_in_0_valid,
  input  [63:0] io_in_0_bits_vd,
  input  [4:0]  io_in_0_bits_fflags,
                io_in_0_bits_uop_ctrl_lsrc_0,
                io_in_0_bits_uop_ctrl_lsrc_1,
                io_in_0_bits_uop_ctrl_ldest,
  input         io_in_0_bits_uop_ctrl_vm,
  input  [5:0]  io_in_0_bits_uop_ctrl_funct6,
  input  [2:0]  io_in_0_bits_uop_ctrl_funct3,
  input         io_in_0_bits_uop_ctrl_widen,
                io_in_0_bits_uop_ctrl_widen2,
                io_in_0_bits_uop_ctrl_narrow,
                io_in_0_bits_uop_ctrl_narrow_to_1,
  input  [6:0]  io_in_0_bits_uop_info_vstart,
  input  [7:0]  io_in_0_bits_uop_info_vl,
  input  [1:0]  io_in_0_bits_uop_info_vxrm,
  input  [2:0]  io_in_0_bits_uop_info_frm,
                io_in_0_bits_uop_info_vlmul,
                io_in_0_bits_uop_info_vsew,
  input         io_in_0_bits_uop_info_ma,
                io_in_0_bits_uop_info_ta,
  input  [2:0]  io_in_0_bits_uop_info_destEew,
                io_in_0_bits_uop_expdIdx,
  input         io_in_0_bits_uop_expdEnd,
                io_in_0_bits_uop_sysUop_robIdx_flag,
  input  [7:0]  io_in_0_bits_uop_sysUop_robIdx_value,
  input  [63:0] io_in_0_bits_uop_maskKeep,
                io_in_0_bits_uop_maskOff,
  input         io_in_1_valid,
  input  [63:0] io_in_1_bits_vd,
  input  [4:0]  io_in_1_bits_fflags,
                io_in_1_bits_uop_ctrl_lsrc_0,
                io_in_1_bits_uop_ctrl_lsrc_1,
                io_in_1_bits_uop_ctrl_ldest,
  input         io_in_1_bits_uop_ctrl_vm,
  input  [5:0]  io_in_1_bits_uop_ctrl_funct6,
  input  [2:0]  io_in_1_bits_uop_ctrl_funct3,
  input         io_in_1_bits_uop_ctrl_widen,
                io_in_1_bits_uop_ctrl_widen2,
                io_in_1_bits_uop_ctrl_narrow,
                io_in_1_bits_uop_ctrl_narrow_to_1,
  input  [6:0]  io_in_1_bits_uop_info_vstart,
  input  [7:0]  io_in_1_bits_uop_info_vl,
  input  [1:0]  io_in_1_bits_uop_info_vxrm,
  input  [2:0]  io_in_1_bits_uop_info_frm,
                io_in_1_bits_uop_info_vlmul,
                io_in_1_bits_uop_info_vsew,
  input         io_in_1_bits_uop_info_ma,
                io_in_1_bits_uop_info_ta,
  input  [2:0]  io_in_1_bits_uop_info_destEew,
                io_in_1_bits_uop_expdIdx,
  input         io_in_1_bits_uop_expdEnd,
                io_in_1_bits_uop_sysUop_robIdx_flag,
  input  [7:0]  io_in_1_bits_uop_sysUop_robIdx_value,
  input  [63:0] io_in_1_bits_uop_maskKeep,
                io_in_1_bits_uop_maskOff,
  input         io_in_2_valid,
  input  [63:0] io_in_2_bits_vd,
  input  [4:0]  io_in_2_bits_fflags,
                io_in_2_bits_uop_ctrl_lsrc_0,
                io_in_2_bits_uop_ctrl_lsrc_1,
                io_in_2_bits_uop_ctrl_ldest,
  input         io_in_2_bits_uop_ctrl_vm,
  input  [5:0]  io_in_2_bits_uop_ctrl_funct6,
  input  [2:0]  io_in_2_bits_uop_ctrl_funct3,
  input         io_in_2_bits_uop_ctrl_widen,
                io_in_2_bits_uop_ctrl_widen2,
                io_in_2_bits_uop_ctrl_narrow,
                io_in_2_bits_uop_ctrl_narrow_to_1,
  input  [6:0]  io_in_2_bits_uop_info_vstart,
  input  [7:0]  io_in_2_bits_uop_info_vl,
  input  [1:0]  io_in_2_bits_uop_info_vxrm,
  input  [2:0]  io_in_2_bits_uop_info_frm,
                io_in_2_bits_uop_info_vlmul,
                io_in_2_bits_uop_info_vsew,
  input         io_in_2_bits_uop_info_ma,
                io_in_2_bits_uop_info_ta,
  input  [2:0]  io_in_2_bits_uop_info_destEew,
                io_in_2_bits_uop_expdIdx,
  input         io_in_2_bits_uop_expdEnd,
                io_in_2_bits_uop_sysUop_robIdx_flag,
  input  [7:0]  io_in_2_bits_uop_sysUop_robIdx_value,
  input  [63:0] io_in_2_bits_uop_maskKeep,
                io_in_2_bits_uop_maskOff,
  input         io_in_3_valid,
  input  [63:0] io_in_3_bits_vd,
  input  [4:0]  io_in_3_bits_fflags,
                io_in_3_bits_uop_ctrl_lsrc_0,
                io_in_3_bits_uop_ctrl_lsrc_1,
                io_in_3_bits_uop_ctrl_ldest,
  input         io_in_3_bits_uop_ctrl_vm,
  input  [5:0]  io_in_3_bits_uop_ctrl_funct6,
  input  [2:0]  io_in_3_bits_uop_ctrl_funct3,
  input         io_in_3_bits_uop_ctrl_widen,
                io_in_3_bits_uop_ctrl_widen2,
                io_in_3_bits_uop_ctrl_narrow,
                io_in_3_bits_uop_ctrl_narrow_to_1,
  input  [6:0]  io_in_3_bits_uop_info_vstart,
  input  [7:0]  io_in_3_bits_uop_info_vl,
  input  [1:0]  io_in_3_bits_uop_info_vxrm,
  input  [2:0]  io_in_3_bits_uop_info_frm,
                io_in_3_bits_uop_info_vlmul,
                io_in_3_bits_uop_info_vsew,
  input         io_in_3_bits_uop_info_ma,
                io_in_3_bits_uop_info_ta,
  input  [2:0]  io_in_3_bits_uop_info_destEew,
                io_in_3_bits_uop_expdIdx,
  input         io_in_3_bits_uop_expdEnd,
                io_in_3_bits_uop_sysUop_robIdx_flag,
  input  [7:0]  io_in_3_bits_uop_sysUop_robIdx_value,
  input  [63:0] io_in_3_bits_uop_maskKeep,
                io_in_3_bits_uop_maskOff,
  output        io_in_1_ready,
                io_in_2_ready,
                io_in_3_ready,
                io_out_valid,
  output [63:0] io_out_bits_vd,
  output [4:0]  io_out_bits_fflags,
                io_out_bits_uop_ctrl_lsrc_0,
                io_out_bits_uop_ctrl_lsrc_1,
                io_out_bits_uop_ctrl_ldest,
  output        io_out_bits_uop_ctrl_vm,
  output [5:0]  io_out_bits_uop_ctrl_funct6,
  output [2:0]  io_out_bits_uop_ctrl_funct3,
  output        io_out_bits_uop_ctrl_widen,
                io_out_bits_uop_ctrl_widen2,
                io_out_bits_uop_ctrl_narrow,
                io_out_bits_uop_ctrl_narrow_to_1,
  output [6:0]  io_out_bits_uop_info_vstart,
  output [7:0]  io_out_bits_uop_info_vl,
  output [1:0]  io_out_bits_uop_info_vxrm,
  output [2:0]  io_out_bits_uop_info_frm,
                io_out_bits_uop_info_vlmul,
                io_out_bits_uop_info_vsew,
  output        io_out_bits_uop_info_ma,
                io_out_bits_uop_info_ta,
  output [2:0]  io_out_bits_uop_info_destEew,
                io_out_bits_uop_expdIdx,
  output        io_out_bits_uop_expdEnd,
                io_out_bits_uop_sysUop_robIdx_flag,
  output [7:0]  io_out_bits_uop_sysUop_robIdx_value,
  output [63:0] io_out_bits_uop_maskKeep,
                io_out_bits_uop_maskOff
);

  wire _grant_T = io_in_0_valid | io_in_1_valid;	// @[Arbiter.scala:45:68]
  wire _grant_T_1 = _grant_T | io_in_2_valid;	// @[Arbiter.scala:45:68]
  assign io_in_1_ready = ~io_in_0_valid;	// @[Arbiter.scala:45:78]
  assign io_in_2_ready = ~_grant_T;	// @[Arbiter.scala:45:{68,78}]
  assign io_in_3_ready = ~_grant_T_1;	// @[Arbiter.scala:45:{68,78}]
  assign io_out_valid = _grant_T_1 | io_in_3_valid;	// @[Arbiter.scala:45:68, :147:31]
  assign io_out_bits_vd = io_in_0_valid ? io_in_0_bits_vd : io_in_1_valid ? io_in_1_bits_vd : io_in_2_valid ? io_in_2_bits_vd : io_in_3_bits_vd;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_fflags = io_in_0_valid ? io_in_0_bits_fflags : io_in_1_valid ? io_in_1_bits_fflags : io_in_2_valid ? io_in_2_bits_fflags : io_in_3_bits_fflags;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_lsrc_0 = io_in_0_valid ? io_in_0_bits_uop_ctrl_lsrc_0 : io_in_1_valid ? io_in_1_bits_uop_ctrl_lsrc_0 : io_in_2_valid ? io_in_2_bits_uop_ctrl_lsrc_0 : io_in_3_bits_uop_ctrl_lsrc_0;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_lsrc_1 = io_in_0_valid ? io_in_0_bits_uop_ctrl_lsrc_1 : io_in_1_valid ? io_in_1_bits_uop_ctrl_lsrc_1 : io_in_2_valid ? io_in_2_bits_uop_ctrl_lsrc_1 : io_in_3_bits_uop_ctrl_lsrc_1;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_ldest = io_in_0_valid ? io_in_0_bits_uop_ctrl_ldest : io_in_1_valid ? io_in_1_bits_uop_ctrl_ldest : io_in_2_valid ? io_in_2_bits_uop_ctrl_ldest : io_in_3_bits_uop_ctrl_ldest;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_vm = io_in_0_valid ? io_in_0_bits_uop_ctrl_vm : io_in_1_valid ? io_in_1_bits_uop_ctrl_vm : io_in_2_valid ? io_in_2_bits_uop_ctrl_vm : io_in_3_bits_uop_ctrl_vm;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_funct6 = io_in_0_valid ? io_in_0_bits_uop_ctrl_funct6 : io_in_1_valid ? io_in_1_bits_uop_ctrl_funct6 : io_in_2_valid ? io_in_2_bits_uop_ctrl_funct6 : io_in_3_bits_uop_ctrl_funct6;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_funct3 = io_in_0_valid ? io_in_0_bits_uop_ctrl_funct3 : io_in_1_valid ? io_in_1_bits_uop_ctrl_funct3 : io_in_2_valid ? io_in_2_bits_uop_ctrl_funct3 : io_in_3_bits_uop_ctrl_funct3;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_widen = io_in_0_valid ? io_in_0_bits_uop_ctrl_widen : io_in_1_valid ? io_in_1_bits_uop_ctrl_widen : io_in_2_valid ? io_in_2_bits_uop_ctrl_widen : io_in_3_bits_uop_ctrl_widen;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_widen2 = io_in_0_valid ? io_in_0_bits_uop_ctrl_widen2 : io_in_1_valid ? io_in_1_bits_uop_ctrl_widen2 : io_in_2_valid ? io_in_2_bits_uop_ctrl_widen2 : io_in_3_bits_uop_ctrl_widen2;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_narrow = io_in_0_valid ? io_in_0_bits_uop_ctrl_narrow : io_in_1_valid ? io_in_1_bits_uop_ctrl_narrow : io_in_2_valid ? io_in_2_bits_uop_ctrl_narrow : io_in_3_bits_uop_ctrl_narrow;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_ctrl_narrow_to_1 = io_in_0_valid ? io_in_0_bits_uop_ctrl_narrow_to_1 : io_in_1_valid ? io_in_1_bits_uop_ctrl_narrow_to_1 : io_in_2_valid ? io_in_2_bits_uop_ctrl_narrow_to_1 : io_in_3_bits_uop_ctrl_narrow_to_1;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_vstart = io_in_0_valid ? io_in_0_bits_uop_info_vstart : io_in_1_valid ? io_in_1_bits_uop_info_vstart : io_in_2_valid ? io_in_2_bits_uop_info_vstart : io_in_3_bits_uop_info_vstart;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_vl = io_in_0_valid ? io_in_0_bits_uop_info_vl : io_in_1_valid ? io_in_1_bits_uop_info_vl : io_in_2_valid ? io_in_2_bits_uop_info_vl : io_in_3_bits_uop_info_vl;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_vxrm = io_in_0_valid ? io_in_0_bits_uop_info_vxrm : io_in_1_valid ? io_in_1_bits_uop_info_vxrm : io_in_2_valid ? io_in_2_bits_uop_info_vxrm : io_in_3_bits_uop_info_vxrm;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_frm = io_in_0_valid ? io_in_0_bits_uop_info_frm : io_in_1_valid ? io_in_1_bits_uop_info_frm : io_in_2_valid ? io_in_2_bits_uop_info_frm : io_in_3_bits_uop_info_frm;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_vlmul = io_in_0_valid ? io_in_0_bits_uop_info_vlmul : io_in_1_valid ? io_in_1_bits_uop_info_vlmul : io_in_2_valid ? io_in_2_bits_uop_info_vlmul : io_in_3_bits_uop_info_vlmul;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_vsew = io_in_0_valid ? io_in_0_bits_uop_info_vsew : io_in_1_valid ? io_in_1_bits_uop_info_vsew : io_in_2_valid ? io_in_2_bits_uop_info_vsew : io_in_3_bits_uop_info_vsew;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_ma = io_in_0_valid ? io_in_0_bits_uop_info_ma : io_in_1_valid ? io_in_1_bits_uop_info_ma : io_in_2_valid ? io_in_2_bits_uop_info_ma : io_in_3_bits_uop_info_ma;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_ta = io_in_0_valid ? io_in_0_bits_uop_info_ta : io_in_1_valid ? io_in_1_bits_uop_info_ta : io_in_2_valid ? io_in_2_bits_uop_info_ta : io_in_3_bits_uop_info_ta;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_info_destEew = io_in_0_valid ? io_in_0_bits_uop_info_destEew : io_in_1_valid ? io_in_1_bits_uop_info_destEew : io_in_2_valid ? io_in_2_bits_uop_info_destEew : io_in_3_bits_uop_info_destEew;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_expdIdx = io_in_0_valid ? io_in_0_bits_uop_expdIdx : io_in_1_valid ? io_in_1_bits_uop_expdIdx : io_in_2_valid ? io_in_2_bits_uop_expdIdx : io_in_3_bits_uop_expdIdx;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_expdEnd = io_in_0_valid ? io_in_0_bits_uop_expdEnd : io_in_1_valid ? io_in_1_bits_uop_expdEnd : io_in_2_valid ? io_in_2_bits_uop_expdEnd : io_in_3_bits_uop_expdEnd;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_sysUop_robIdx_flag = io_in_0_valid ? io_in_0_bits_uop_sysUop_robIdx_flag : io_in_1_valid ? io_in_1_bits_uop_sysUop_robIdx_flag : io_in_2_valid ? io_in_2_bits_uop_sysUop_robIdx_flag : io_in_3_bits_uop_sysUop_robIdx_flag;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_sysUop_robIdx_value = io_in_0_valid ? io_in_0_bits_uop_sysUop_robIdx_value : io_in_1_valid ? io_in_1_bits_uop_sysUop_robIdx_value : io_in_2_valid ? io_in_2_bits_uop_sysUop_robIdx_value : io_in_3_bits_uop_sysUop_robIdx_value;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_maskKeep = io_in_0_valid ? io_in_0_bits_uop_maskKeep : io_in_1_valid ? io_in_1_bits_uop_maskKeep : io_in_2_valid ? io_in_2_bits_uop_maskKeep : io_in_3_bits_uop_maskKeep;	// @[Arbiter.scala:136:15, :138:26, :140:19]
  assign io_out_bits_uop_maskOff = io_in_0_valid ? io_in_0_bits_uop_maskOff : io_in_1_valid ? io_in_1_bits_uop_maskOff : io_in_2_valid ? io_in_2_bits_uop_maskOff : io_in_3_bits_uop_maskOff;	// @[Arbiter.scala:136:15, :138:26, :140:19]
endmodule

