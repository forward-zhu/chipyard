// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VMac(
  input          clock,
                 io_in_valid,
  input  [5:0]   io_in_bits_uop_ctrl_funct6,
  input  [2:0]   io_in_bits_uop_ctrl_funct3,
  input          io_in_bits_uop_ctrl_vm,
  input  [4:0]   io_in_bits_uop_ctrl_vs1_imm,
  input          io_in_bits_uop_ctrl_widen,
                 io_in_bits_uop_info_ma,
                 io_in_bits_uop_info_ta,
  input  [2:0]   io_in_bits_uop_info_vsew,
  input  [7:0]   io_in_bits_uop_info_vl,
  input  [6:0]   io_in_bits_uop_info_vstart,
  input  [1:0]   io_in_bits_uop_info_vxrm,
  input  [2:0]   io_in_bits_uop_uopIdx,
  input  [127:0] io_in_bits_vs1,
                 io_in_bits_vs2,
  input  [63:0]  io_in_bits_rs1,
  input  [127:0] io_in_bits_oldVd,
                 io_in_bits_mask,
  output         io_out_valid,
  output [127:0] io_out_bits_vd,
  output         io_out_bits_vxsat
);

  wire [63:0]  _vIMac64bs_1_io_vd;	// @[VMac.scala:56:37]
  wire [7:0]   _vIMac64bs_1_io_vxsat;	// @[VMac.scala:56:37]
  wire [63:0]  _vIMac64bs_0_io_vd;	// @[VMac.scala:56:37]
  wire [7:0]   _vIMac64bs_0_io_vxsat;	// @[VMac.scala:56:37]
  reg          validS1;	// @[VMac.scala:29:24]
  reg          io_out_valid_REG;	// @[VMac.scala:30:26]
  wire         _sew_sew_oneHot_WIRE_0 = io_in_bits_uop_info_vsew == 3'h0;	// @[Cat.scala:33:92, VFuBundles.scala:67:53]
  wire         _sew_sew_oneHot_WIRE_1 = io_in_bits_uop_info_vsew == 3'h1;	// @[VFuBundles.scala:67:53]
  wire         _sew_sew_oneHot_WIRE_2 = io_in_bits_uop_info_vsew == 3'h2;	// @[VFuBundles.scala:67:53]
  wire         _sew_sew_oneHot_WIRE_3 = io_in_bits_uop_info_vsew == 3'h3;	// @[VFuBundles.scala:67:53]
  wire [3:0]   sew_oneHot = {_sew_sew_oneHot_WIRE_3, _sew_sew_oneHot_WIRE_2, _sew_sew_oneHot_WIRE_1, _sew_sew_oneHot_WIRE_0};	// @[VFuBundles.scala:67:{53,63}]
  wire [63:0]  rs1Imm = ~(io_in_bits_uop_ctrl_funct3[2]) & io_in_bits_uop_ctrl_funct3[1] & io_in_bits_uop_ctrl_funct3[0] ? {{59{io_in_bits_uop_ctrl_vs1_imm[4]}}, io_in_bits_uop_ctrl_vs1_imm} : io_in_bits_rs1;	// @[VFuBundles.scala:33:{12,19,32,36,45}, VMac.scala:39:{19,82}]
  wire [127:0] vs1 = io_in_bits_uop_ctrl_funct3[2] | io_in_bits_uop_ctrl_funct3[1] & io_in_bits_uop_ctrl_funct3[0] ? (_sew_sew_oneHot_WIRE_0 ? {2{{2{{2{{2{rs1Imm[7:0]}}}}}}}} : 128'h0) | (_sew_sew_oneHot_WIRE_1 ? {2{{2{{2{rs1Imm[15:0]}}}}}} : 128'h0) | (_sew_sew_oneHot_WIRE_2 ? {2{{2{rs1Imm[31:0]}}}} : 128'h0) | (_sew_sew_oneHot_WIRE_3 ? {2{rs1Imm}} : 128'h0) : io_in_bits_vs1;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:31:38, :33:{19,32,45}, :67:53, VMac.scala:39:19, :40:87, :41:16]
  wire         highHalf = io_in_bits_uop_ctrl_funct6[4:2] == 3'h1 & io_in_bits_uop_ctrl_funct6[1:0] != 2'h1;	// @[VFuBundles.scala:67:53, VMac.scala:47:{24,30,43,52,58}]
  wire         isMacc = io_in_bits_uop_ctrl_funct6[4:3] == 2'h1 | (&(io_in_bits_uop_ctrl_funct6[4:2]));	// @[VMac.scala:47:{24,58}, :48:{22,28,40,55}]
  wire         isSub = io_in_bits_uop_ctrl_funct6[4:3] == 2'h1 & (&(io_in_bits_uop_ctrl_funct6[1:0]));	// @[VMac.scala:47:{52,58}, :48:22, :49:{27,39,54}]
  wire         isFixP = io_in_bits_uop_ctrl_funct6 == 6'h27 & io_in_bits_uop_ctrl_funct3[1:0] == 2'h0;	// @[Cat.scala:33:92, VMac.scala:50:{23,39,48,54}]
  wire         overWriteMultiplicand = io_in_bits_uop_ctrl_funct6[4:2] == 3'h2;	// @[VFuBundles.scala:67:53, VMac.scala:47:24, :51:43]
  wire         _vs2_is_signed_T_4 = (&(io_in_bits_uop_ctrl_funct6[4:0])) | io_in_bits_uop_ctrl_funct6[1:0] == 2'h0;	// @[Cat.scala:33:92, VMac.scala:47:52, :52:{31,37,52,67}]
  wire         vs1_is_signed = io_in_bits_uop_ctrl_funct6[4:2] == 3'h1 & io_in_bits_uop_ctrl_funct6[0] | io_in_bits_uop_ctrl_funct6[4:3] == 2'h1 | (&(io_in_bits_uop_ctrl_funct6[4:3])) & io_in_bits_uop_ctrl_funct6[0];	// @[VFuBundles.scala:67:53, VMac.scala:47:{24,58}, :48:22, :53:{35,48,57,76,88}, :54:{44,56}]
  reg  [3:0]   eewVdS1_oneHot;	// @[Reg.scala:19:16]
  reg  [127:0] oldVdS1;	// @[Reg.scala:19:16]
  reg          taS1;	// @[Reg.scala:19:16]
  reg          maS1;	// @[Reg.scala:19:16]
  reg          vmS1;	// @[Reg.scala:19:16]
  reg          vstart_gte_vl_S1;	// @[Reg.scala:19:16]
  reg  [15:0]  mask16bS1;	// @[Reg.scala:19:16]
  reg  [3:0]   eewVdS2_oneHot;	// @[Reg.scala:19:16]
  reg  [127:0] oldVdS2_r;	// @[Reg.scala:19:16]
  reg          taS2;	// @[Reg.scala:19:16]
  reg          maS2;	// @[Reg.scala:19:16]
  reg          vmS2;	// @[Reg.scala:19:16]
  reg  [15:0]  tailS1;	// @[Reg.scala:19:16]
  reg  [15:0]  tailS2;	// @[Reg.scala:19:16]
  reg  [15:0]  prestartS1;	// @[Reg.scala:19:16]
  reg  [15:0]  prestartS2;	// @[Reg.scala:19:16]
  reg          vstart_gte_vl_S2;	// @[Reg.scala:19:16]
  wire [15:0]  tailReorg = (eewVdS2_oneHot[0] ? tailS2 : 16'h0) | (eewVdS2_oneHot[1] ? {{2{tailS2[7]}}, {2{tailS2[6]}}, {2{tailS2[5]}}, {2{tailS2[4]}}, {2{tailS2[3]}}, {2{tailS2[2]}}, {2{tailS2[1]}}, {2{tailS2[0]}}} : 16'h0) | (eewVdS2_oneHot[2] ? {{4{tailS2[3]}}, {4{tailS2[2]}}, {4{tailS2[1]}}, {4{tailS2[0]}}} : 16'h0) | (eewVdS2_oneHot[3] ? {{8{tailS2[1]}}, {8{tailS2[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, :29:36, Reg.scala:19:16, VFuUtils.scala:101:15, :135:{56,72}]
  wire [15:0]  prestartReorg = (eewVdS2_oneHot[0] ? prestartS2 : 16'h0) | (eewVdS2_oneHot[1] ? {{2{prestartS2[7]}}, {2{prestartS2[6]}}, {2{prestartS2[5]}}, {2{prestartS2[4]}}, {2{prestartS2[3]}}, {2{prestartS2[2]}}, {2{prestartS2[1]}}, {2{prestartS2[0]}}} : 16'h0) | (eewVdS2_oneHot[2] ? {{4{prestartS2[3]}}, {4{prestartS2[2]}}, {4{prestartS2[1]}}, {4{prestartS2[0]}}} : 16'h0) | (eewVdS2_oneHot[3] ? {{8{prestartS2[1]}}, {8{prestartS2[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, :29:36, Reg.scala:19:16, VFuUtils.scala:101:15, :135:{56,72}]
  reg  [15:0]  mask16bS2;	// @[Reg.scala:19:16]
  wire [15:0]  mask16bReorg = (eewVdS2_oneHot[0] ? mask16bS2 : 16'h0) | (eewVdS2_oneHot[1] ? {{2{mask16bS2[7]}}, {2{mask16bS2[6]}}, {2{mask16bS2[5]}}, {2{mask16bS2[4]}}, {2{mask16bS2[3]}}, {2{mask16bS2[2]}}, {2{mask16bS2[1]}}, {2{mask16bS2[0]}}} : 16'h0) | (eewVdS2_oneHot[2] ? {{4{mask16bS2[3]}}, {4{mask16bS2[2]}}, {4{mask16bS2[1]}}, {4{mask16bS2[0]}}} : 16'h0) | (eewVdS2_oneHot[3] ? {{8{mask16bS2[1]}}, {8{mask16bS2[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, :29:36, Reg.scala:19:16, VFuUtils.scala:101:15, :135:{56,72}]
  wire [1:0]   updateType_0 = prestartReorg[0] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[0] ? {1'h1, taS2} : vmS2 | mask16bReorg[0] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_1 = prestartReorg[1] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[1] ? {1'h1, taS2} : vmS2 | mask16bReorg[1] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_2 = prestartReorg[2] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[2] ? {1'h1, taS2} : vmS2 | mask16bReorg[2] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_3 = prestartReorg[3] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[3] ? {1'h1, taS2} : vmS2 | mask16bReorg[3] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_4 = prestartReorg[4] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[4] ? {1'h1, taS2} : vmS2 | mask16bReorg[4] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_5 = prestartReorg[5] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[5] ? {1'h1, taS2} : vmS2 | mask16bReorg[5] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_6 = prestartReorg[6] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[6] ? {1'h1, taS2} : vmS2 | mask16bReorg[6] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_7 = prestartReorg[7] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[7] ? {1'h1, taS2} : vmS2 | mask16bReorg[7] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_8 = prestartReorg[8] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[8] ? {1'h1, taS2} : vmS2 | mask16bReorg[8] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_9 = prestartReorg[9] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[9] ? {1'h1, taS2} : vmS2 | mask16bReorg[9] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_10 = prestartReorg[10] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[10] ? {1'h1, taS2} : vmS2 | mask16bReorg[10] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_11 = prestartReorg[11] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[11] ? {1'h1, taS2} : vmS2 | mask16bReorg[11] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_12 = prestartReorg[12] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[12] ? {1'h1, taS2} : vmS2 | mask16bReorg[12] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_13 = prestartReorg[13] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[13] ? {1'h1, taS2} : vmS2 | mask16bReorg[13] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_14 = prestartReorg[14] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[14] ? {1'h1, taS2} : vmS2 | mask16bReorg[14] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [1:0]   updateType_15 = prestartReorg[15] | vstart_gte_vl_S2 ? 2'h2 : tailReorg[15] ? {1'h1, taS2} : vmS2 | mask16bReorg[15] ? 2'h0 : {1'h1, maS2};	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VMac.scala:114:{24,28,49}, :115:21, :116:{26,31}, :117:{21,27}, :118:{39,44}, :119:{21,27}, :121:21]
  wire [2:0]   veewVd = io_in_bits_uop_info_vsew + {2'h0, io_in_bits_uop_ctrl_widen};	// @[Cat.scala:33:92, VMac.scala:35:41]
  wire         _eewVd_sew_oneHot_WIRE_0 = veewVd == 3'h0;	// @[Cat.scala:33:92, VFuBundles.scala:67:53, VMac.scala:35:41]
  wire         _eewVd_sew_oneHot_WIRE_1 = veewVd == 3'h1;	// @[VFuBundles.scala:67:53, VMac.scala:35:41]
  wire         _eewVd_sew_oneHot_WIRE_2 = veewVd == 3'h2;	// @[VFuBundles.scala:67:53, VMac.scala:35:41]
  wire         _eewVd_sew_oneHot_WIRE_3 = veewVd == 3'h3;	// @[VFuBundles.scala:67:53, VMac.scala:35:41]
  wire [7:0]   _GEN = {1'h0, io_in_bits_uop_info_vstart};	// @[VMac.scala:29:24, :45:50]
  wire [7:0]   _mask16bS1_extracted_T_17 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[7:0] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_0 = _mask16bS1_extracted_T_17[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[3:0] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_32 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[15:8] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_1 = _mask16bS1_extracted_T_32[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[7:4] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_47 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[23:16] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_2 = _mask16bS1_extracted_T_47[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[11:8] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_62 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[31:24] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_3 = _mask16bS1_extracted_T_62[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[15:12] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_77 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[39:32] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_4 = _mask16bS1_extracted_T_77[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[19:16] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_92 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[47:40] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_5 = _mask16bS1_extracted_T_92[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[23:20] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_107 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[55:48] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_6 = _mask16bS1_extracted_T_107[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[27:24] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]   _mask16bS1_extracted_T_122 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[63:56] : 8'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]   _GEN_7 = _mask16bS1_extracted_T_122[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[31:28] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [5:0]   _tail_nElemRemain_T_22 = _eewVd_sew_oneHot_WIRE_1 ? {io_in_bits_uop_uopIdx, 3'h0} : 6'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [4:0]   _GEN_8 = _tail_nElemRemain_T_22[4:0] | (_eewVd_sew_oneHot_WIRE_2 ? {io_in_bits_uop_uopIdx, 2'h0} : 5'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [8:0]   tail_nElemRemain = {1'h0, io_in_bits_uop_info_vl} - {2'h0, (_eewVd_sew_oneHot_WIRE_0 ? {io_in_bits_uop_uopIdx, 4'h0} : 7'h0) | {1'h0, _tail_nElemRemain_T_22[5], _GEN_8[4], _GEN_8[3:0] | (_eewVd_sew_oneHot_WIRE_3 ? {io_in_bits_uop_uopIdx, 1'h0} : 4'h0)}};	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:96:41, VMac.scala:29:24]
  wire [5:0]   _prestart_nElemRemain_T_22 = _eewVd_sew_oneHot_WIRE_1 ? {io_in_bits_uop_uopIdx, 3'h0} : 6'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [4:0]   _GEN_9 = _prestart_nElemRemain_T_22[4:0] | (_eewVd_sew_oneHot_WIRE_2 ? {io_in_bits_uop_uopIdx, 2'h0} : 5'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [7:0]   prestart_nElemRemain = _GEN - {1'h0, (_eewVd_sew_oneHot_WIRE_0 ? {io_in_bits_uop_uopIdx, 4'h0} : 7'h0) | {1'h0, _prestart_nElemRemain_T_22[5], _GEN_9[4], _GEN_9[3:0] | (_eewVd_sew_oneHot_WIRE_3 ? {io_in_bits_uop_uopIdx, 1'h0} : 4'h0)}};	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:116:45, VMac.scala:29:24, :45:50]
  always @(posedge clock) begin
    validS1 <= io_in_valid;	// @[VMac.scala:29:24]
    io_out_valid_REG <= validS1;	// @[VMac.scala:29:24, :30:26]
    if (io_in_valid) begin
      eewVdS1_oneHot <= {_eewVd_sew_oneHot_WIRE_3, _eewVd_sew_oneHot_WIRE_2, _eewVd_sew_oneHot_WIRE_1, _eewVd_sew_oneHot_WIRE_0};	// @[Reg.scala:19:16, VFuBundles.scala:67:{53,63}]
      oldVdS1 <= io_in_bits_oldVd;	// @[Reg.scala:19:16]
      taS1 <= io_in_bits_uop_info_ta;	// @[Reg.scala:19:16]
      maS1 <= io_in_bits_uop_info_ma;	// @[Reg.scala:19:16]
      vmS1 <= io_in_bits_uop_ctrl_vm;	// @[Reg.scala:19:16]
      vstart_gte_vl_S1 <= _GEN >= io_in_bits_uop_info_vl;	// @[Reg.scala:19:16, VMac.scala:45:50]
      mask16bS1 <= (io_in_bits_uop_uopIdx == 3'h0 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[15:0] : 16'h0) | {8'h0, _mask16bS1_extracted_T_17[7:4], _GEN_0[3:2], _GEN_0[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[1:0] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h1 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[31:16] : 16'h0) | {8'h0, _mask16bS1_extracted_T_32[7:4], _GEN_1[3:2], _GEN_1[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[3:2] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h2 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[47:32] : 16'h0) | {8'h0, _mask16bS1_extracted_T_47[7:4], _GEN_2[3:2], _GEN_2[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[5:4] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h3 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[63:48] : 16'h0) | {8'h0, _mask16bS1_extracted_T_62[7:4], _GEN_3[3:2], _GEN_3[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[7:6] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h4 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[79:64] : 16'h0) | {8'h0, _mask16bS1_extracted_T_77[7:4], _GEN_4[3:2], _GEN_4[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[9:8] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h5 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[95:80] : 16'h0) | {8'h0, _mask16bS1_extracted_T_92[7:4], _GEN_5[3:2], _GEN_5[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[11:10] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h6 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[111:96] : 16'h0) | {8'h0, _mask16bS1_extracted_T_107[7:4], _GEN_6[3:2], _GEN_6[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[13:12] : 2'h0)} : 16'h0) | ((&io_in_bits_uop_uopIdx) ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[127:112] : 16'h0) | {8'h0, _mask16bS1_extracted_T_122[7:4], _GEN_7[3:2], _GEN_7[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[15:14] : 2'h0)} : 16'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, Reg.scala:19:16, VFuBundles.scala:67:53, VFuUtils.scala:49:47, :51:18, :101:15]
      if (tail_nElemRemain[8])	// @[VFuUtils.scala:96:41, :100:21]
        tailS1 <= 16'hFFFF;	// @[Reg.scala:19:16, VFuUtils.scala:101:15]
      else if (tail_nElemRemain >= {4'h0, _eewVd_sew_oneHot_WIRE_0, _eewVd_sew_oneHot_WIRE_1, _eewVd_sew_oneHot_WIRE_2, _eewVd_sew_oneHot_WIRE_3, 1'h0})	// @[Cat.scala:33:92, VFuBundles.scala:67:53, VFuUtils.scala:96:41, :102:28, VMac.scala:29:24]
        tailS1 <= 16'h0;	// @[Reg.scala:19:16, VFuUtils.scala:101:15]
      else if (tail_nElemRemain[3])	// @[VFuUtils.scala:73:15, :96:41, :105:39]
        tailS1 <= {tail_nElemRemain[2] ? {tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}, 4'h0} : {4'hF, tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}}, 8'h0};	// @[Bitwise.scala:77:12, Cat.scala:33:92, Reg.scala:19:16, VFuBundles.scala:67:53, VFuUtils.scala:71:16, :73:{10,15,39}, :96:41, :105:39, VMac.scala:48:55]
      else	// @[VFuUtils.scala:73:15, :96:41, :105:39]
        tailS1 <= {8'hFF, tail_nElemRemain[2] ? {tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}, 4'h0} : {4'hF, tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}}};	// @[Bitwise.scala:77:12, Cat.scala:33:92, Reg.scala:19:16, VFuBundles.scala:67:53, VFuUtils.scala:71:16, :73:{10,15,39}, :96:41, :105:39, VMac.scala:48:55]
      if (prestart_nElemRemain[7])	// @[VFuUtils.scala:116:45, :120:21]
        prestartS1 <= 16'h0;	// @[Reg.scala:19:16, VFuUtils.scala:101:15]
      else	// @[VFuUtils.scala:116:45, :120:21]
        prestartS1 <= ~({16{prestart_nElemRemain < {3'h0, _eewVd_sew_oneHot_WIRE_0, _eewVd_sew_oneHot_WIRE_1, _eewVd_sew_oneHot_WIRE_2, _eewVd_sew_oneHot_WIRE_3, 1'h0}}} & (prestart_nElemRemain[3] ? {prestart_nElemRemain[2] ? {prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}, 4'h0} : {4'hF, prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}}, 8'h0} : {8'hFF, prestart_nElemRemain[2] ? {prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}, 4'h0} : {4'hF, prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}}}));	// @[Bitwise.scala:77:12, Cat.scala:33:92, Reg.scala:19:16, VFuBundles.scala:67:53, VFuUtils.scala:71:16, :73:{10,15,39}, :116:45, :122:{28,49}, :123:16, :125:{16,45}, VMac.scala:29:24, :48:55]
    end
    if (validS1) begin	// @[VMac.scala:29:24]
      eewVdS2_oneHot <= eewVdS1_oneHot;	// @[Reg.scala:19:16]
      oldVdS2_r <= oldVdS1;	// @[Reg.scala:19:16]
      taS2 <= taS1;	// @[Reg.scala:19:16]
      maS2 <= maS1;	// @[Reg.scala:19:16]
      vmS2 <= vmS1;	// @[Reg.scala:19:16]
      tailS2 <= tailS1;	// @[Reg.scala:19:16]
      prestartS2 <= prestartS1;	// @[Reg.scala:19:16]
      vstart_gte_vl_S2 <= vstart_gte_vl_S1;	// @[Reg.scala:19:16]
      mask16bS2 <= mask16bS1;	// @[Reg.scala:19:16]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        validS1 = _RANDOM_0[0];	// @[VMac.scala:29:24]
        io_out_valid_REG = _RANDOM_0[1];	// @[VMac.scala:29:24, :30:26]
        eewVdS1_oneHot = _RANDOM_0[5:2];	// @[Reg.scala:19:16, VMac.scala:29:24]
        oldVdS1 = {_RANDOM_0[31:6], _RANDOM_1, _RANDOM_2, _RANDOM_3, _RANDOM_4[5:0]};	// @[Reg.scala:19:16, VMac.scala:29:24]
        taS1 = _RANDOM_4[6];	// @[Reg.scala:19:16]
        maS1 = _RANDOM_4[7];	// @[Reg.scala:19:16]
        vmS1 = _RANDOM_4[8];	// @[Reg.scala:19:16]
        vstart_gte_vl_S1 = _RANDOM_4[9];	// @[Reg.scala:19:16]
        mask16bS1 = _RANDOM_4[25:10];	// @[Reg.scala:19:16]
        eewVdS2_oneHot = _RANDOM_4[29:26];	// @[Reg.scala:19:16]
        oldVdS2_r = {_RANDOM_4[31:30], _RANDOM_5, _RANDOM_6, _RANDOM_7, _RANDOM_8[29:0]};	// @[Reg.scala:19:16]
        taS2 = _RANDOM_8[30];	// @[Reg.scala:19:16]
        maS2 = _RANDOM_8[31];	// @[Reg.scala:19:16]
        vmS2 = _RANDOM_9[0];	// @[Reg.scala:19:16]
        tailS1 = _RANDOM_9[16:1];	// @[Reg.scala:19:16]
        tailS2 = {_RANDOM_9[31:17], _RANDOM_10[0]};	// @[Reg.scala:19:16]
        prestartS1 = _RANDOM_10[16:1];	// @[Reg.scala:19:16]
        prestartS2 = {_RANDOM_10[31:17], _RANDOM_11[0]};	// @[Reg.scala:19:16]
        vstart_gte_vl_S2 = _RANDOM_11[1];	// @[Reg.scala:19:16]
        mask16bS2 = _RANDOM_11[17:2];	// @[Reg.scala:19:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  VMac64b vIMac64bs_0 (	// @[VMac.scala:56:37]
    .clock            (clock),
    .io_fireIn        (io_in_valid),
    .io_fireS1        (validS1),	// @[VMac.scala:29:24]
    .io_sew_oneHot    (sew_oneHot),	// @[VFuBundles.scala:67:63]
    .io_uopIdx        (io_in_bits_uop_uopIdx),
    .io_vxrm          (io_in_bits_uop_info_vxrm),
    .io_vs1           (io_in_bits_uop_ctrl_widen ? {vs1[95:64], vs1[31:0]} : vs1[63:0]),	// @[Cat.scala:33:92, VFuUtils.scala:26:36, VMac.scala:41:16, :70:31]
    .io_vs2           (overWriteMultiplicand ? io_in_bits_oldVd[63:0] : io_in_bits_uop_ctrl_widen ? {io_in_bits_vs2[95:64], io_in_bits_vs2[31:0]} : io_in_bits_vs2[63:0]),	// @[Cat.scala:33:92, VFuUtils.scala:26:36, VMac.scala:51:43, :72:31, :73:31]
    .io_oldVd         (overWriteMultiplicand ? io_in_bits_vs2[63:0] : io_in_bits_oldVd[63:0]),	// @[VFuUtils.scala:26:36, VMac.scala:51:43, :75:33]
    .io_vs1_is_signed (vs1_is_signed),	// @[VMac.scala:53:88]
    .io_vs2_is_signed (~_vs2_is_signed_T_4),	// @[VMac.scala:52:{23,52}]
    .io_highHalf      (highHalf),	// @[VMac.scala:47:43]
    .io_isMacc        (isMacc),	// @[VMac.scala:48:40]
    .io_isSub         (isSub),	// @[VMac.scala:49:39]
    .io_widen         (io_in_bits_uop_ctrl_widen),
    .io_isFixP        (isFixP),	// @[VMac.scala:50:39]
    .io_vd            (_vIMac64bs_0_io_vd),
    .io_vxsat         (_vIMac64bs_0_io_vxsat)
  );
  VMac64b vIMac64bs_1 (	// @[VMac.scala:56:37]
    .clock            (clock),
    .io_fireIn        (io_in_valid),
    .io_fireS1        (validS1),	// @[VMac.scala:29:24]
    .io_sew_oneHot    (sew_oneHot),	// @[VFuBundles.scala:67:63]
    .io_uopIdx        (io_in_bits_uop_uopIdx),
    .io_vxrm          (io_in_bits_uop_info_vxrm),
    .io_vs1           (io_in_bits_uop_ctrl_widen ? {vs1[127:96], vs1[63:32]} : vs1[127:64]),	// @[Cat.scala:33:92, VFuUtils.scala:26:36, VMac.scala:41:16, :70:31]
    .io_vs2           (overWriteMultiplicand ? io_in_bits_oldVd[127:64] : io_in_bits_uop_ctrl_widen ? {io_in_bits_vs2[127:96], io_in_bits_vs2[63:32]} : io_in_bits_vs2[127:64]),	// @[Cat.scala:33:92, VFuUtils.scala:26:36, VMac.scala:51:43, :72:31, :73:31]
    .io_oldVd         (overWriteMultiplicand ? io_in_bits_vs2[127:64] : io_in_bits_oldVd[127:64]),	// @[VFuUtils.scala:26:36, VMac.scala:51:43, :75:33]
    .io_vs1_is_signed (vs1_is_signed),	// @[VMac.scala:53:88]
    .io_vs2_is_signed (~_vs2_is_signed_T_4),	// @[VMac.scala:52:{23,52}]
    .io_highHalf      (highHalf),	// @[VMac.scala:47:43]
    .io_isMacc        (isMacc),	// @[VMac.scala:48:40]
    .io_isSub         (isSub),	// @[VMac.scala:49:39]
    .io_widen         (io_in_bits_uop_ctrl_widen),
    .io_isFixP        (isFixP),	// @[VMac.scala:50:39]
    .io_vd            (_vIMac64bs_1_io_vd),
    .io_vxsat         (_vIMac64bs_1_io_vxsat)
  );
  assign io_out_valid = io_out_valid_REG;	// @[VMac.scala:30:26]
  assign io_out_bits_vd = {_vIMac64bs_1_io_vd, _vIMac64bs_0_io_vd} & {updateType_15[1] ? 8'h0 : 8'hFF, updateType_14[1] ? 8'h0 : 8'hFF, updateType_13[1] ? 8'h0 : 8'hFF, updateType_12[1] ? 8'h0 : 8'hFF, updateType_11[1] ? 8'h0 : 8'hFF, updateType_10[1] ? 8'h0 : 8'hFF, updateType_9[1] ? 8'h0 : 8'hFF, updateType_8[1] ? 8'h0 : 8'hFF, updateType_7[1] ? 8'h0 : 8'hFF, updateType_6[1] ? 8'h0 : 8'hFF, updateType_5[1] ? 8'h0 : 8'hFF, updateType_4[1] ? 8'h0 : 8'hFF, updateType_3[1] ? 8'h0 : 8'hFF, updateType_2[1] ? 8'h0 : 8'hFF, updateType_1[1] ? 8'h0 : 8'hFF, updateType_0[1] ? 8'h0 : 8'hFF} | {updateType_15[1] ? (updateType_15[0] ? 8'hFF : oldVdS2_r[127:120]) : 8'h0, updateType_14[1] ? (updateType_14[0] ? 8'hFF : oldVdS2_r[119:112]) : 8'h0, updateType_13[1] ? (updateType_13[0] ? 8'hFF : oldVdS2_r[111:104]) : 8'h0, updateType_12[1] ? (updateType_12[0] ? 8'hFF : oldVdS2_r[103:96]) : 8'h0, updateType_11[1] ? (updateType_11[0] ? 8'hFF : oldVdS2_r[95:88]) : 8'h0, updateType_10[1] ? (updateType_10[0] ? 8'hFF : oldVdS2_r[87:80]) : 8'h0, updateType_9[1] ? (updateType_9[0] ? 8'hFF : oldVdS2_r[79:72]) : 8'h0, updateType_8[1] ? (updateType_8[0] ? 8'hFF : oldVdS2_r[71:64]) : 8'h0, updateType_7[1] ? (updateType_7[0] ? 8'hFF : oldVdS2_r[63:56]) : 8'h0, updateType_6[1] ? (updateType_6[0] ? 8'hFF : oldVdS2_r[55:48]) : 8'h0, updateType_5[1] ? (updateType_5[0] ? 8'hFF : oldVdS2_r[47:40]) : 8'h0, updateType_4[1] ? (updateType_4[0] ? 8'hFF : oldVdS2_r[39:32]) : 8'h0, updateType_3[1] ? (updateType_3[0] ? 8'hFF : oldVdS2_r[31:24]) : 8'h0, updateType_2[1] ? (updateType_2[0] ? 8'hFF : oldVdS2_r[23:16]) : 8'h0, updateType_1[1] ? (updateType_1[0] ? 8'hFF : oldVdS2_r[15:8]) : 8'h0, updateType_0[1] ? (updateType_0[0] ? 8'hFF : oldVdS2_r[7:0]) : 8'h0};	// @[Bitwise.scala:77:12, Cat.scala:33:92, Reg.scala:19:16, VFuUtils.scala:26:36, VMac.scala:56:37, :114:49, :115:21, :116:31, :125:{45,47}, :127:{12,33,35}, :130:{30,41}]
  assign io_out_bits_vxsat = |({_vIMac64bs_1_io_vxsat, _vIMac64bs_0_io_vxsat} & {~(updateType_15[1]), ~(updateType_14[1]), ~(updateType_13[1]), ~(updateType_12[1]), ~(updateType_11[1]), ~(updateType_10[1]), ~(updateType_9[1]), ~(updateType_8[1]), ~(updateType_7[1]), ~(updateType_6[1]), ~(updateType_5[1]), ~(updateType_4[1]), ~(updateType_3[1]), ~(updateType_2[1]), ~(updateType_1[1]), ~(updateType_0[1])});	// @[Cat.scala:33:92, VMac.scala:56:37, :114:49, :115:21, :116:31, :125:47, :131:64, :132:{44,67}]
endmodule

