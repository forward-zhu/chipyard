// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VFFMA(
  input         clock,
                reset,
                io_in_valid,
  input  [63:0] io_in_bits_vs1,
                io_in_bits_vs2,
                io_in_bits_old_vd,
  input  [7:0]  io_in_bits_prestart,
                io_in_bits_mask,
                io_in_bits_tail,
  input  [4:0]  io_in_bits_uop_ctrl_lsrc_0,
                io_in_bits_uop_ctrl_lsrc_1,
                io_in_bits_uop_ctrl_ldest,
  input         io_in_bits_uop_ctrl_vm,
  input  [5:0]  io_in_bits_uop_ctrl_funct6,
  input  [2:0]  io_in_bits_uop_ctrl_funct3,
  input         io_in_bits_uop_ctrl_widen,
                io_in_bits_uop_ctrl_widen2,
                io_in_bits_uop_ctrl_narrow,
                io_in_bits_uop_ctrl_narrow_to_1,
  input  [6:0]  io_in_bits_uop_info_vstart,
  input  [7:0]  io_in_bits_uop_info_vl,
  input  [1:0]  io_in_bits_uop_info_vxrm,
  input  [2:0]  io_in_bits_uop_info_frm,
                io_in_bits_uop_info_vlmul,
                io_in_bits_uop_info_vsew,
  input         io_in_bits_uop_info_ma,
                io_in_bits_uop_info_ta,
  input  [2:0]  io_in_bits_uop_info_destEew,
                io_in_bits_uop_expdIdx,
  input         io_in_bits_uop_expdEnd,
                io_in_bits_uop_sysUop_robIdx_flag,
  input  [7:0]  io_in_bits_uop_sysUop_robIdx_value,
  input  [63:0] io_in_bits_uop_maskKeep,
                io_in_bits_uop_maskOff,
  input  [1:0]  io_in_bits_uop_vfpCtrl_fmaCmd,
  input         io_in_bits_uop_vfpCtrl_negVs1,
                io_in_bits_uop_vfpCtrl_negVs2,
                io_in_bits_uop_vfpCtrl_negVd,
                io_in_bits_uop_vfpCtrl_switchVdVs2,
                io_in_bits_uop_typeTag,
  output        io_in_ready,
                io_out_valid,
  output [63:0] io_out_bits_vd,
  output [4:0]  io_out_bits_fflags,
                io_out_bits_uop_ctrl_lsrc_0,
                io_out_bits_uop_ctrl_lsrc_1,
                io_out_bits_uop_ctrl_ldest,
  output        io_out_bits_uop_ctrl_vm,
  output [5:0]  io_out_bits_uop_ctrl_funct6,
  output [2:0]  io_out_bits_uop_ctrl_funct3,
  output        io_out_bits_uop_ctrl_widen,
                io_out_bits_uop_ctrl_widen2,
                io_out_bits_uop_ctrl_narrow,
                io_out_bits_uop_ctrl_narrow_to_1,
  output [6:0]  io_out_bits_uop_info_vstart,
  output [7:0]  io_out_bits_uop_info_vl,
  output [1:0]  io_out_bits_uop_info_vxrm,
  output [2:0]  io_out_bits_uop_info_frm,
                io_out_bits_uop_info_vlmul,
                io_out_bits_uop_info_vsew,
  output        io_out_bits_uop_info_ma,
                io_out_bits_uop_info_ta,
  output [2:0]  io_out_bits_uop_info_destEew,
                io_out_bits_uop_expdIdx,
  output        io_out_bits_uop_expdEnd,
                io_out_bits_uop_sysUop_robIdx_flag,
  output [7:0]  io_out_bits_uop_sysUop_robIdx_value,
  output [63:0] io_out_bits_uop_maskKeep,
                io_out_bits_uop_maskOff
);

  wire         _add_pipe_io_out_valid;	// @[VFFMA.scala:323:24]
  wire [63:0]  _add_pipe_io_out_bits_vd;	// @[VFFMA.scala:323:24]
  wire [4:0]   _add_pipe_io_out_bits_fflags;	// @[VFFMA.scala:323:24]
  wire [4:0]   _add_pipe_io_out_bits_uop_ctrl_lsrc_0;	// @[VFFMA.scala:323:24]
  wire [4:0]   _add_pipe_io_out_bits_uop_ctrl_lsrc_1;	// @[VFFMA.scala:323:24]
  wire [4:0]   _add_pipe_io_out_bits_uop_ctrl_ldest;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_ctrl_vm;	// @[VFFMA.scala:323:24]
  wire [5:0]   _add_pipe_io_out_bits_uop_ctrl_funct6;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_ctrl_funct3;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_ctrl_widen;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_ctrl_widen2;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_ctrl_narrow;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_ctrl_narrow_to_1;	// @[VFFMA.scala:323:24]
  wire [6:0]   _add_pipe_io_out_bits_uop_info_vstart;	// @[VFFMA.scala:323:24]
  wire [7:0]   _add_pipe_io_out_bits_uop_info_vl;	// @[VFFMA.scala:323:24]
  wire [1:0]   _add_pipe_io_out_bits_uop_info_vxrm;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_info_frm;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_info_vlmul;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_info_vsew;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_info_ma;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_info_ta;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_info_destEew;	// @[VFFMA.scala:323:24]
  wire [2:0]   _add_pipe_io_out_bits_uop_expdIdx;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_expdEnd;	// @[VFFMA.scala:323:24]
  wire         _add_pipe_io_out_bits_uop_sysUop_robIdx_flag;	// @[VFFMA.scala:323:24]
  wire [7:0]   _add_pipe_io_out_bits_uop_sysUop_robIdx_value;	// @[VFFMA.scala:323:24]
  wire [63:0]  _add_pipe_io_out_bits_uop_maskKeep;	// @[VFFMA.scala:323:24]
  wire [63:0]  _add_pipe_io_out_bits_uop_maskOff;	// @[VFFMA.scala:323:24]
  wire         _mul_pipe_io_in_ready;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_valid;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_io_out_bits_vd;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_io_out_bits_fflags;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_io_out_bits_uop_ctrl_lsrc_0;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_io_out_bits_uop_ctrl_lsrc_1;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_io_out_bits_uop_ctrl_ldest;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_ctrl_vm;	// @[VFFMA.scala:322:24]
  wire [5:0]   _mul_pipe_io_out_bits_uop_ctrl_funct6;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_ctrl_funct3;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_ctrl_widen;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_ctrl_widen2;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_ctrl_narrow;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_ctrl_narrow_to_1;	// @[VFFMA.scala:322:24]
  wire [6:0]   _mul_pipe_io_out_bits_uop_info_vstart;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_io_out_bits_uop_info_vl;	// @[VFFMA.scala:322:24]
  wire [1:0]   _mul_pipe_io_out_bits_uop_info_vxrm;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_info_frm;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_info_vlmul;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_info_vsew;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_info_ma;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_info_ta;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_info_destEew;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_io_out_bits_uop_expdIdx;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_expdEnd;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_io_out_bits_uop_sysUop_robIdx_flag;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_io_out_bits_uop_sysUop_robIdx_value;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_io_out_bits_uop_maskKeep;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_io_out_bits_uop_maskOff;	// @[VFFMA.scala:322:24]
  wire [1:0]   _mul_pipe_io_out_bits_uop_vfpCtrl_fmaCmd;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sign;	// @[VFFMA.scala:322:24]
  wire [10:0]  _mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_exp;	// @[VFFMA.scala:322:24]
  wire [104:0] _mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sig;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isNaN;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInf;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInv;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_overflow;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sign;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_exp;	// @[VFFMA.scala:322:24]
  wire [46:0]  _mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sig;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isNaN;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInf;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInv;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_overflow;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt1_fp_prod_sign;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_mulOutElmt1_fp_prod_exp;	// @[VFFMA.scala:322:24]
  wire [46:0]  _mul_pipe_toAdd_mulOutElmt1_fp_prod_sig;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt1_inter_flags_isNaN;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt1_inter_flags_isInf;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt1_inter_flags_isInv;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_mulOutElmt1_inter_flags_overflow;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_toAdd_addend;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_prestart;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_mask;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_tail;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_toAdd_uop_ctrl_lsrc_0;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_toAdd_uop_ctrl_lsrc_1;	// @[VFFMA.scala:322:24]
  wire [4:0]   _mul_pipe_toAdd_uop_ctrl_ldest;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_ctrl_vm;	// @[VFFMA.scala:322:24]
  wire [5:0]   _mul_pipe_toAdd_uop_ctrl_funct6;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_ctrl_funct3;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_ctrl_widen;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_ctrl_widen2;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_ctrl_narrow;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_ctrl_narrow_to_1;	// @[VFFMA.scala:322:24]
  wire [6:0]   _mul_pipe_toAdd_uop_info_vstart;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_uop_info_vl;	// @[VFFMA.scala:322:24]
  wire [1:0]   _mul_pipe_toAdd_uop_info_vxrm;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_info_frm;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_info_vlmul;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_info_vsew;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_info_ma;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_info_ta;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_info_destEew;	// @[VFFMA.scala:322:24]
  wire [2:0]   _mul_pipe_toAdd_uop_expdIdx;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_expdEnd;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_sysUop_robIdx_flag;	// @[VFFMA.scala:322:24]
  wire [7:0]   _mul_pipe_toAdd_uop_sysUop_robIdx_value;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_toAdd_uop_maskKeep;	// @[VFFMA.scala:322:24]
  wire [63:0]  _mul_pipe_toAdd_uop_maskOff;	// @[VFFMA.scala:322:24]
  wire         _mul_pipe_toAdd_uop_typeTag;	// @[VFFMA.scala:322:24]
  wire         _sourcePrepare_io_out_valid;	// @[VFFMA.scala:319:29]
  wire [63:0]  _sourcePrepare_io_out_bits_vs1;	// @[VFFMA.scala:319:29]
  wire [63:0]  _sourcePrepare_io_out_bits_vs2;	// @[VFFMA.scala:319:29]
  wire [63:0]  _sourcePrepare_io_out_bits_old_vd;	// @[VFFMA.scala:319:29]
  wire [7:0]   _sourcePrepare_io_out_bits_prestart;	// @[VFFMA.scala:319:29]
  wire [7:0]   _sourcePrepare_io_out_bits_mask;	// @[VFFMA.scala:319:29]
  wire [7:0]   _sourcePrepare_io_out_bits_tail;	// @[VFFMA.scala:319:29]
  wire [4:0]   _sourcePrepare_io_out_bits_uop_ctrl_lsrc_0;	// @[VFFMA.scala:319:29]
  wire [4:0]   _sourcePrepare_io_out_bits_uop_ctrl_lsrc_1;	// @[VFFMA.scala:319:29]
  wire [4:0]   _sourcePrepare_io_out_bits_uop_ctrl_ldest;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_ctrl_vm;	// @[VFFMA.scala:319:29]
  wire [5:0]   _sourcePrepare_io_out_bits_uop_ctrl_funct6;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_ctrl_funct3;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_ctrl_widen;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_ctrl_widen2;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_ctrl_narrow;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_ctrl_narrow_to_1;	// @[VFFMA.scala:319:29]
  wire [6:0]   _sourcePrepare_io_out_bits_uop_info_vstart;	// @[VFFMA.scala:319:29]
  wire [7:0]   _sourcePrepare_io_out_bits_uop_info_vl;	// @[VFFMA.scala:319:29]
  wire [1:0]   _sourcePrepare_io_out_bits_uop_info_vxrm;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_info_frm;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_info_vlmul;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_info_vsew;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_info_ma;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_info_ta;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_info_destEew;	// @[VFFMA.scala:319:29]
  wire [2:0]   _sourcePrepare_io_out_bits_uop_expdIdx;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_expdEnd;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_sysUop_robIdx_flag;	// @[VFFMA.scala:319:29]
  wire [7:0]   _sourcePrepare_io_out_bits_uop_sysUop_robIdx_value;	// @[VFFMA.scala:319:29]
  wire [63:0]  _sourcePrepare_io_out_bits_uop_maskKeep;	// @[VFFMA.scala:319:29]
  wire [63:0]  _sourcePrepare_io_out_bits_uop_maskOff;	// @[VFFMA.scala:319:29]
  wire [1:0]   _sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd;	// @[VFFMA.scala:319:29]
  wire         _sourcePrepare_io_out_bits_uop_typeTag;	// @[VFFMA.scala:319:29]
  wire         mulOutIsFMA = _mul_pipe_io_out_valid & _mul_pipe_io_out_bits_uop_vfpCtrl_fmaCmd[1];	// @[VFFMA.scala:322:24, :331:{43,85}]
  wire         isAddSub = _sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd[1] & ~(_sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd[0]);	// @[VFFMA.scala:319:29, :328:70, :337:{31,35,38}]
  VFMASrcPreprocessPipe sourcePrepare (	// @[VFFMA.scala:319:29]
    .clock                               (clock),
    .reset                               (reset),
    .io_in_valid                         (io_in_valid),
    .io_in_bits_vs1                      (io_in_bits_vs1),
    .io_in_bits_vs2                      (io_in_bits_vs2),
    .io_in_bits_old_vd                   (io_in_bits_old_vd),
    .io_in_bits_prestart                 (io_in_bits_prestart),
    .io_in_bits_mask                     (io_in_bits_mask),
    .io_in_bits_tail                     (io_in_bits_tail),
    .io_in_bits_uop_ctrl_lsrc_0          (io_in_bits_uop_ctrl_lsrc_0),
    .io_in_bits_uop_ctrl_lsrc_1          (io_in_bits_uop_ctrl_lsrc_1),
    .io_in_bits_uop_ctrl_ldest           (io_in_bits_uop_ctrl_ldest),
    .io_in_bits_uop_ctrl_vm              (io_in_bits_uop_ctrl_vm),
    .io_in_bits_uop_ctrl_funct6          (io_in_bits_uop_ctrl_funct6),
    .io_in_bits_uop_ctrl_funct3          (io_in_bits_uop_ctrl_funct3),
    .io_in_bits_uop_ctrl_widen           (io_in_bits_uop_ctrl_widen),
    .io_in_bits_uop_ctrl_widen2          (io_in_bits_uop_ctrl_widen2),
    .io_in_bits_uop_ctrl_narrow          (io_in_bits_uop_ctrl_narrow),
    .io_in_bits_uop_ctrl_narrow_to_1     (io_in_bits_uop_ctrl_narrow_to_1),
    .io_in_bits_uop_info_vstart          (io_in_bits_uop_info_vstart),
    .io_in_bits_uop_info_vl              (io_in_bits_uop_info_vl),
    .io_in_bits_uop_info_vxrm            (io_in_bits_uop_info_vxrm),
    .io_in_bits_uop_info_frm             (io_in_bits_uop_info_frm),
    .io_in_bits_uop_info_vlmul           (io_in_bits_uop_info_vlmul),
    .io_in_bits_uop_info_vsew            (io_in_bits_uop_info_vsew),
    .io_in_bits_uop_info_ma              (io_in_bits_uop_info_ma),
    .io_in_bits_uop_info_ta              (io_in_bits_uop_info_ta),
    .io_in_bits_uop_info_destEew         (io_in_bits_uop_info_destEew),
    .io_in_bits_uop_expdIdx              (io_in_bits_uop_expdIdx),
    .io_in_bits_uop_expdEnd              (io_in_bits_uop_expdEnd),
    .io_in_bits_uop_sysUop_robIdx_flag   (io_in_bits_uop_sysUop_robIdx_flag),
    .io_in_bits_uop_sysUop_robIdx_value  (io_in_bits_uop_sysUop_robIdx_value),
    .io_in_bits_uop_maskKeep             (io_in_bits_uop_maskKeep),
    .io_in_bits_uop_maskOff              (io_in_bits_uop_maskOff),
    .io_in_bits_uop_vfpCtrl_fmaCmd       (io_in_bits_uop_vfpCtrl_fmaCmd),
    .io_in_bits_uop_vfpCtrl_negVs1       (io_in_bits_uop_vfpCtrl_negVs1),
    .io_in_bits_uop_vfpCtrl_negVs2       (io_in_bits_uop_vfpCtrl_negVs2),
    .io_in_bits_uop_vfpCtrl_negVd        (io_in_bits_uop_vfpCtrl_negVd),
    .io_in_bits_uop_vfpCtrl_switchVdVs2  (io_in_bits_uop_vfpCtrl_switchVdVs2),
    .io_in_bits_uop_typeTag              (io_in_bits_uop_typeTag),
    .io_out_ready                        (isAddSub ? ~mulOutIsFMA : _mul_pipe_io_in_ready),	// @[VFFMA.scala:322:24, :331:43, :337:35, :352:36, :353:5]
    .io_in_ready                         (io_in_ready),
    .io_out_valid                        (_sourcePrepare_io_out_valid),
    .io_out_bits_vs1                     (_sourcePrepare_io_out_bits_vs1),
    .io_out_bits_vs2                     (_sourcePrepare_io_out_bits_vs2),
    .io_out_bits_old_vd                  (_sourcePrepare_io_out_bits_old_vd),
    .io_out_bits_prestart                (_sourcePrepare_io_out_bits_prestart),
    .io_out_bits_mask                    (_sourcePrepare_io_out_bits_mask),
    .io_out_bits_tail                    (_sourcePrepare_io_out_bits_tail),
    .io_out_bits_uop_ctrl_lsrc_0         (_sourcePrepare_io_out_bits_uop_ctrl_lsrc_0),
    .io_out_bits_uop_ctrl_lsrc_1         (_sourcePrepare_io_out_bits_uop_ctrl_lsrc_1),
    .io_out_bits_uop_ctrl_ldest          (_sourcePrepare_io_out_bits_uop_ctrl_ldest),
    .io_out_bits_uop_ctrl_vm             (_sourcePrepare_io_out_bits_uop_ctrl_vm),
    .io_out_bits_uop_ctrl_funct6         (_sourcePrepare_io_out_bits_uop_ctrl_funct6),
    .io_out_bits_uop_ctrl_funct3         (_sourcePrepare_io_out_bits_uop_ctrl_funct3),
    .io_out_bits_uop_ctrl_widen          (_sourcePrepare_io_out_bits_uop_ctrl_widen),
    .io_out_bits_uop_ctrl_widen2         (_sourcePrepare_io_out_bits_uop_ctrl_widen2),
    .io_out_bits_uop_ctrl_narrow         (_sourcePrepare_io_out_bits_uop_ctrl_narrow),
    .io_out_bits_uop_ctrl_narrow_to_1    (_sourcePrepare_io_out_bits_uop_ctrl_narrow_to_1),
    .io_out_bits_uop_info_vstart         (_sourcePrepare_io_out_bits_uop_info_vstart),
    .io_out_bits_uop_info_vl             (_sourcePrepare_io_out_bits_uop_info_vl),
    .io_out_bits_uop_info_vxrm           (_sourcePrepare_io_out_bits_uop_info_vxrm),
    .io_out_bits_uop_info_frm            (_sourcePrepare_io_out_bits_uop_info_frm),
    .io_out_bits_uop_info_vlmul          (_sourcePrepare_io_out_bits_uop_info_vlmul),
    .io_out_bits_uop_info_vsew           (_sourcePrepare_io_out_bits_uop_info_vsew),
    .io_out_bits_uop_info_ma             (_sourcePrepare_io_out_bits_uop_info_ma),
    .io_out_bits_uop_info_ta             (_sourcePrepare_io_out_bits_uop_info_ta),
    .io_out_bits_uop_info_destEew        (_sourcePrepare_io_out_bits_uop_info_destEew),
    .io_out_bits_uop_expdIdx             (_sourcePrepare_io_out_bits_uop_expdIdx),
    .io_out_bits_uop_expdEnd             (_sourcePrepare_io_out_bits_uop_expdEnd),
    .io_out_bits_uop_sysUop_robIdx_flag  (_sourcePrepare_io_out_bits_uop_sysUop_robIdx_flag),
    .io_out_bits_uop_sysUop_robIdx_value (_sourcePrepare_io_out_bits_uop_sysUop_robIdx_value),
    .io_out_bits_uop_maskKeep            (_sourcePrepare_io_out_bits_uop_maskKeep),
    .io_out_bits_uop_maskOff             (_sourcePrepare_io_out_bits_uop_maskOff),
    .io_out_bits_uop_vfpCtrl_fmaCmd      (_sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd),
    .io_out_bits_uop_typeTag             (_sourcePrepare_io_out_bits_uop_typeTag)
  );
  VFMUL_pipe mul_pipe (	// @[VFFMA.scala:322:24]
    .clock                                       (clock),
    .reset                                       (reset),
    .io_in_valid                                 (_sourcePrepare_io_out_valid & _sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd[0]),	// @[VFFMA.scala:319:29, :328:{54,70}]
    .io_in_bits_vs1                              (_sourcePrepare_io_out_bits_vs1),	// @[VFFMA.scala:319:29]
    .io_in_bits_vs2                              (_sourcePrepare_io_out_bits_vs2),	// @[VFFMA.scala:319:29]
    .io_in_bits_old_vd                           (_sourcePrepare_io_out_bits_old_vd),	// @[VFFMA.scala:319:29]
    .io_in_bits_prestart                         (_sourcePrepare_io_out_bits_prestart),	// @[VFFMA.scala:319:29]
    .io_in_bits_mask                             (_sourcePrepare_io_out_bits_mask),	// @[VFFMA.scala:319:29]
    .io_in_bits_tail                             (_sourcePrepare_io_out_bits_tail),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_lsrc_0                  (_sourcePrepare_io_out_bits_uop_ctrl_lsrc_0),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_lsrc_1                  (_sourcePrepare_io_out_bits_uop_ctrl_lsrc_1),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_ldest                   (_sourcePrepare_io_out_bits_uop_ctrl_ldest),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_vm                      (_sourcePrepare_io_out_bits_uop_ctrl_vm),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_funct6                  (_sourcePrepare_io_out_bits_uop_ctrl_funct6),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_funct3                  (_sourcePrepare_io_out_bits_uop_ctrl_funct3),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_widen                   (_sourcePrepare_io_out_bits_uop_ctrl_widen),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_widen2                  (_sourcePrepare_io_out_bits_uop_ctrl_widen2),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_narrow                  (_sourcePrepare_io_out_bits_uop_ctrl_narrow),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_ctrl_narrow_to_1             (_sourcePrepare_io_out_bits_uop_ctrl_narrow_to_1),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_vstart                  (_sourcePrepare_io_out_bits_uop_info_vstart),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_vl                      (_sourcePrepare_io_out_bits_uop_info_vl),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_vxrm                    (_sourcePrepare_io_out_bits_uop_info_vxrm),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_frm                     (_sourcePrepare_io_out_bits_uop_info_frm),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_vlmul                   (_sourcePrepare_io_out_bits_uop_info_vlmul),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_vsew                    (_sourcePrepare_io_out_bits_uop_info_vsew),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_ma                      (_sourcePrepare_io_out_bits_uop_info_ma),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_ta                      (_sourcePrepare_io_out_bits_uop_info_ta),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_info_destEew                 (_sourcePrepare_io_out_bits_uop_info_destEew),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_expdIdx                      (_sourcePrepare_io_out_bits_uop_expdIdx),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_expdEnd                      (_sourcePrepare_io_out_bits_uop_expdEnd),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_sysUop_robIdx_flag           (_sourcePrepare_io_out_bits_uop_sysUop_robIdx_flag),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_sysUop_robIdx_value          (_sourcePrepare_io_out_bits_uop_sysUop_robIdx_value),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_maskKeep                     (_sourcePrepare_io_out_bits_uop_maskKeep),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_maskOff                      (_sourcePrepare_io_out_bits_uop_maskOff),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_vfpCtrl_fmaCmd               (_sourcePrepare_io_out_bits_uop_vfpCtrl_fmaCmd),	// @[VFFMA.scala:319:29]
    .io_in_bits_uop_typeTag                      (_sourcePrepare_io_out_bits_uop_typeTag),	// @[VFFMA.scala:319:29]
    .io_out_ready                                (mulOutIsFMA | ~_add_pipe_io_out_valid),	// @[VFFMA.scala:323:24, :331:43, :361:{31,83}]
    .io_in_ready                                 (_mul_pipe_io_in_ready),
    .io_out_valid                                (_mul_pipe_io_out_valid),
    .io_out_bits_vd                              (_mul_pipe_io_out_bits_vd),
    .io_out_bits_fflags                          (_mul_pipe_io_out_bits_fflags),
    .io_out_bits_uop_ctrl_lsrc_0                 (_mul_pipe_io_out_bits_uop_ctrl_lsrc_0),
    .io_out_bits_uop_ctrl_lsrc_1                 (_mul_pipe_io_out_bits_uop_ctrl_lsrc_1),
    .io_out_bits_uop_ctrl_ldest                  (_mul_pipe_io_out_bits_uop_ctrl_ldest),
    .io_out_bits_uop_ctrl_vm                     (_mul_pipe_io_out_bits_uop_ctrl_vm),
    .io_out_bits_uop_ctrl_funct6                 (_mul_pipe_io_out_bits_uop_ctrl_funct6),
    .io_out_bits_uop_ctrl_funct3                 (_mul_pipe_io_out_bits_uop_ctrl_funct3),
    .io_out_bits_uop_ctrl_widen                  (_mul_pipe_io_out_bits_uop_ctrl_widen),
    .io_out_bits_uop_ctrl_widen2                 (_mul_pipe_io_out_bits_uop_ctrl_widen2),
    .io_out_bits_uop_ctrl_narrow                 (_mul_pipe_io_out_bits_uop_ctrl_narrow),
    .io_out_bits_uop_ctrl_narrow_to_1            (_mul_pipe_io_out_bits_uop_ctrl_narrow_to_1),
    .io_out_bits_uop_info_vstart                 (_mul_pipe_io_out_bits_uop_info_vstart),
    .io_out_bits_uop_info_vl                     (_mul_pipe_io_out_bits_uop_info_vl),
    .io_out_bits_uop_info_vxrm                   (_mul_pipe_io_out_bits_uop_info_vxrm),
    .io_out_bits_uop_info_frm                    (_mul_pipe_io_out_bits_uop_info_frm),
    .io_out_bits_uop_info_vlmul                  (_mul_pipe_io_out_bits_uop_info_vlmul),
    .io_out_bits_uop_info_vsew                   (_mul_pipe_io_out_bits_uop_info_vsew),
    .io_out_bits_uop_info_ma                     (_mul_pipe_io_out_bits_uop_info_ma),
    .io_out_bits_uop_info_ta                     (_mul_pipe_io_out_bits_uop_info_ta),
    .io_out_bits_uop_info_destEew                (_mul_pipe_io_out_bits_uop_info_destEew),
    .io_out_bits_uop_expdIdx                     (_mul_pipe_io_out_bits_uop_expdIdx),
    .io_out_bits_uop_expdEnd                     (_mul_pipe_io_out_bits_uop_expdEnd),
    .io_out_bits_uop_sysUop_robIdx_flag          (_mul_pipe_io_out_bits_uop_sysUop_robIdx_flag),
    .io_out_bits_uop_sysUop_robIdx_value         (_mul_pipe_io_out_bits_uop_sysUop_robIdx_value),
    .io_out_bits_uop_maskKeep                    (_mul_pipe_io_out_bits_uop_maskKeep),
    .io_out_bits_uop_maskOff                     (_mul_pipe_io_out_bits_uop_maskOff),
    .io_out_bits_uop_vfpCtrl_fmaCmd              (_mul_pipe_io_out_bits_uop_vfpCtrl_fmaCmd),
    .toAdd_mulOutElmt0Vec_1_fp_prod_sign         (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sign),
    .toAdd_mulOutElmt0Vec_1_fp_prod_exp          (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_exp),
    .toAdd_mulOutElmt0Vec_1_fp_prod_sig          (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sig),
    .toAdd_mulOutElmt0Vec_1_inter_flags_isNaN    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isNaN),
    .toAdd_mulOutElmt0Vec_1_inter_flags_isInf    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInf),
    .toAdd_mulOutElmt0Vec_1_inter_flags_isInv    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInv),
    .toAdd_mulOutElmt0Vec_1_inter_flags_overflow (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_overflow),
    .toAdd_mulOutElmt0Vec_0_fp_prod_sign         (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sign),
    .toAdd_mulOutElmt0Vec_0_fp_prod_exp          (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_exp),
    .toAdd_mulOutElmt0Vec_0_fp_prod_sig          (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sig),
    .toAdd_mulOutElmt0Vec_0_inter_flags_isNaN    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isNaN),
    .toAdd_mulOutElmt0Vec_0_inter_flags_isInf    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInf),
    .toAdd_mulOutElmt0Vec_0_inter_flags_isInv    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInv),
    .toAdd_mulOutElmt0Vec_0_inter_flags_overflow (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_overflow),
    .toAdd_mulOutElmt1_fp_prod_sign              (_mul_pipe_toAdd_mulOutElmt1_fp_prod_sign),
    .toAdd_mulOutElmt1_fp_prod_exp               (_mul_pipe_toAdd_mulOutElmt1_fp_prod_exp),
    .toAdd_mulOutElmt1_fp_prod_sig               (_mul_pipe_toAdd_mulOutElmt1_fp_prod_sig),
    .toAdd_mulOutElmt1_inter_flags_isNaN         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isNaN),
    .toAdd_mulOutElmt1_inter_flags_isInf         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isInf),
    .toAdd_mulOutElmt1_inter_flags_isInv         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isInv),
    .toAdd_mulOutElmt1_inter_flags_overflow      (_mul_pipe_toAdd_mulOutElmt1_inter_flags_overflow),
    .toAdd_addend                                (_mul_pipe_toAdd_addend),
    .toAdd_prestart                              (_mul_pipe_toAdd_prestart),
    .toAdd_mask                                  (_mul_pipe_toAdd_mask),
    .toAdd_tail                                  (_mul_pipe_toAdd_tail),
    .toAdd_uop_ctrl_lsrc_0                       (_mul_pipe_toAdd_uop_ctrl_lsrc_0),
    .toAdd_uop_ctrl_lsrc_1                       (_mul_pipe_toAdd_uop_ctrl_lsrc_1),
    .toAdd_uop_ctrl_ldest                        (_mul_pipe_toAdd_uop_ctrl_ldest),
    .toAdd_uop_ctrl_vm                           (_mul_pipe_toAdd_uop_ctrl_vm),
    .toAdd_uop_ctrl_funct6                       (_mul_pipe_toAdd_uop_ctrl_funct6),
    .toAdd_uop_ctrl_funct3                       (_mul_pipe_toAdd_uop_ctrl_funct3),
    .toAdd_uop_ctrl_widen                        (_mul_pipe_toAdd_uop_ctrl_widen),
    .toAdd_uop_ctrl_widen2                       (_mul_pipe_toAdd_uop_ctrl_widen2),
    .toAdd_uop_ctrl_narrow                       (_mul_pipe_toAdd_uop_ctrl_narrow),
    .toAdd_uop_ctrl_narrow_to_1                  (_mul_pipe_toAdd_uop_ctrl_narrow_to_1),
    .toAdd_uop_info_vstart                       (_mul_pipe_toAdd_uop_info_vstart),
    .toAdd_uop_info_vl                           (_mul_pipe_toAdd_uop_info_vl),
    .toAdd_uop_info_vxrm                         (_mul_pipe_toAdd_uop_info_vxrm),
    .toAdd_uop_info_frm                          (_mul_pipe_toAdd_uop_info_frm),
    .toAdd_uop_info_vlmul                        (_mul_pipe_toAdd_uop_info_vlmul),
    .toAdd_uop_info_vsew                         (_mul_pipe_toAdd_uop_info_vsew),
    .toAdd_uop_info_ma                           (_mul_pipe_toAdd_uop_info_ma),
    .toAdd_uop_info_ta                           (_mul_pipe_toAdd_uop_info_ta),
    .toAdd_uop_info_destEew                      (_mul_pipe_toAdd_uop_info_destEew),
    .toAdd_uop_expdIdx                           (_mul_pipe_toAdd_uop_expdIdx),
    .toAdd_uop_expdEnd                           (_mul_pipe_toAdd_uop_expdEnd),
    .toAdd_uop_sysUop_robIdx_flag                (_mul_pipe_toAdd_uop_sysUop_robIdx_flag),
    .toAdd_uop_sysUop_robIdx_value               (_mul_pipe_toAdd_uop_sysUop_robIdx_value),
    .toAdd_uop_maskKeep                          (_mul_pipe_toAdd_uop_maskKeep),
    .toAdd_uop_maskOff                           (_mul_pipe_toAdd_uop_maskOff),
    .toAdd_uop_typeTag                           (_mul_pipe_toAdd_uop_typeTag)
  );
  VFADD_pipe add_pipe (	// @[VFFMA.scala:323:24]
    .clock                                             (clock),
    .reset                                             (reset),
    .io_in_valid                                       (_sourcePrepare_io_out_valid & isAddSub | mulOutIsFMA),	// @[VFFMA.scala:319:29, :331:43, :337:35, :341:{54,66}]
    .io_in_bits_vs1                                    (_sourcePrepare_io_out_bits_vs1),	// @[VFFMA.scala:319:29]
    .io_in_bits_vs2                                    (_sourcePrepare_io_out_bits_vs2),	// @[VFFMA.scala:319:29]
    .io_in_bits_prestart                               (mulOutIsFMA ? _mul_pipe_toAdd_prestart : _sourcePrepare_io_out_bits_prestart),	// @[VFFMA.scala:319:29, :322:24, :331:43, :343:38]
    .io_in_bits_mask                                   (mulOutIsFMA ? _mul_pipe_toAdd_mask : _sourcePrepare_io_out_bits_mask),	// @[VFFMA.scala:319:29, :322:24, :331:43, :344:34]
    .io_in_bits_tail                                   (mulOutIsFMA ? _mul_pipe_toAdd_tail : _sourcePrepare_io_out_bits_tail),	// @[VFFMA.scala:319:29, :322:24, :331:43, :345:34]
    .io_in_bits_uop_ctrl_lsrc_0                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_lsrc_0 : _sourcePrepare_io_out_bits_uop_ctrl_lsrc_0),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_lsrc_1                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_lsrc_1 : _sourcePrepare_io_out_bits_uop_ctrl_lsrc_1),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_ldest                         (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_ldest : _sourcePrepare_io_out_bits_uop_ctrl_ldest),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_vm                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_vm : _sourcePrepare_io_out_bits_uop_ctrl_vm),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_funct6                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_funct6 : _sourcePrepare_io_out_bits_uop_ctrl_funct6),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_funct3                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_funct3 : _sourcePrepare_io_out_bits_uop_ctrl_funct3),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_widen                         (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_widen : _sourcePrepare_io_out_bits_uop_ctrl_widen),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_widen2                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_widen2 : _sourcePrepare_io_out_bits_uop_ctrl_widen2),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_narrow                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_narrow : _sourcePrepare_io_out_bits_uop_ctrl_narrow),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_ctrl_narrow_to_1                   (mulOutIsFMA ? _mul_pipe_toAdd_uop_ctrl_narrow_to_1 : _sourcePrepare_io_out_bits_uop_ctrl_narrow_to_1),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_vstart                        (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_vstart : _sourcePrepare_io_out_bits_uop_info_vstart),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_vl                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_vl : _sourcePrepare_io_out_bits_uop_info_vl),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_vxrm                          (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_vxrm : _sourcePrepare_io_out_bits_uop_info_vxrm),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_frm                           (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_frm : _sourcePrepare_io_out_bits_uop_info_frm),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_vlmul                         (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_vlmul : _sourcePrepare_io_out_bits_uop_info_vlmul),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_vsew                          (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_vsew : _sourcePrepare_io_out_bits_uop_info_vsew),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_ma                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_ma : _sourcePrepare_io_out_bits_uop_info_ma),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_ta                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_ta : _sourcePrepare_io_out_bits_uop_info_ta),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_info_destEew                       (mulOutIsFMA ? _mul_pipe_toAdd_uop_info_destEew : _sourcePrepare_io_out_bits_uop_info_destEew),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_expdIdx                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_expdIdx : _sourcePrepare_io_out_bits_uop_expdIdx),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_expdEnd                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_expdEnd : _sourcePrepare_io_out_bits_uop_expdEnd),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_sysUop_robIdx_flag                 (mulOutIsFMA ? _mul_pipe_toAdd_uop_sysUop_robIdx_flag : _sourcePrepare_io_out_bits_uop_sysUop_robIdx_flag),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_sysUop_robIdx_value                (mulOutIsFMA ? _mul_pipe_toAdd_uop_sysUop_robIdx_value : _sourcePrepare_io_out_bits_uop_sysUop_robIdx_value),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_maskKeep                           (mulOutIsFMA ? _mul_pipe_toAdd_uop_maskKeep : _sourcePrepare_io_out_bits_uop_maskKeep),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_maskOff                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_maskOff : _sourcePrepare_io_out_bits_uop_maskOff),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .io_in_bits_uop_typeTag                            (mulOutIsFMA ? _mul_pipe_toAdd_uop_typeTag : _sourcePrepare_io_out_bits_uop_typeTag),	// @[VFFMA.scala:319:29, :322:24, :331:43, :348:33]
    .mulToAddVec_mulOutElmt0Vec_1_fp_prod_sign         (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sign),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_fp_prod_exp          (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_exp),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_fp_prod_sig          (_mul_pipe_toAdd_mulOutElmt0Vec_1_fp_prod_sig),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_inter_flags_isNaN    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isNaN),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_inter_flags_isInf    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInf),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_inter_flags_isInv    (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_isInv),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_1_inter_flags_overflow (_mul_pipe_toAdd_mulOutElmt0Vec_1_inter_flags_overflow),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_fp_prod_sign         (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sign),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_fp_prod_exp          (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_exp),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_fp_prod_sig          (_mul_pipe_toAdd_mulOutElmt0Vec_0_fp_prod_sig),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_inter_flags_isNaN    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isNaN),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_inter_flags_isInf    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInf),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_inter_flags_isInv    (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_isInv),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt0Vec_0_inter_flags_overflow (_mul_pipe_toAdd_mulOutElmt0Vec_0_inter_flags_overflow),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_fp_prod_sign              (_mul_pipe_toAdd_mulOutElmt1_fp_prod_sign),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_fp_prod_exp               (_mul_pipe_toAdd_mulOutElmt1_fp_prod_exp),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_fp_prod_sig               (_mul_pipe_toAdd_mulOutElmt1_fp_prod_sig),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_inter_flags_isNaN         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isNaN),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_inter_flags_isInf         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isInf),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_inter_flags_isInv         (_mul_pipe_toAdd_mulOutElmt1_inter_flags_isInv),	// @[VFFMA.scala:322:24]
    .mulToAddVec_mulOutElmt1_inter_flags_overflow      (_mul_pipe_toAdd_mulOutElmt1_inter_flags_overflow),	// @[VFFMA.scala:322:24]
    .mulToAddVec_addend                                (_mul_pipe_toAdd_addend),	// @[VFFMA.scala:322:24]
    .mulToAddVec_uop_expdIdx                           (_mul_pipe_toAdd_uop_expdIdx),	// @[VFFMA.scala:322:24]
    .mulToAddVec_uop_typeTag                           (_mul_pipe_toAdd_uop_typeTag),	// @[VFFMA.scala:322:24]
    .isFMA                                             (mulOutIsFMA),	// @[VFFMA.scala:331:43]
    .io_out_valid                                      (_add_pipe_io_out_valid),
    .io_out_bits_vd                                    (_add_pipe_io_out_bits_vd),
    .io_out_bits_fflags                                (_add_pipe_io_out_bits_fflags),
    .io_out_bits_uop_ctrl_lsrc_0                       (_add_pipe_io_out_bits_uop_ctrl_lsrc_0),
    .io_out_bits_uop_ctrl_lsrc_1                       (_add_pipe_io_out_bits_uop_ctrl_lsrc_1),
    .io_out_bits_uop_ctrl_ldest                        (_add_pipe_io_out_bits_uop_ctrl_ldest),
    .io_out_bits_uop_ctrl_vm                           (_add_pipe_io_out_bits_uop_ctrl_vm),
    .io_out_bits_uop_ctrl_funct6                       (_add_pipe_io_out_bits_uop_ctrl_funct6),
    .io_out_bits_uop_ctrl_funct3                       (_add_pipe_io_out_bits_uop_ctrl_funct3),
    .io_out_bits_uop_ctrl_widen                        (_add_pipe_io_out_bits_uop_ctrl_widen),
    .io_out_bits_uop_ctrl_widen2                       (_add_pipe_io_out_bits_uop_ctrl_widen2),
    .io_out_bits_uop_ctrl_narrow                       (_add_pipe_io_out_bits_uop_ctrl_narrow),
    .io_out_bits_uop_ctrl_narrow_to_1                  (_add_pipe_io_out_bits_uop_ctrl_narrow_to_1),
    .io_out_bits_uop_info_vstart                       (_add_pipe_io_out_bits_uop_info_vstart),
    .io_out_bits_uop_info_vl                           (_add_pipe_io_out_bits_uop_info_vl),
    .io_out_bits_uop_info_vxrm                         (_add_pipe_io_out_bits_uop_info_vxrm),
    .io_out_bits_uop_info_frm                          (_add_pipe_io_out_bits_uop_info_frm),
    .io_out_bits_uop_info_vlmul                        (_add_pipe_io_out_bits_uop_info_vlmul),
    .io_out_bits_uop_info_vsew                         (_add_pipe_io_out_bits_uop_info_vsew),
    .io_out_bits_uop_info_ma                           (_add_pipe_io_out_bits_uop_info_ma),
    .io_out_bits_uop_info_ta                           (_add_pipe_io_out_bits_uop_info_ta),
    .io_out_bits_uop_info_destEew                      (_add_pipe_io_out_bits_uop_info_destEew),
    .io_out_bits_uop_expdIdx                           (_add_pipe_io_out_bits_uop_expdIdx),
    .io_out_bits_uop_expdEnd                           (_add_pipe_io_out_bits_uop_expdEnd),
    .io_out_bits_uop_sysUop_robIdx_flag                (_add_pipe_io_out_bits_uop_sysUop_robIdx_flag),
    .io_out_bits_uop_sysUop_robIdx_value               (_add_pipe_io_out_bits_uop_sysUop_robIdx_value),
    .io_out_bits_uop_maskKeep                          (_add_pipe_io_out_bits_uop_maskKeep),
    .io_out_bits_uop_maskOff                           (_add_pipe_io_out_bits_uop_maskOff)
  );
  assign io_out_valid = _add_pipe_io_out_valid | _mul_pipe_io_out_valid & ~mulOutIsFMA;	// @[VFFMA.scala:322:24, :323:24, :331:43, :353:5, :377:{41,67}]
  assign io_out_bits_vd = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_vd : _mul_pipe_io_out_bits_vd;	// @[VFFMA.scala:322:24, :323:24, :368:24]
  assign io_out_bits_fflags = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_fflags : _mul_pipe_io_out_bits_fflags;	// @[VFFMA.scala:322:24, :323:24, :372:28]
  assign io_out_bits_uop_ctrl_lsrc_0 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_lsrc_0 : _mul_pipe_io_out_bits_uop_ctrl_lsrc_0;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_lsrc_1 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_lsrc_1 : _mul_pipe_io_out_bits_uop_ctrl_lsrc_1;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_ldest = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_ldest : _mul_pipe_io_out_bits_uop_ctrl_ldest;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_vm = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_vm : _mul_pipe_io_out_bits_uop_ctrl_vm;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_funct6 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_funct6 : _mul_pipe_io_out_bits_uop_ctrl_funct6;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_funct3 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_funct3 : _mul_pipe_io_out_bits_uop_ctrl_funct3;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_widen = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_widen : _mul_pipe_io_out_bits_uop_ctrl_widen;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_widen2 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_widen2 : _mul_pipe_io_out_bits_uop_ctrl_widen2;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_narrow = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_narrow : _mul_pipe_io_out_bits_uop_ctrl_narrow;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_ctrl_narrow_to_1 = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_ctrl_narrow_to_1 : _mul_pipe_io_out_bits_uop_ctrl_narrow_to_1;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_vstart = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_vstart : _mul_pipe_io_out_bits_uop_info_vstart;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_vl = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_vl : _mul_pipe_io_out_bits_uop_info_vl;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_vxrm = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_vxrm : _mul_pipe_io_out_bits_uop_info_vxrm;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_frm = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_frm : _mul_pipe_io_out_bits_uop_info_frm;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_vlmul = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_vlmul : _mul_pipe_io_out_bits_uop_info_vlmul;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_vsew = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_vsew : _mul_pipe_io_out_bits_uop_info_vsew;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_ma = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_ma : _mul_pipe_io_out_bits_uop_info_ma;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_ta = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_ta : _mul_pipe_io_out_bits_uop_info_ta;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_info_destEew = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_info_destEew : _mul_pipe_io_out_bits_uop_info_destEew;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_expdIdx = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_expdIdx : _mul_pipe_io_out_bits_uop_expdIdx;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_expdEnd = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_expdEnd : _mul_pipe_io_out_bits_uop_expdEnd;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_sysUop_robIdx_flag = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_sysUop_robIdx_flag : _mul_pipe_io_out_bits_uop_sysUop_robIdx_flag;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_sysUop_robIdx_value = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_sysUop_robIdx_value : _mul_pipe_io_out_bits_uop_sysUop_robIdx_value;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_maskKeep = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_maskKeep : _mul_pipe_io_out_bits_uop_maskKeep;	// @[VFFMA.scala:322:24, :323:24, :364:25]
  assign io_out_bits_uop_maskOff = _add_pipe_io_out_valid ? _add_pipe_io_out_bits_uop_maskOff : _mul_pipe_io_out_bits_uop_maskOff;	// @[VFFMA.scala:322:24, :323:24, :364:25]
endmodule

