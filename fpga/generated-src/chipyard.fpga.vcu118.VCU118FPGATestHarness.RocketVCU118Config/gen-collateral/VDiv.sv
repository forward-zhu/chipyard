// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VDiv(
  input          clock,
                 reset,
                 io_in_valid,
  input  [5:0]   io_in_bits_uop_ctrl_funct6,
  input  [2:0]   io_in_bits_uop_ctrl_funct3,
  input          io_in_bits_uop_ctrl_vm,
  input  [4:0]   io_in_bits_uop_ctrl_vs1_imm,
  input          io_in_bits_uop_ctrl_widen,
                 io_in_bits_uop_ctrl_widen2,
                 io_in_bits_uop_ctrl_narrow,
                 io_in_bits_uop_ctrl_narrow_to_1,
                 io_in_bits_uop_info_ma,
                 io_in_bits_uop_info_ta,
  input  [2:0]   io_in_bits_uop_info_vsew,
                 io_in_bits_uop_info_vlmul,
  input  [7:0]   io_in_bits_uop_info_vl,
  input  [6:0]   io_in_bits_uop_info_vstart,
  input  [1:0]   io_in_bits_uop_info_vxrm,
  input  [2:0]   io_in_bits_uop_info_frm,
                 io_in_bits_uop_uopIdx,
  input  [127:0] io_in_bits_vs1,
                 io_in_bits_vs2,
  input  [63:0]  io_in_bits_rs1,
  input  [127:0] io_in_bits_oldVd,
                 io_in_bits_mask,
  output         io_out_valid,
  output [127:0] io_out_bits_vd,
  output [4:0]   io_out_bits_fflags
);

  wire        _divTops_1_io_in_ready;	// @[VDiv.scala:17:35]
  wire        _divTops_1_io_out_valid;	// @[VDiv.scala:17:35]
  wire [63:0] _divTops_1_io_out_bits_vd;	// @[VDiv.scala:17:35]
  wire [4:0]  _divTops_1_io_out_bits_fflags;	// @[VDiv.scala:17:35]
  wire        _divTops_0_io_in_ready;	// @[VDiv.scala:17:35]
  wire        _divTops_0_io_out_valid;	// @[VDiv.scala:17:35]
  wire [63:0] _divTops_0_io_out_bits_vd;	// @[VDiv.scala:17:35]
  wire [4:0]  _divTops_0_io_out_bits_fflags;	// @[VDiv.scala:17:35]
  wire        _eewVd_sew_oneHot_WIRE_0 = io_in_bits_uop_info_vsew == 3'h0;	// @[Cat.scala:33:92, VFuBundles.scala:67:53]
  wire        _eewVd_sew_oneHot_WIRE_1 = io_in_bits_uop_info_vsew == 3'h1;	// @[VFuBundles.scala:67:53]
  wire        _eewVd_sew_oneHot_WIRE_2 = io_in_bits_uop_info_vsew == 3'h2;	// @[VFuBundles.scala:67:53]
  wire        _eewVd_sew_oneHot_WIRE_3 = io_in_bits_uop_info_vsew == 3'h3;	// @[VFuBundles.scala:67:53]
  wire [5:0]  _tail_nElemRemain_T_22 = _eewVd_sew_oneHot_WIRE_1 ? {io_in_bits_uop_uopIdx, 3'h0} : 6'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [4:0]  _GEN = _tail_nElemRemain_T_22[4:0] | (_eewVd_sew_oneHot_WIRE_2 ? {io_in_bits_uop_uopIdx, 2'h0} : 5'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, :266:23]
  wire [8:0]  tail_nElemRemain = {1'h0, io_in_bits_uop_info_vl} - {2'h0, (_eewVd_sew_oneHot_WIRE_0 ? {io_in_bits_uop_uopIdx, 4'h0} : 7'h0) | {1'h0, _tail_nElemRemain_T_22[5], _GEN[4], _GEN[3:0] | (_eewVd_sew_oneHot_WIRE_3 ? {io_in_bits_uop_uopIdx, 1'h0} : 4'h0)}};	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:96:41]
  wire [15:0] tail = tail_nElemRemain[8] ? 16'hFFFF : tail_nElemRemain >= {4'h0, _eewVd_sew_oneHot_WIRE_0, _eewVd_sew_oneHot_WIRE_1, _eewVd_sew_oneHot_WIRE_2, _eewVd_sew_oneHot_WIRE_3, 1'h0} ? 16'h0 : tail_nElemRemain[3] ? {tail_nElemRemain[2] ? {tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}, 4'h0} : {4'hF, tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}}, 8'h0} : {8'hFF, tail_nElemRemain[2] ? {tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}, 4'h0} : {4'hF, tail_nElemRemain[1] ? {1'h1, ~(tail_nElemRemain[0]), 2'h0} : {3'h7, ~(tail_nElemRemain[0])}}};	// @[Bitwise.scala:77:12, Cat.scala:33:92, VFuBundles.scala:67:53, VFuUtils.scala:49:47, :71:16, :73:{10,15,39}, :96:41, :100:{21,33}, :101:{12,15}, :102:{28,49}, :103:12, :105:{12,39}]
  wire [5:0]  _prestart_nElemRemain_T_22 = _eewVd_sew_oneHot_WIRE_1 ? {io_in_bits_uop_uopIdx, 3'h0} : 6'h0;	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53]
  wire [4:0]  _GEN_0 = _prestart_nElemRemain_T_22[4:0] | (_eewVd_sew_oneHot_WIRE_2 ? {io_in_bits_uop_uopIdx, 2'h0} : 5'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, :266:23]
  wire [7:0]  prestart_nElemRemain = {1'h0, io_in_bits_uop_info_vstart} - {1'h0, (_eewVd_sew_oneHot_WIRE_0 ? {io_in_bits_uop_uopIdx, 4'h0} : 7'h0) | {1'h0, _prestart_nElemRemain_T_22[5], _GEN_0[4], _GEN_0[3:0] | (_eewVd_sew_oneHot_WIRE_3 ? {io_in_bits_uop_uopIdx, 1'h0} : 4'h0)}};	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:116:45]
  wire [15:0] _GEN_1 = ~({16{prestart_nElemRemain < {3'h0, _eewVd_sew_oneHot_WIRE_0, _eewVd_sew_oneHot_WIRE_1, _eewVd_sew_oneHot_WIRE_2, _eewVd_sew_oneHot_WIRE_3, 1'h0}}} & (prestart_nElemRemain[3] ? {prestart_nElemRemain[2] ? {prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}, 4'h0} : {4'hF, prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}}, 8'h0} : {8'hFF, prestart_nElemRemain[2] ? {prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}, 4'h0} : {4'hF, prestart_nElemRemain[1] ? {1'h1, ~(prestart_nElemRemain[0]), 2'h0} : {3'h7, ~(prestart_nElemRemain[0])}}}));	// @[Bitwise.scala:77:12, Cat.scala:33:92, VFuBundles.scala:67:53, VFuUtils.scala:49:47, :71:16, :73:{10,15,39}, :116:45, :122:{28,49}, :123:16, :125:{16,45}]
  wire [7:0]  _GEN_2 = prestart_nElemRemain[7] ? 8'h0 : _GEN_1[7:0];	// @[VFuUtils.scala:116:45, :120:{21,37}, :121:16, :122:49, :123:16, :125:16]
  wire [7:0]  _mask16b_extracted_T_17 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[7:0] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_3 = _mask16b_extracted_T_17[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[3:0] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_32 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[15:8] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_4 = _mask16b_extracted_T_32[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[7:4] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_47 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[23:16] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_5 = _mask16b_extracted_T_47[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[11:8] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_62 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[31:24] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_6 = _mask16b_extracted_T_62[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[15:12] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_77 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[39:32] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_7 = _mask16b_extracted_T_77[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[19:16] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_92 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[47:40] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_8 = _mask16b_extracted_T_92[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[23:20] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_107 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[55:48] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_9 = _mask16b_extracted_T_107[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[27:24] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [7:0]  _mask16b_extracted_T_122 = _eewVd_sew_oneHot_WIRE_1 ? io_in_bits_mask[63:56] : 8'h0;	// @[Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]  _GEN_10 = _mask16b_extracted_T_122[3:0] | (_eewVd_sew_oneHot_WIRE_2 ? io_in_bits_mask[31:28] : 4'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [15:0] _mask16b_extracted_WIRE_8 = (io_in_bits_uop_uopIdx == 3'h0 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[15:0] : 16'h0) | {8'h0, _mask16b_extracted_T_17[7:4], _GEN_3[3:2], _GEN_3[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[1:0] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h1 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[31:16] : 16'h0) | {8'h0, _mask16b_extracted_T_32[7:4], _GEN_4[3:2], _GEN_4[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[3:2] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h2 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[47:32] : 16'h0) | {8'h0, _mask16b_extracted_T_47[7:4], _GEN_5[3:2], _GEN_5[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[5:4] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h3 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[63:48] : 16'h0) | {8'h0, _mask16b_extracted_T_62[7:4], _GEN_6[3:2], _GEN_6[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[7:6] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h4 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[79:64] : 16'h0) | {8'h0, _mask16b_extracted_T_77[7:4], _GEN_7[3:2], _GEN_7[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[9:8] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h5 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[95:80] : 16'h0) | {8'h0, _mask16b_extracted_T_92[7:4], _GEN_8[3:2], _GEN_8[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[11:10] : 2'h0)} : 16'h0) | (io_in_bits_uop_uopIdx == 3'h6 ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[111:96] : 16'h0) | {8'h0, _mask16b_extracted_T_107[7:4], _GEN_9[3:2], _GEN_9[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[13:12] : 2'h0)} : 16'h0) | ((&io_in_bits_uop_uopIdx) ? (_eewVd_sew_oneHot_WIRE_0 ? io_in_bits_mask[127:112] : 16'h0) | {8'h0, _mask16b_extracted_T_122[7:4], _GEN_10[3:2], _GEN_10[1:0] | (_eewVd_sew_oneHot_WIRE_3 ? io_in_bits_mask[15:14] : 2'h0)} : 16'h0);	// @[Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:49:47, :51:18, :101:15]
  wire [15:0] tailReorg = (_eewVd_sew_oneHot_WIRE_0 ? tail : 16'h0) | (_eewVd_sew_oneHot_WIRE_1 ? {{2{tail[7]}}, {2{tail[6]}}, {2{tail[5]}}, {2{tail[4]}}, {2{tail[3]}}, {2{tail[2]}}, {2{tail[1]}}, {2{tail[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_2 ? {{4{tail[3]}}, {4{tail[2]}}, {4{tail[1]}}, {4{tail[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_3 ? {{8{tail[1]}}, {8{tail[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:100:33, :101:{12,15}, :102:49, :135:{56,72}]
  wire [15:0] prestartReorg = (~_eewVd_sew_oneHot_WIRE_0 | prestart_nElemRemain[7] ? 16'h0 : _GEN_1) | (_eewVd_sew_oneHot_WIRE_1 ? {{2{_GEN_2[7]}}, {2{_GEN_2[6]}}, {2{_GEN_2[5]}}, {2{_GEN_2[4]}}, {2{_GEN_2[3]}}, {2{_GEN_2[2]}}, {2{_GEN_2[1]}}, {2{_GEN_2[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_2 ? {{4{_GEN_2[3]}}, {4{_GEN_2[2]}}, {4{_GEN_2[1]}}, {4{_GEN_2[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_3 ? {{8{_GEN_2[1]}}, {8{_GEN_2[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:101:15, :116:45, :120:{21,37}, :121:16, :122:49, :123:16, :125:16, :135:{56,72}]
  wire [15:0] mask16bReorg = (_eewVd_sew_oneHot_WIRE_0 ? _mask16b_extracted_WIRE_8 : 16'h0) | (_eewVd_sew_oneHot_WIRE_1 ? {{2{_mask16b_extracted_WIRE_8[7]}}, {2{_mask16b_extracted_WIRE_8[6]}}, {2{_mask16b_extracted_WIRE_8[5]}}, {2{_mask16b_extracted_WIRE_8[4]}}, {2{_mask16b_extracted_WIRE_8[3]}}, {2{_mask16b_extracted_WIRE_8[2]}}, {2{_mask16b_extracted_WIRE_8[1]}}, {2{_mask16b_extracted_WIRE_8[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_2 ? {{4{_mask16b_extracted_WIRE_8[3]}}, {4{_mask16b_extracted_WIRE_8[2]}}, {4{_mask16b_extracted_WIRE_8[1]}}, {4{_mask16b_extracted_WIRE_8[0]}}} : 16'h0) | (_eewVd_sew_oneHot_WIRE_3 ? {{8{_mask16b_extracted_WIRE_8[1]}}, {8{_mask16b_extracted_WIRE_8[0]}}} : 16'h0);	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, VFuBundles.scala:67:53, VFuUtils.scala:101:15, :135:{56,72}]
  reg         outValidReg_0;	// @[VDiv.scala:56:28]
  reg         outValidReg_1;	// @[VDiv.scala:56:28]
  wire        _io_out_valid_output = outValidReg_0 & outValidReg_1;	// @[VDiv.scala:56:28, :58:40]
  reg         isBusy;	// @[VDiv.scala:77:23]
  reg  [63:0] outVdReg_0;	// @[VDiv.scala:89:21]
  reg  [63:0] outVdReg_1;	// @[VDiv.scala:89:21]
  reg  [4:0]  outfflagsReg_0;	// @[VDiv.scala:90:25]
  reg  [4:0]  outfflagsReg_1;	// @[VDiv.scala:90:25]
  always @(posedge clock) begin
    if (reset) begin
      outValidReg_0 <= 1'h0;	// @[VDiv.scala:56:28]
      outValidReg_1 <= 1'h0;	// @[VDiv.scala:56:28]
      isBusy <= 1'h0;	// @[VDiv.scala:77:23]
    end
    else begin
      outValidReg_0 <= _divTops_0_io_out_valid | ~_io_out_valid_output & outValidReg_0;	// @[VDiv.scala:17:35, :56:28, :58:40, :61:36, :62:22, :63:49, :64:22]
      outValidReg_1 <= _divTops_1_io_out_valid | ~_io_out_valid_output & outValidReg_1;	// @[VDiv.scala:17:35, :56:28, :58:40, :61:36, :62:22, :63:49, :64:22]
      isBusy <= _divTops_0_io_in_ready & _divTops_1_io_in_ready & ~isBusy & io_in_valid | ~_io_out_valid_output & isBusy;	// @[Decoupled.scala:51:35, VDiv.scala:17:35, :56:28, :58:40, :63:49, :64:22, :77:23, :78:21, :79:12, :80:47, :81:12, :84:46]
    end
    if (_divTops_0_io_out_valid) begin	// @[VDiv.scala:17:35]
      outVdReg_0 <= _divTops_0_io_out_bits_vd;	// @[VDiv.scala:17:35, :89:21]
      outfflagsReg_0 <= _divTops_0_io_out_bits_fflags;	// @[VDiv.scala:17:35, :90:25]
    end
    if (_divTops_1_io_out_valid) begin	// @[VDiv.scala:17:35]
      outVdReg_1 <= _divTops_1_io_out_bits_vd;	// @[VDiv.scala:17:35, :89:21]
      outfflagsReg_1 <= _divTops_1_io_out_bits_fflags;	// @[VDiv.scala:17:35, :90:25]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        outValidReg_0 = _RANDOM_0[10];	// @[VDiv.scala:56:28]
        outValidReg_1 = _RANDOM_0[11];	// @[VDiv.scala:56:28]
        isBusy = _RANDOM_0[13];	// @[VDiv.scala:56:28, :77:23]
        outVdReg_0 = {_RANDOM_0[31:14], _RANDOM_1, _RANDOM_2[13:0]};	// @[VDiv.scala:56:28, :89:21]
        outVdReg_1 = {_RANDOM_2[31:14], _RANDOM_3, _RANDOM_4[13:0]};	// @[VDiv.scala:89:21]
        outfflagsReg_0 = _RANDOM_4[18:14];	// @[VDiv.scala:89:21, :90:25]
        outfflagsReg_1 = _RANDOM_4[23:19];	// @[VDiv.scala:89:21, :90:25]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  DivTop divTops_0 (	// @[VDiv.scala:17:35]
    .clock                           (clock),
    .reset                           (reset),
    .io_in_valid                     (io_in_valid & ~isBusy),	// @[VDiv.scala:77:23, :84:{43,46}]
    .io_in_bits_uop_ctrl_lsrc_0      (io_in_bits_uop_ctrl_vs1_imm),
    .io_in_bits_uop_ctrl_vm          (io_in_bits_uop_ctrl_vm),
    .io_in_bits_uop_ctrl_funct6      (io_in_bits_uop_ctrl_funct6),
    .io_in_bits_uop_ctrl_funct3      (io_in_bits_uop_ctrl_funct3),
    .io_in_bits_uop_ctrl_narrow_to_1 (io_in_bits_uop_ctrl_narrow_to_1),
    .io_in_bits_uop_info_vstart      (io_in_bits_uop_info_vstart),
    .io_in_bits_uop_info_vl          (io_in_bits_uop_info_vl),
    .io_in_bits_uop_info_frm         (io_in_bits_uop_info_frm),
    .io_in_bits_uop_info_vsew        (io_in_bits_uop_info_vsew),
    .io_in_bits_uop_info_ma          (io_in_bits_uop_info_ma),
    .io_in_bits_uop_info_ta          (io_in_bits_uop_info_ta),
    .io_in_bits_vs1                  (io_in_bits_vs1[63:0]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_vs2                  (io_in_bits_vs2[63:0]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_old_vd               (io_in_bits_oldVd[63:0]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_rs1                  (io_in_bits_rs1),
    .io_in_bits_prestart             (prestartReorg[7:0]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_bits_mask                 (mask16bReorg[7:0]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_bits_tail                 (tailReorg[7:0]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_ready                     (_divTops_0_io_in_ready),
    .io_out_valid                    (_divTops_0_io_out_valid),
    .io_out_bits_vd                  (_divTops_0_io_out_bits_vd),
    .io_out_bits_fflags              (_divTops_0_io_out_bits_fflags)
  );
  DivTop divTops_1 (	// @[VDiv.scala:17:35]
    .clock                           (clock),
    .reset                           (reset),
    .io_in_valid                     (io_in_valid & ~isBusy),	// @[VDiv.scala:77:23, :84:{43,46}]
    .io_in_bits_uop_ctrl_lsrc_0      (io_in_bits_uop_ctrl_vs1_imm),
    .io_in_bits_uop_ctrl_vm          (io_in_bits_uop_ctrl_vm),
    .io_in_bits_uop_ctrl_funct6      (io_in_bits_uop_ctrl_funct6),
    .io_in_bits_uop_ctrl_funct3      (io_in_bits_uop_ctrl_funct3),
    .io_in_bits_uop_ctrl_narrow_to_1 (io_in_bits_uop_ctrl_narrow_to_1),
    .io_in_bits_uop_info_vstart      (io_in_bits_uop_info_vstart),
    .io_in_bits_uop_info_vl          (io_in_bits_uop_info_vl),
    .io_in_bits_uop_info_frm         (io_in_bits_uop_info_frm),
    .io_in_bits_uop_info_vsew        (io_in_bits_uop_info_vsew),
    .io_in_bits_uop_info_ma          (io_in_bits_uop_info_ma),
    .io_in_bits_uop_info_ta          (io_in_bits_uop_info_ta),
    .io_in_bits_vs1                  (io_in_bits_vs1[127:64]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_vs2                  (io_in_bits_vs2[127:64]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_old_vd               (io_in_bits_oldVd[127:64]),	// @[VFuUtils.scala:26:36]
    .io_in_bits_rs1                  (io_in_bits_rs1),
    .io_in_bits_prestart             (prestartReorg[15:8]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_bits_mask                 (mask16bReorg[15:8]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_bits_tail                 (tailReorg[15:8]),	// @[Mux.scala:27:73, VFuUtils.scala:26:36]
    .io_in_ready                     (_divTops_1_io_in_ready),
    .io_out_valid                    (_divTops_1_io_out_valid),
    .io_out_bits_vd                  (_divTops_1_io_out_bits_vd),
    .io_out_bits_fflags              (_divTops_1_io_out_bits_fflags)
  );
  assign io_out_valid = _io_out_valid_output;	// @[VDiv.scala:58:40]
  assign io_out_bits_vd = {outVdReg_1, outVdReg_0};	// @[Cat.scala:33:92, VDiv.scala:89:21]
  assign io_out_bits_fflags = outfflagsReg_1 | outfflagsReg_0;	// @[VDiv.scala:90:25, :99:41]
endmodule

