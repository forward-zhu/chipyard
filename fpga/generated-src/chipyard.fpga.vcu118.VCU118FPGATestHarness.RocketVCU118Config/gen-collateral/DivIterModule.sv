// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module DivIterModule(
  input         clock,
  input  [23:0] io_a,
                io_d,
  input  [1:0]  io_state,
  input         io_lastIterDoHalf,
                io_sigCmp,
  output [27:0] io_rem,
  output [25:0] io_quot,
                io_quotM1
);

  wire [12:0]     _signs2_csa_spec_4_3_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_3_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_2_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_2_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_1_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_1_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_0_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_4_0_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _csa_spec_4_io_out_0;	// @[FDIV.scala:475:22]
  wire [12:0]     _csa_spec_4_io_out_1;	// @[FDIV.scala:475:22]
  wire [12:0]     _signs2_csa_spec_3_3_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_3_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_2_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_2_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_1_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_1_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_0_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_3_0_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _csa_spec_3_io_out_0;	// @[FDIV.scala:475:22]
  wire [12:0]     _csa_spec_3_io_out_1;	// @[FDIV.scala:475:22]
  wire [12:0]     _signs2_csa_spec_2_3_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_3_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_2_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_2_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_1_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_1_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_0_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_2_0_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _csa_spec_2_io_out_0;	// @[FDIV.scala:475:22]
  wire [12:0]     _csa_spec_2_io_out_1;	// @[FDIV.scala:475:22]
  wire [12:0]     _signs2_csa_spec_1_3_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_3_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_2_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_2_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_1_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_1_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_0_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_1_0_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _csa_spec_1_io_out_0;	// @[FDIV.scala:475:22]
  wire [12:0]     _csa_spec_1_io_out_1;	// @[FDIV.scala:475:22]
  wire [12:0]     _signs2_csa_spec_0_3_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_3_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_2_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_2_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_1_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_1_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_0_io_out_0;	// @[FDIV.scala:480:24]
  wire [12:0]     _signs2_csa_spec_0_0_io_out_1;	// @[FDIV.scala:480:24]
  wire [12:0]     _csa_spec_0_io_out_0;	// @[FDIV.scala:475:22]
  wire [12:0]     _csa_spec_0_io_out_1;	// @[FDIV.scala:475:22]
  wire [27:0]     _csa_sel_wide_2_io_out_0;	// @[FDIV.scala:462:24]
  wire [27:0]     _csa_sel_wide_2_io_out_1;	// @[FDIV.scala:462:24]
  wire [27:0]     _csa_sel_wide_1_io_out_0;	// @[FDIV.scala:461:24]
  wire [27:0]     _csa_sel_wide_1_io_out_1;	// @[FDIV.scala:461:24]
  wire [9:0]      _signs_csa_sel_3_io_out_0;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_3_io_out_1;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_2_io_out_0;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_2_io_out_1;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_1_io_out_0;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_1_io_out_1;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_0_io_out_0;	// @[FDIV.scala:453:21]
  wire [9:0]      _signs_csa_sel_0_io_out_1;	// @[FDIV.scala:453:21]
  reg  [7:0]      qPrevReg;	// @[Reg.scala:19:16]
  reg  [27:0]     wsReg;	// @[Reg.scala:19:16]
  reg  [27:0]     wcReg;	// @[Reg.scala:19:16]
  reg  [25:0]     quotIterReg;	// @[Reg.scala:19:16]
  reg  [25:0]     quotM1IterReg;	// @[Reg.scala:19:16]
  reg  [27:0]     udNegReg_0;	// @[Reg.scala:19:16]
  reg  [27:0]     udNegReg_1;	// @[Reg.scala:19:16]
  reg  [27:0]     udNegReg_2;	// @[Reg.scala:19:16]
  reg  [27:0]     udNegReg_3;	// @[Reg.scala:19:16]
  reg  [27:0]     udNegReg_4;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_0_0;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_0_1;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_0_2;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_0_3;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_1_0;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_1_1;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_1_2;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_1_3;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_2_0;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_2_1;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_2_2;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_2_3;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_3_0;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_3_1;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_3_2;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_3_3;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_4_0;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_4_1;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_4_2;	// @[Reg.scala:19:16]
  reg  [9:0]      rudPmNegReg_4_3;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_0_0;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_0_1;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_0_2;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_0_3;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_1_0;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_1_1;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_1_2;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_1_3;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_2_0;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_2_1;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_2_2;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_2_3;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_3_0;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_3_1;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_3_2;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_3_3;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_4_0;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_4_1;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_4_2;	// @[Reg.scala:19:16]
  reg  [12:0]     r2udPmNegReg_4_3;	// @[Reg.scala:19:16]
  wire [9:0]      _GEN = _signs_csa_sel_0_io_out_0 + {_signs_csa_sel_0_io_out_1[8:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:453:21, :458:{20,36}]
  wire [9:0]      _GEN_0 = _signs_csa_sel_1_io_out_0 + {_signs_csa_sel_1_io_out_1[8:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:453:21, :458:{20,36}]
  wire [9:0]      _GEN_1 = _signs_csa_sel_2_io_out_0 + {_signs_csa_sel_2_io_out_1[8:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:453:21, :458:{20,36}]
  wire [9:0]      _GEN_2 = _signs_csa_sel_3_io_out_0 + {_signs_csa_sel_3_io_out_1[8:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:453:21, :458:{20,36}]
  wire            qNext_sel_q_0 = _GEN[9] & _GEN_0[9] & _GEN_1[9];	// @[FDIV.scala:458:{20,49}, :638:40]
  wire            qNext_sel_q_1 = ~(_GEN[9]) & _GEN_0[9] & _GEN_1[9];	// @[FDIV.scala:458:{20,49}, :639:{17,42}]
  wire            qNext_sel_q_2 = _GEN_1[9] & ~(_GEN_0[9]);	// @[FDIV.scala:458:{20,49}, :640:{27,30}]
  wire            qNext_sel_q_3 = _GEN_2[9] & ~(_GEN_1[9]) & ~(_GEN_0[9]);	// @[FDIV.scala:458:{20,49}, :641:{30,42,45}]
  wire            qNext_sel_q_4 = ~(_GEN_2[9]) & ~(_GEN_1[9]) & ~(_GEN_0[9]);	// @[FDIV.scala:458:{20,49}, :642:{17,32,44,47}]
  wire [12:0]     _GEN_3 = _signs2_csa_spec_0_0_io_out_0 + {_signs2_csa_spec_0_0_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_4 = _signs2_csa_spec_0_1_io_out_0 + {_signs2_csa_spec_0_1_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_5 = _signs2_csa_spec_0_2_io_out_0 + {_signs2_csa_spec_0_2_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_6 = _signs2_csa_spec_0_3_io_out_0 + {_signs2_csa_spec_0_3_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_7 = _signs2_csa_spec_1_0_io_out_0 + {_signs2_csa_spec_1_0_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_8 = _signs2_csa_spec_1_1_io_out_0 + {_signs2_csa_spec_1_1_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_9 = _signs2_csa_spec_1_2_io_out_0 + {_signs2_csa_spec_1_2_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_10 = _signs2_csa_spec_1_3_io_out_0 + {_signs2_csa_spec_1_3_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_11 = _signs2_csa_spec_2_0_io_out_0 + {_signs2_csa_spec_2_0_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_12 = _signs2_csa_spec_2_1_io_out_0 + {_signs2_csa_spec_2_1_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_13 = _signs2_csa_spec_2_2_io_out_0 + {_signs2_csa_spec_2_2_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_14 = _signs2_csa_spec_2_3_io_out_0 + {_signs2_csa_spec_2_3_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_15 = _signs2_csa_spec_3_0_io_out_0 + {_signs2_csa_spec_3_0_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_16 = _signs2_csa_spec_3_1_io_out_0 + {_signs2_csa_spec_3_1_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_17 = _signs2_csa_spec_3_2_io_out_0 + {_signs2_csa_spec_3_2_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_18 = _signs2_csa_spec_3_3_io_out_0 + {_signs2_csa_spec_3_3_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_19 = _signs2_csa_spec_4_0_io_out_0 + {_signs2_csa_spec_4_0_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_20 = _signs2_csa_spec_4_1_io_out_0 + {_signs2_csa_spec_4_1_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_21 = _signs2_csa_spec_4_2_io_out_0 + {_signs2_csa_spec_4_2_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [12:0]     _GEN_22 = _signs2_csa_spec_4_3_io_out_0 + {_signs2_csa_spec_4_3_io_out_1[11:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:480:24, :484:{23,40}]
  wire [7:0][5:0] _GEN_23 = '{6'h29, 6'h2B, 6'h2C, 6'h2E, 6'h2F, 6'h31, 6'h32, 6'h34};	// @[Mux.scala:81:{58,61}]
  wire [5:0]      _GEN_24 = {1'h0, io_sigCmp ? io_a[23:19] : {1'h0, io_a[23:20]}};	// @[Cat.scala:33:92, FDIV.scala:373:19, :378:45]
  wire [7:0][5:0] _GEN_25 = '{6'h29, 6'h2B, 6'h2C, 6'h2E, 6'h2F, 6'h31, 6'h32, 6'h34};	// @[Mux.scala:81:{58,61}]
  wire [24:0]     dNeg = 25'h0 - {1'h0, io_d};	// @[Cat.scala:33:92, FDIV.scala:386:14, :503:18]
  wire [9:0]      _GEN_26 = {2'h0, io_d[23:16]};	// @[Cat.scala:33:92, FDIV.scala:438:{91,103}]
  wire [9:0]      _GEN_27 = {3'h0, io_d[23:17]};	// @[Cat.scala:33:92, FDIV.scala:438:{91,103}]
  wire [1:0]      _GEN_28 = {2{dNeg[24]}};	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14]
  wire [9:0]      _GEN_29 = {_GEN_28, dNeg[24:17]};	// @[Cat.scala:33:92, FDIV.scala:386:14, :438:{91,103}]
  wire [12:0]     _GEN_30 = {2'h0, io_d[23:13]};	// @[Cat.scala:33:92, FDIV.scala:436:51, :439:99]
  wire [12:0]     _GEN_31 = {3'h0, io_d[23:14]};	// @[Cat.scala:33:92, FDIV.scala:436:51, :439:99]
  wire [12:0]     _GEN_32 = {_GEN_28, dNeg[24:14]};	// @[Cat.scala:33:92, FDIV.scala:386:14, :436:51, :439:99]
  wire [12:0]     _GEN_33 = {dNeg[24], dNeg[24:13]};	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, :436:51, :439:99]
  wire [25:0]     _GEN_34 = {quotIterReg[23:0], 2'h1};	// @[FDIV.scala:650:21, :651:26, Reg.scala:19:16]
  wire [25:0]     _GEN_35 = {quotIterReg[23:0], 2'h0};	// @[Cat.scala:33:92, FDIV.scala:650:21, Reg.scala:19:16]
  wire [25:0]     _GEN_36 = {quotM1IterReg[23:0], 2'h3};	// @[FDIV.scala:653:{23,28}, Reg.scala:19:16]
  wire [25:0]     _GEN_37 = {quotM1IterReg[23:0], 2'h2};	// @[FDIV.scala:650:26, :653:23, Reg.scala:19:16]
  wire [25:0]     quotHalfIter = (qPrevReg[4] ? {quotIterReg[23:0], 2'h2} : 26'h0) | (qPrevReg[3] ? _GEN_34 : 26'h0) | (qPrevReg[2] ? _GEN_35 : 26'h0) | (qPrevReg[1] ? _GEN_36 : 26'h0) | (qPrevReg[0] ? _GEN_37 : 26'h0);	// @[FDIV.scala:503:18, :650:{21,26}, :653:23, Mux.scala:27:73, :29:36, Reg.scala:19:16]
  wire [25:0]     quotM1HalfIter = (qPrevReg[4] ? _GEN_34 : 26'h0) | (qPrevReg[3] ? _GEN_35 : 26'h0) | (qPrevReg[2] ? _GEN_36 : 26'h0) | (qPrevReg[1] ? _GEN_37 : 26'h0) | (qPrevReg[0] ? {quotM1IterReg[23:0], 2'h1} : 26'h0);	// @[FDIV.scala:503:18, :650:21, :651:26, :653:23, Mux.scala:27:73, :29:36, Reg.scala:19:16]
  wire [25:0]     _GEN_38 = {quotHalfIter[23:0], 2'h1};	// @[FDIV.scala:650:21, :651:26, Mux.scala:27:73]
  wire [25:0]     _GEN_39 = {quotHalfIter[23:0], 2'h0};	// @[Cat.scala:33:92, FDIV.scala:650:21, Mux.scala:27:73]
  wire [25:0]     _GEN_40 = {quotM1HalfIter[23:0], 2'h3};	// @[FDIV.scala:653:{23,28}, Mux.scala:27:73]
  wire [25:0]     _GEN_41 = {quotM1HalfIter[23:0], 2'h2};	// @[FDIV.scala:650:26, :653:23, Mux.scala:27:73]
  wire [5:0]      _GEN_42 = _GEN_24 + ((&(io_d[22:20])) | io_d[22:20] == 3'h6 | io_d[22:20] == 3'h5 ? 6'h3A : io_d[22:20] == 3'h4 ? 6'h3B : {5'h1E, ~(io_d[22:20] == 3'h3 | io_d[22:20] == 3'h2 | io_d[22:20] == 3'h1)});	// @[FDIV.scala:376:17, :378:45, Mux.scala:81:{58,61}]
  wire [5:0]      _GEN_43 = _GEN_24 + _GEN_23[io_d[22:20]];	// @[FDIV.scala:376:17, :378:45, :379:45, Mux.scala:81:{58,61}]
  wire [5:0]      _T_2 = {4'h3, io_d[22:20] == 3'h1, 1'h1};	// @[FDIV.scala:376:17, :639:17, Mux.scala:81:{58,61}]
  wire [7:0][5:0] _GEN_44 = {{6'h18}, {6'h16}, {6'h15}, {6'h13}, {6'h12}, {6'h10}, {_T_2}, {_T_2}};	// @[Mux.scala:81:{58,61}]
  wire [5:0]      _T_14 = _GEN_44[io_d[22:20]];	// @[FDIV.scala:376:17, Mux.scala:81:{58,61}]
  wire [5:0]      _T_33 = (&(io_d[22:20])) | io_d[22:20] == 3'h6 | io_d[22:20] == 3'h5 | io_d[22:20] == 3'h4 ? 6'h8 : {4'h1, io_d[22:20] == 3'h3 | io_d[22:20] == 3'h2 | io_d[22:20] == 3'h1, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:376:17, Mux.scala:81:{58,61}]
  wire [5:0]      _T_52 = (&(io_d[22:20])) | io_d[22:20] == 3'h6 | io_d[22:20] == 3'h5 ? 6'h3A : io_d[22:20] == 3'h4 ? 6'h3B : {5'h1E, ~(io_d[22:20] == 3'h3 | io_d[22:20] == 3'h2 | io_d[22:20] == 3'h1)};	// @[FDIV.scala:376:17, Mux.scala:81:{58,61}]
  wire [5:0]      _T_71 = _GEN_25[io_d[22:20]];	// @[FDIV.scala:376:17, Mux.scala:81:{58,61}]
  wire [2:0]      _GEN_45 = {3{_T_14[5]}};	// @[FDIV.scala:130:20, :438:112, Mux.scala:81:58]
  wire [9:0]      _GEN_46 = {_GEN_45, _T_14, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:{103,112}, Mux.scala:81:58]
  wire [9:0]      _GEN_47 = {3'h0, _T_33, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:103, Mux.scala:81:58]
  wire [9:0]      _GEN_48 = {3'h7, _T_52, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:103, Mux.scala:81:{58,61}]
  wire [2:0]      _GEN_49 = {3{_T_71[5]}};	// @[FDIV.scala:130:20, :438:112, Mux.scala:81:58]
  wire [9:0]      _GEN_50 = {_GEN_49, _T_71, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:{103,112}, Mux.scala:81:58]
  wire [4:0]      _GEN_51 = {5{_T_14[5]}};	// @[Cat.scala:33:92, FDIV.scala:130:20, Mux.scala:81:58]
  wire [12:0]     _GEN_52 = {_GEN_51, _T_14, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58]
  wire [12:0]     _GEN_53 = {5'h0, _T_33, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:27:73, :81:58]
  wire [12:0]     _GEN_54 = {5'h1F, _T_52, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58]
  wire [4:0]      _GEN_55 = {5{_T_71[5]}};	// @[Cat.scala:33:92, FDIV.scala:130:20, Mux.scala:81:58]
  wire [12:0]     _GEN_56 = {_GEN_55, _T_71, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58]
  always @(posedge clock) begin
    if (|io_state) begin	// @[FDIV.scala:416:79]
      if (io_state[0]) begin	// @[FDIV.scala:416:37]
        if (_GEN_42[5])	// @[FDIV.scala:378:{45,105}]
          qPrevReg <= 8'h4;	// @[OneHot.scala:57:35, Reg.scala:19:16]
        else if (_GEN_43[5])	// @[FDIV.scala:379:{45,105}]
          qPrevReg <= 8'h8;	// @[OneHot.scala:57:35, Reg.scala:19:16]
        else	// @[FDIV.scala:379:{45,105}]
          qPrevReg <= 8'h10;	// @[OneHot.scala:57:35, Reg.scala:19:16]
      end
      else	// @[FDIV.scala:416:37]
        qPrevReg <= {3'h0, (qNext_sel_q_0 ? {~(_GEN_6[12]) & ~(_GEN_5[12]) & ~(_GEN_4[12]), _GEN_6[12] & ~(_GEN_5[12]) & ~(_GEN_4[12]), _GEN_5[12] & ~(_GEN_4[12]), ~(_GEN_3[12]) & _GEN_4[12] & _GEN_5[12], _GEN_3[12] & _GEN_4[12] & _GEN_5[12]} : 5'h0) | (qNext_sel_q_1 ? {~(_GEN_10[12]) & ~(_GEN_9[12]) & ~(_GEN_8[12]), _GEN_10[12] & ~(_GEN_9[12]) & ~(_GEN_8[12]), _GEN_9[12] & ~(_GEN_8[12]), ~(_GEN_7[12]) & _GEN_8[12] & _GEN_9[12], _GEN_7[12] & _GEN_8[12] & _GEN_9[12]} : 5'h0) | (qNext_sel_q_2 ? {~(_GEN_14[12]) & ~(_GEN_13[12]) & ~(_GEN_12[12]), _GEN_14[12] & ~(_GEN_13[12]) & ~(_GEN_12[12]), _GEN_13[12] & ~(_GEN_12[12]), ~(_GEN_11[12]) & _GEN_12[12] & _GEN_13[12], _GEN_11[12] & _GEN_12[12] & _GEN_13[12]} : 5'h0) | (qNext_sel_q_3 ? {~(_GEN_18[12]) & ~(_GEN_17[12]) & ~(_GEN_16[12]), _GEN_18[12] & ~(_GEN_17[12]) & ~(_GEN_16[12]), _GEN_17[12] & ~(_GEN_16[12]), ~(_GEN_15[12]) & _GEN_16[12] & _GEN_17[12], _GEN_15[12] & _GEN_16[12] & _GEN_17[12]} : 5'h0) | (qNext_sel_q_4 ? {~(_GEN_22[12]) & ~(_GEN_21[12]) & ~(_GEN_20[12]), _GEN_22[12] & ~(_GEN_21[12]) & ~(_GEN_20[12]), _GEN_21[12] & ~(_GEN_20[12]), ~(_GEN_19[12]) & _GEN_20[12] & _GEN_21[12], _GEN_19[12] & _GEN_20[12] & _GEN_21[12]} : 5'h0)};	// @[Cat.scala:33:92, FDIV.scala:416:31, :484:{23,54}, :638:40, :639:{17,42}, :640:{27,30}, :641:{30,42,45}, :642:{17,32,44,47}, :643:10, Mux.scala:27:73, Reg.scala:19:16]
    end
    if (|io_state) begin	// @[FDIV.scala:417:77]
      if (io_state[0]) begin	// @[FDIV.scala:416:37]
        if (io_sigCmp)
          wsReg <= {2'h0, io_a, 2'h0};	// @[Cat.scala:33:92, Reg.scala:19:16]
        else
          wsReg <= {3'h0, io_a, 1'h0};	// @[Cat.scala:33:92, Reg.scala:19:16]
      end
      else if (io_lastIterDoHalf)
        wsReg <= _csa_sel_wide_1_io_out_0;	// @[FDIV.scala:461:24, Reg.scala:19:16]
      else
        wsReg <= _csa_sel_wide_2_io_out_0;	// @[FDIV.scala:462:24, Reg.scala:19:16]
    end
    if (|io_state) begin	// @[FDIV.scala:418:77]
      if (io_state[0])	// @[FDIV.scala:416:37]
        wcReg <= 28'h0;	// @[FDIV.scala:418:28, Reg.scala:19:16]
      else	// @[FDIV.scala:416:37]
        wcReg <= {io_lastIterDoHalf ? _csa_sel_wide_1_io_out_1[26:0] : _csa_sel_wide_2_io_out_1[26:0], 1'h0};	// @[Cat.scala:33:92, FDIV.scala:461:24, :462:24, :470:{16,61,102}, Reg.scala:19:16]
    end
    if (|io_state) begin	// @[FDIV.scala:419:56]
      if (io_state[1]) begin	// @[FDIV.scala:416:86]
        if (io_lastIterDoHalf)
          quotIterReg <= quotHalfIter;	// @[Mux.scala:27:73, Reg.scala:19:16]
        else
          quotIterReg <= (qNext_sel_q_4 ? {quotHalfIter[23:0], 2'h2} : 26'h0) | (qNext_sel_q_3 ? _GEN_38 : 26'h0) | (qNext_sel_q_2 ? _GEN_39 : 26'h0) | (qNext_sel_q_1 ? _GEN_40 : 26'h0) | (qNext_sel_q_0 ? _GEN_41 : 26'h0);	// @[FDIV.scala:503:18, :638:40, :639:42, :640:27, :641:42, :642:44, :650:{21,26}, :653:23, Mux.scala:27:73, Reg.scala:19:16]
      end
      else	// @[FDIV.scala:416:86]
        quotIterReg <= 26'h0;	// @[FDIV.scala:503:18, Reg.scala:19:16]
    end
    if (|io_state) begin	// @[FDIV.scala:420:60]
      if (io_state[1]) begin	// @[FDIV.scala:416:86]
        if (io_lastIterDoHalf)
          quotM1IterReg <= quotM1HalfIter;	// @[Mux.scala:27:73, Reg.scala:19:16]
        else
          quotM1IterReg <= (qNext_sel_q_4 ? _GEN_38 : 26'h0) | (qNext_sel_q_3 ? _GEN_39 : 26'h0) | (qNext_sel_q_2 ? _GEN_40 : 26'h0) | (qNext_sel_q_1 ? _GEN_41 : 26'h0) | (qNext_sel_q_0 ? {quotM1HalfIter[23:0], 2'h1} : 26'h0);	// @[FDIV.scala:503:18, :638:40, :639:42, :640:27, :641:42, :642:44, :650:21, :651:26, :653:23, Mux.scala:27:73, Reg.scala:19:16]
      end
      else	// @[FDIV.scala:416:86]
        quotM1IterReg <= 26'h0;	// @[FDIV.scala:503:18, Reg.scala:19:16]
    end
    if (io_state[0]) begin	// @[FDIV.scala:416:37]
      udNegReg_0 <= {2'h0, io_d, 2'h0};	// @[Cat.scala:33:92, Reg.scala:19:16]
      udNegReg_1 <= {3'h0, io_d, 1'h0};	// @[Cat.scala:33:92, Reg.scala:19:16]
      udNegReg_2 <= 28'h0;	// @[FDIV.scala:418:28, Reg.scala:19:16]
      udNegReg_3 <= {{2{dNeg[24]}}, dNeg, 1'h0};	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :386:14, Reg.scala:19:16]
      udNegReg_4 <= {dNeg[24], dNeg, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, Reg.scala:19:16]
      rudPmNegReg_0_0 <= _GEN_26 + _GEN_46;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_0_1 <= _GEN_26 + _GEN_47;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_0_2 <= _GEN_26 + _GEN_48;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_0_3 <= _GEN_26 + _GEN_50;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_1_0 <= _GEN_27 + _GEN_46;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_1_1 <= _GEN_27 + _GEN_47;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_1_2 <= _GEN_27 + _GEN_48;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_1_3 <= _GEN_27 + _GEN_50;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_2_0 <= {_GEN_45, _T_14, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:{103,112}, Mux.scala:81:58, Reg.scala:19:16]
      rudPmNegReg_2_1 <= {3'h0, _T_33, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:103, Mux.scala:81:58, Reg.scala:19:16]
      rudPmNegReg_2_2 <= {3'h7, _T_52, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:103, Mux.scala:81:{58,61}, Reg.scala:19:16]
      rudPmNegReg_2_3 <= {_GEN_49, _T_71, 1'h0};	// @[Cat.scala:33:92, FDIV.scala:438:{103,112}, Mux.scala:81:58, Reg.scala:19:16]
      rudPmNegReg_3_0 <= _GEN_29 + _GEN_46;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_3_1 <= _GEN_29 + _GEN_47;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_3_2 <= _GEN_29 + _GEN_48;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_3_3 <= _GEN_29 + _GEN_50;	// @[FDIV.scala:438:103, Reg.scala:19:16]
      rudPmNegReg_4_0 <= {dNeg[24], dNeg[24:16]} + _GEN_46;	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, :438:{91,103}, Reg.scala:19:16]
      rudPmNegReg_4_1 <= {dNeg[24], dNeg[24:16]} + _GEN_47;	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, :438:{91,103}, Reg.scala:19:16]
      rudPmNegReg_4_2 <= {dNeg[24], dNeg[24:16]} + _GEN_48;	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, :438:{91,103}, Reg.scala:19:16]
      rudPmNegReg_4_3 <= {dNeg[24], dNeg[24:16]} + _GEN_50;	// @[Cat.scala:33:92, FDIV.scala:130:20, :386:14, :438:{91,103}, Reg.scala:19:16]
      r2udPmNegReg_0_0 <= _GEN_30 + _GEN_52;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_0_1 <= _GEN_30 + _GEN_53;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_0_2 <= _GEN_30 + _GEN_54;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_0_3 <= _GEN_30 + _GEN_56;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_1_0 <= _GEN_31 + _GEN_52;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_1_1 <= _GEN_31 + _GEN_53;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_1_2 <= _GEN_31 + _GEN_54;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_1_3 <= _GEN_31 + _GEN_56;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_2_0 <= {_GEN_51, _T_14, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58, Reg.scala:19:16]
      r2udPmNegReg_2_1 <= {5'h0, _T_33, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:27:73, :81:58, Reg.scala:19:16]
      r2udPmNegReg_2_2 <= {5'h1F, _T_52, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58, Reg.scala:19:16]
      r2udPmNegReg_2_3 <= {_GEN_55, _T_71, 2'h0};	// @[Cat.scala:33:92, FDIV.scala:439:99, Mux.scala:81:58, Reg.scala:19:16]
      r2udPmNegReg_3_0 <= _GEN_32 + _GEN_52;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_3_1 <= _GEN_32 + _GEN_53;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_3_2 <= _GEN_32 + _GEN_54;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_3_3 <= _GEN_32 + _GEN_56;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_4_0 <= _GEN_33 + _GEN_52;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_4_1 <= _GEN_33 + _GEN_53;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_4_2 <= _GEN_33 + _GEN_54;	// @[FDIV.scala:439:99, Reg.scala:19:16]
      r2udPmNegReg_4_3 <= _GEN_33 + _GEN_56;	// @[FDIV.scala:439:99, Reg.scala:19:16]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        qPrevReg = _RANDOM_0[7:0];	// @[Reg.scala:19:16]
        wsReg = {_RANDOM_0[31:8], _RANDOM_1[3:0]};	// @[Reg.scala:19:16]
        wcReg = _RANDOM_1[31:4];	// @[Reg.scala:19:16]
        quotIterReg = _RANDOM_2[25:0];	// @[Reg.scala:19:16]
        quotM1IterReg = {_RANDOM_2[31:26], _RANDOM_3[19:0]};	// @[Reg.scala:19:16]
        udNegReg_0 = {_RANDOM_3[31:20], _RANDOM_4[15:0]};	// @[Reg.scala:19:16]
        udNegReg_1 = {_RANDOM_4[31:16], _RANDOM_5[11:0]};	// @[Reg.scala:19:16]
        udNegReg_2 = {_RANDOM_5[31:12], _RANDOM_6[7:0]};	// @[Reg.scala:19:16]
        udNegReg_3 = {_RANDOM_6[31:8], _RANDOM_7[3:0]};	// @[Reg.scala:19:16]
        udNegReg_4 = _RANDOM_7[31:4];	// @[Reg.scala:19:16]
        rudPmNegReg_0_0 = _RANDOM_8[9:0];	// @[Reg.scala:19:16]
        rudPmNegReg_0_1 = _RANDOM_8[19:10];	// @[Reg.scala:19:16]
        rudPmNegReg_0_2 = _RANDOM_8[29:20];	// @[Reg.scala:19:16]
        rudPmNegReg_0_3 = {_RANDOM_8[31:30], _RANDOM_9[7:0]};	// @[Reg.scala:19:16]
        rudPmNegReg_1_0 = _RANDOM_9[17:8];	// @[Reg.scala:19:16]
        rudPmNegReg_1_1 = _RANDOM_9[27:18];	// @[Reg.scala:19:16]
        rudPmNegReg_1_2 = {_RANDOM_9[31:28], _RANDOM_10[5:0]};	// @[Reg.scala:19:16]
        rudPmNegReg_1_3 = _RANDOM_10[15:6];	// @[Reg.scala:19:16]
        rudPmNegReg_2_0 = _RANDOM_10[25:16];	// @[Reg.scala:19:16]
        rudPmNegReg_2_1 = {_RANDOM_10[31:26], _RANDOM_11[3:0]};	// @[Reg.scala:19:16]
        rudPmNegReg_2_2 = _RANDOM_11[13:4];	// @[Reg.scala:19:16]
        rudPmNegReg_2_3 = _RANDOM_11[23:14];	// @[Reg.scala:19:16]
        rudPmNegReg_3_0 = {_RANDOM_11[31:24], _RANDOM_12[1:0]};	// @[Reg.scala:19:16]
        rudPmNegReg_3_1 = _RANDOM_12[11:2];	// @[Reg.scala:19:16]
        rudPmNegReg_3_2 = _RANDOM_12[21:12];	// @[Reg.scala:19:16]
        rudPmNegReg_3_3 = _RANDOM_12[31:22];	// @[Reg.scala:19:16]
        rudPmNegReg_4_0 = _RANDOM_13[9:0];	// @[Reg.scala:19:16]
        rudPmNegReg_4_1 = _RANDOM_13[19:10];	// @[Reg.scala:19:16]
        rudPmNegReg_4_2 = _RANDOM_13[29:20];	// @[Reg.scala:19:16]
        rudPmNegReg_4_3 = {_RANDOM_13[31:30], _RANDOM_14[7:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_0_0 = _RANDOM_14[20:8];	// @[Reg.scala:19:16]
        r2udPmNegReg_0_1 = {_RANDOM_14[31:21], _RANDOM_15[1:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_0_2 = _RANDOM_15[14:2];	// @[Reg.scala:19:16]
        r2udPmNegReg_0_3 = _RANDOM_15[27:15];	// @[Reg.scala:19:16]
        r2udPmNegReg_1_0 = {_RANDOM_15[31:28], _RANDOM_16[8:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_1_1 = _RANDOM_16[21:9];	// @[Reg.scala:19:16]
        r2udPmNegReg_1_2 = {_RANDOM_16[31:22], _RANDOM_17[2:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_1_3 = _RANDOM_17[15:3];	// @[Reg.scala:19:16]
        r2udPmNegReg_2_0 = _RANDOM_17[28:16];	// @[Reg.scala:19:16]
        r2udPmNegReg_2_1 = {_RANDOM_17[31:29], _RANDOM_18[9:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_2_2 = _RANDOM_18[22:10];	// @[Reg.scala:19:16]
        r2udPmNegReg_2_3 = {_RANDOM_18[31:23], _RANDOM_19[3:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_3_0 = _RANDOM_19[16:4];	// @[Reg.scala:19:16]
        r2udPmNegReg_3_1 = _RANDOM_19[29:17];	// @[Reg.scala:19:16]
        r2udPmNegReg_3_2 = {_RANDOM_19[31:30], _RANDOM_20[10:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_3_3 = _RANDOM_20[23:11];	// @[Reg.scala:19:16]
        r2udPmNegReg_4_0 = {_RANDOM_20[31:24], _RANDOM_21[4:0]};	// @[Reg.scala:19:16]
        r2udPmNegReg_4_1 = _RANDOM_21[17:5];	// @[Reg.scala:19:16]
        r2udPmNegReg_4_2 = _RANDOM_21[30:18];	// @[Reg.scala:19:16]
        r2udPmNegReg_4_3 = {_RANDOM_21[31], _RANDOM_22[11:0]};	// @[Reg.scala:19:16]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  CSA3_2 signs_csa_sel_0 (	// @[FDIV.scala:453:21]
    .io_in_0  (wsReg[27:18]),	// @[FDIV.scala:443:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:18]),	// @[FDIV.scala:444:16, Reg.scala:19:16]
    .io_in_2  ((qPrevReg[0] ? rudPmNegReg_0_0 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_0 : 10'h0) | (qPrevReg[2] ? rudPmNegReg_2_0 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_0 : 10'h0) | (qPrevReg[4] ? rudPmNegReg_4_0 : 10'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs_csa_sel_0_io_out_0),
    .io_out_1 (_signs_csa_sel_0_io_out_1)
  );
  CSA3_2 signs_csa_sel_1 (	// @[FDIV.scala:453:21]
    .io_in_0  (wsReg[27:18]),	// @[FDIV.scala:443:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:18]),	// @[FDIV.scala:444:16, Reg.scala:19:16]
    .io_in_2  ((qPrevReg[0] ? rudPmNegReg_0_1 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_1 : 10'h0) | (qPrevReg[2] ? rudPmNegReg_2_1 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_1 : 10'h0) | (qPrevReg[4] ? rudPmNegReg_4_1 : 10'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs_csa_sel_1_io_out_0),
    .io_out_1 (_signs_csa_sel_1_io_out_1)
  );
  CSA3_2 signs_csa_sel_2 (	// @[FDIV.scala:453:21]
    .io_in_0  (wsReg[27:18]),	// @[FDIV.scala:443:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:18]),	// @[FDIV.scala:444:16, Reg.scala:19:16]
    .io_in_2  ((qPrevReg[0] ? rudPmNegReg_0_2 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_2 : 10'h0) | (qPrevReg[2] ? rudPmNegReg_2_2 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_2 : 10'h0) | (qPrevReg[4] ? rudPmNegReg_4_2 : 10'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs_csa_sel_2_io_out_0),
    .io_out_1 (_signs_csa_sel_2_io_out_1)
  );
  CSA3_2 signs_csa_sel_3 (	// @[FDIV.scala:453:21]
    .io_in_0  (wsReg[27:18]),	// @[FDIV.scala:443:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:18]),	// @[FDIV.scala:444:16, Reg.scala:19:16]
    .io_in_2  ((qPrevReg[0] ? rudPmNegReg_0_3 : 10'h0) | (qPrevReg[1] ? rudPmNegReg_1_3 : 10'h0) | (qPrevReg[2] ? rudPmNegReg_2_3 : 10'h0) | (qPrevReg[3] ? rudPmNegReg_3_3 : 10'h0) | (qPrevReg[4] ? rudPmNegReg_4_3 : 10'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs_csa_sel_3_io_out_0),
    .io_out_1 (_signs_csa_sel_3_io_out_1)
  );
  CSA3_2_35 csa_sel_wide_1 (	// @[FDIV.scala:461:24]
    .io_in_0  ({wsReg[25:0], 2'h0}),	// @[Cat.scala:33:92, FDIV.scala:463:21, Reg.scala:19:16]
    .io_in_1  ({wcReg[25:0], 2'h0}),	// @[Cat.scala:33:92, FDIV.scala:464:21, Reg.scala:19:16]
    .io_in_2  ({(qPrevReg[0] ? udNegReg_0[25:0] : 26'h0) | (qPrevReg[1] ? udNegReg_1[25:0] : 26'h0) | (qPrevReg[2] ? udNegReg_2[25:0] : 26'h0) | (qPrevReg[3] ? udNegReg_3[25:0] : 26'h0) | (qPrevReg[4] ? udNegReg_4[25:0] : 26'h0), 2'h0}),	// @[Cat.scala:33:92, FDIV.scala:465:21, :503:18, Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_csa_sel_wide_1_io_out_0),
    .io_out_1 (_csa_sel_wide_1_io_out_1)
  );
  CSA3_2_35 csa_sel_wide_2 (	// @[FDIV.scala:462:24]
    .io_in_0  ({_csa_sel_wide_1_io_out_0[25:0], 2'h0}),	// @[Cat.scala:33:92, FDIV.scala:461:24, :466:21]
    .io_in_1  ({_csa_sel_wide_1_io_out_1[24:0], 3'h0}),	// @[Cat.scala:33:92, FDIV.scala:461:24, :467:21]
    .io_in_2  ({(qNext_sel_q_0 ? udNegReg_0[25:0] : 26'h0) | (qNext_sel_q_1 ? udNegReg_1[25:0] : 26'h0) | (qNext_sel_q_2 ? udNegReg_2[25:0] : 26'h0) | (qNext_sel_q_3 ? udNegReg_3[25:0] : 26'h0) | (qNext_sel_q_4 ? udNegReg_4[25:0] : 26'h0), 2'h0}),	// @[Cat.scala:33:92, FDIV.scala:468:21, :503:18, :638:40, :639:42, :640:27, :641:42, :642:44, Mux.scala:27:73, Reg.scala:19:16]
    .io_out_0 (_csa_sel_wide_2_io_out_0),
    .io_out_1 (_csa_sel_wide_2_io_out_1)
  );
  CSA3_2_6 csa_spec_0 (	// @[FDIV.scala:475:22]
    .io_in_0  (wsReg[27:15]),	// @[FDIV.scala:440:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:15]),	// @[FDIV.scala:441:16, Reg.scala:19:16]
    .io_in_2  ({{3{udNegReg_0[26]}}, udNegReg_0[26:17]}),	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :478:46, Reg.scala:19:16]
    .io_out_0 (_csa_spec_0_io_out_0),
    .io_out_1 (_csa_spec_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_0_0 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_0_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_0_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_0_1 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_0_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_0_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_0_2 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_0_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_0_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_0_3 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_0_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_0_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_0_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_0_3_io_out_1)
  );
  CSA3_2_6 csa_spec_1 (	// @[FDIV.scala:475:22]
    .io_in_0  (wsReg[27:15]),	// @[FDIV.scala:440:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:15]),	// @[FDIV.scala:441:16, Reg.scala:19:16]
    .io_in_2  ({{3{udNegReg_1[26]}}, udNegReg_1[26:17]}),	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :478:46, Reg.scala:19:16]
    .io_out_0 (_csa_spec_1_io_out_0),
    .io_out_1 (_csa_spec_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_1_0 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_1_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_1_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_1_1 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_1_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_1_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_1_2 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_1_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_1_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_1_3 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_1_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_1_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_1_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_1_3_io_out_1)
  );
  CSA3_2_6 csa_spec_2 (	// @[FDIV.scala:475:22]
    .io_in_0  (wsReg[27:15]),	// @[FDIV.scala:440:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:15]),	// @[FDIV.scala:441:16, Reg.scala:19:16]
    .io_in_2  ({{3{udNegReg_2[26]}}, udNegReg_2[26:17]}),	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :478:46, Reg.scala:19:16]
    .io_out_0 (_csa_spec_2_io_out_0),
    .io_out_1 (_csa_spec_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_2_0 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_2_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_2_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_2_1 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_2_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_2_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_2_2 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_2_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_2_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_2_3 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_2_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_2_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_2_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_2_3_io_out_1)
  );
  CSA3_2_6 csa_spec_3 (	// @[FDIV.scala:475:22]
    .io_in_0  (wsReg[27:15]),	// @[FDIV.scala:440:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:15]),	// @[FDIV.scala:441:16, Reg.scala:19:16]
    .io_in_2  ({{3{udNegReg_3[26]}}, udNegReg_3[26:17]}),	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :478:46, Reg.scala:19:16]
    .io_out_0 (_csa_spec_3_io_out_0),
    .io_out_1 (_csa_spec_3_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_3_0 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_3_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_3_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_3_1 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_3_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_3_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_3_2 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_3_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_3_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_3_3 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_3_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_3_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_3_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_3_3_io_out_1)
  );
  CSA3_2_6 csa_spec_4 (	// @[FDIV.scala:475:22]
    .io_in_0  (wsReg[27:15]),	// @[FDIV.scala:440:16, Reg.scala:19:16]
    .io_in_1  (wcReg[27:15]),	// @[FDIV.scala:441:16, Reg.scala:19:16]
    .io_in_2  ({{3{udNegReg_4[26]}}, udNegReg_4[26:17]}),	// @[Bitwise.scala:77:12, Cat.scala:33:92, FDIV.scala:130:20, :478:46, Reg.scala:19:16]
    .io_out_0 (_csa_spec_4_io_out_0),
    .io_out_1 (_csa_spec_4_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_4_0 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_4_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_0 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_0 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_0 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_0 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_0 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_4_0_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_0_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_4_1 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_4_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_1 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_1 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_1 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_1 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_1 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_4_1_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_1_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_4_2 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_4_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_2 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_2 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_2 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_2 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_2 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_4_2_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_2_io_out_1)
  );
  CSA3_2_6 signs2_csa_spec_4_3 (	// @[FDIV.scala:480:24]
    .io_in_0  (_csa_spec_4_io_out_0),	// @[FDIV.scala:475:22]
    .io_in_1  ({_csa_spec_4_io_out_1[11:0], 1'h0}),	// @[Cat.scala:33:92, FDIV.scala:475:22, :482:45]
    .io_in_2  ((qPrevReg[0] ? r2udPmNegReg_0_3 : 13'h0) | (qPrevReg[1] ? r2udPmNegReg_1_3 : 13'h0) | (qPrevReg[2] ? r2udPmNegReg_2_3 : 13'h0) | (qPrevReg[3] ? r2udPmNegReg_3_3 : 13'h0) | (qPrevReg[4] ? r2udPmNegReg_4_3 : 13'h0)),	// @[Mux.scala:27:73, :29:36, Reg.scala:19:16]
    .io_out_0 (_signs2_csa_spec_4_3_io_out_0),
    .io_out_1 (_signs2_csa_spec_4_3_io_out_1)
  );
  assign io_rem = wsReg + wcReg;	// @[FDIV.scala:506:19, Reg.scala:19:16]
  assign io_quot = quotIterReg;	// @[Reg.scala:19:16]
  assign io_quotM1 = quotM1IterReg;	// @[Reg.scala:19:16]
endmodule

