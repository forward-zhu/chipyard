// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VCU118FPGATestHarness(
  input         sys_clock_p,
                sys_clock_n,
  inout         uart_txd,
                uart_rxd,
                uart_rtsn,
                uart_ctsn,
                sdio_spi_clk,
                sdio_spi_cs,
                sdio_spi_dat_0,
                sdio_spi_dat_1,
                sdio_spi_dat_2,
                sdio_spi_dat_3,
  inout  [63:0] ddr_c0_ddr4_dq,
  inout  [7:0]  ddr_c0_ddr4_dqs_c,
                ddr_c0_ddr4_dqs_t,
                ddr_c0_ddr4_dm_dbi_n,
  input         reset,
  output [16:0] ddr_c0_ddr4_adr,
  output [1:0]  ddr_c0_ddr4_bg,
                ddr_c0_ddr4_ba,
  output        ddr_c0_ddr4_reset_n,
                ddr_c0_ddr4_act_n,
                ddr_c0_ddr4_ck_c,
                ddr_c0_ddr4_ck_t,
                ddr_c0_ddr4_cke,
                ddr_c0_ddr4_cs_n,
                ddr_c0_ddr4_odt
);

  wire        _WIRE;	// @[TestHarness.scala:115:38]
  wire        _harnessBinderReset_catcher_io_sync_reset;	// @[ResetCatchAndSync.scala:39:28]
  wire        _plusarg_reader_out;	// @[PlusArg.scala:80:11]
  wire        _chiptop0_tl_slave_0_a_valid;	// @[HasHarnessInstantiators.scala:82:40]
  wire [2:0]  _chiptop0_tl_slave_0_a_bits_opcode;	// @[HasHarnessInstantiators.scala:82:40]
  wire [2:0]  _chiptop0_tl_slave_0_a_bits_param;	// @[HasHarnessInstantiators.scala:82:40]
  wire [2:0]  _chiptop0_tl_slave_0_a_bits_size;	// @[HasHarnessInstantiators.scala:82:40]
  wire [3:0]  _chiptop0_tl_slave_0_a_bits_source;	// @[HasHarnessInstantiators.scala:82:40]
  wire [31:0] _chiptop0_tl_slave_0_a_bits_address;	// @[HasHarnessInstantiators.scala:82:40]
  wire [7:0]  _chiptop0_tl_slave_0_a_bits_mask;	// @[HasHarnessInstantiators.scala:82:40]
  wire [63:0] _chiptop0_tl_slave_0_a_bits_data;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_tl_slave_0_a_bits_corrupt;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_tl_slave_0_d_ready;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_sck;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_0_o;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_0_ie;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_0_oe;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_1_o;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_1_ie;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_1_oe;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_2_o;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_2_ie;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_2_oe;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_3_o;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_3_ie;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_dq_3_oe;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_spi_0_cs_0;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _chiptop0_uart_0_txd;	// @[HasHarnessInstantiators.scala:82:40]
  wire        _fpga_power_on_power_on_reset;	// @[Xilinx.scala:104:21]
  wire        _resetIBUF_O;	// @[TestHarness.scala:102:25]
  wire        _a2b_4_b;	// @[Util.scala:30:21]
  wire        _bundleIn_0_rxd_a2b_b;	// @[Util.scala:30:21]
  wire        _sys_clock_ibufds_O;	// @[ClockOverlay.scala:14:24]
  wire        _harnessSysPLL_clk_out1;	// @[XilinxShell.scala:84:55]
  wire        _harnessSysPLL_locked;	// @[XilinxShell.scala:84:55]
  wire        _mig_auto_buffer_in_a_ready;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_auto_buffer_in_d_valid;	// @[VCU118NewShell.scala:312:23]
  wire [2:0]  _mig_auto_buffer_in_d_bits_opcode;	// @[VCU118NewShell.scala:312:23]
  wire [1:0]  _mig_auto_buffer_in_d_bits_param;	// @[VCU118NewShell.scala:312:23]
  wire [3:0]  _mig_auto_buffer_in_d_bits_size;	// @[VCU118NewShell.scala:312:23]
  wire [3:0]  _mig_auto_buffer_in_d_bits_source;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_auto_buffer_in_d_bits_sink;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_auto_buffer_in_d_bits_denied;	// @[VCU118NewShell.scala:312:23]
  wire [63:0] _mig_auto_buffer_in_d_bits_data;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_auto_buffer_in_d_bits_corrupt;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_io_port_c0_ddr4_ui_clk;	// @[VCU118NewShell.scala:312:23]
  wire        _mig_io_port_c0_ddr4_ui_clk_sync_rst;	// @[VCU118NewShell.scala:312:23]
  wire        _dutGroup_auto_out_clock;	// @[ClockGroup.scala:31:15]
  wire        _dutGroup_auto_out_reset;	// @[ClockGroup.scala:31:15]
  wire        _dutWrangler_auto_out_1_reset;	// @[TestHarness.scala:57:31]
  wire        _dutWrangler_auto_out_0_clock;	// @[TestHarness.scala:57:31]
  wire        _dutWrangler_auto_out_0_reset;	// @[TestHarness.scala:57:31]
  reg         bundleIn_0_dq_1_i_REG;	// @[SDIOOverlay.scala:19:39]
  reg         bundleIn_0_dq_1_i_REG_1;	// @[SDIOOverlay.scala:19:31]
  assign _WIRE = _resetIBUF_O | _fpga_power_on_power_on_reset;	// @[TestHarness.scala:102:25, :115:38, Xilinx.scala:104:21]
  always @(posedge _dutWrangler_auto_out_0_clock) begin	// @[TestHarness.scala:57:31]
    bundleIn_0_dq_1_i_REG <= _a2b_4_b;	// @[SDIOOverlay.scala:19:39, Util.scala:30:21]
    bundleIn_0_dq_1_i_REG_1 <= bundleIn_0_dq_1_i_REG;	// @[SDIOOverlay.scala:19:{31,39}]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        bundleIn_0_dq_1_i_REG = _RANDOM_0[2];	// @[SDIOOverlay.scala:19:39]
        bundleIn_0_dq_1_i_REG_1 = _RANDOM_0[3];	// @[SDIOOverlay.scala:19:{31,39}]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  ResetWrangler dutWrangler (	// @[TestHarness.scala:57:31]
    .auto_in_1_clock  (_mig_io_port_c0_ddr4_ui_clk),	// @[VCU118NewShell.scala:312:23]
    .auto_in_1_reset  (_mig_io_port_c0_ddr4_ui_clk_sync_rst),	// @[VCU118NewShell.scala:312:23]
    .auto_in_0_clock  (_dutGroup_auto_out_clock),	// @[ClockGroup.scala:31:15]
    .auto_in_0_reset  (_dutGroup_auto_out_reset),	// @[ClockGroup.scala:31:15]
    .auto_out_1_reset (_dutWrangler_auto_out_1_reset),
    .auto_out_0_clock (_dutWrangler_auto_out_0_clock),
    .auto_out_0_reset (_dutWrangler_auto_out_0_reset)
  );
  ClockGroup dutGroup (	// @[ClockGroup.scala:31:15]
    .auto_in_member_0_clock (_harnessSysPLL_clk_out1),	// @[XilinxShell.scala:84:55]
    .auto_in_member_0_reset (~_harnessSysPLL_locked | _WIRE),	// @[PLLFactory.scala:78:{20,35}, TestHarness.scala:115:38, XilinxShell.scala:84:55]
    .auto_out_clock         (_dutGroup_auto_out_clock),
    .auto_out_reset         (_dutGroup_auto_out_reset)
  );
  XilinxVCU118MIG mig (	// @[VCU118NewShell.scala:312:23]
    .clock                           (_dutWrangler_auto_out_0_clock),	// @[TestHarness.scala:57:31]
    .reset                           (_dutWrangler_auto_out_0_reset),	// @[TestHarness.scala:57:31]
    .auto_buffer_in_a_valid          (_chiptop0_tl_slave_0_a_valid),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_opcode    (_chiptop0_tl_slave_0_a_bits_opcode),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_param     (_chiptop0_tl_slave_0_a_bits_param),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_size      ({1'h0, _chiptop0_tl_slave_0_a_bits_size}),	// @[HarnessBinders.scala:42:23, HasHarnessInstantiators.scala:82:40, LazyModule.scala:411:29]
    .auto_buffer_in_a_bits_source    (_chiptop0_tl_slave_0_a_bits_source),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_address   (_chiptop0_tl_slave_0_a_bits_address),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_mask      (_chiptop0_tl_slave_0_a_bits_mask),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_data      (_chiptop0_tl_slave_0_a_bits_data),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_a_bits_corrupt   (_chiptop0_tl_slave_0_a_bits_corrupt),	// @[HasHarnessInstantiators.scala:82:40]
    .auto_buffer_in_d_ready          (_chiptop0_tl_slave_0_d_ready),	// @[HasHarnessInstantiators.scala:82:40]
    .io_port_c0_ddr4_dq              (ddr_c0_ddr4_dq),
    .io_port_c0_ddr4_dqs_c           (ddr_c0_ddr4_dqs_c),
    .io_port_c0_ddr4_dqs_t           (ddr_c0_ddr4_dqs_t),
    .io_port_c0_ddr4_dm_dbi_n        (ddr_c0_ddr4_dm_dbi_n),
    .io_port_c0_sys_clk_i            (_sys_clock_ibufds_O),	// @[ClockOverlay.scala:14:24]
    .io_port_c0_ddr4_aresetn         (~_dutWrangler_auto_out_1_reset),	// @[TestHarness.scala:57:31, VCU118NewShell.scala:335:29]
    .io_port_sys_rst                 (_WIRE),	// @[TestHarness.scala:115:38]
    .auto_buffer_in_a_ready          (_mig_auto_buffer_in_a_ready),
    .auto_buffer_in_d_valid          (_mig_auto_buffer_in_d_valid),
    .auto_buffer_in_d_bits_opcode    (_mig_auto_buffer_in_d_bits_opcode),
    .auto_buffer_in_d_bits_param     (_mig_auto_buffer_in_d_bits_param),
    .auto_buffer_in_d_bits_size      (_mig_auto_buffer_in_d_bits_size),
    .auto_buffer_in_d_bits_source    (_mig_auto_buffer_in_d_bits_source),
    .auto_buffer_in_d_bits_sink      (_mig_auto_buffer_in_d_bits_sink),
    .auto_buffer_in_d_bits_denied    (_mig_auto_buffer_in_d_bits_denied),
    .auto_buffer_in_d_bits_data      (_mig_auto_buffer_in_d_bits_data),
    .auto_buffer_in_d_bits_corrupt   (_mig_auto_buffer_in_d_bits_corrupt),
    .io_port_c0_ddr4_adr             (ddr_c0_ddr4_adr),
    .io_port_c0_ddr4_bg              (ddr_c0_ddr4_bg),
    .io_port_c0_ddr4_ba              (ddr_c0_ddr4_ba),
    .io_port_c0_ddr4_reset_n         (ddr_c0_ddr4_reset_n),
    .io_port_c0_ddr4_act_n           (ddr_c0_ddr4_act_n),
    .io_port_c0_ddr4_ck_c            (ddr_c0_ddr4_ck_c),
    .io_port_c0_ddr4_ck_t            (ddr_c0_ddr4_ck_t),
    .io_port_c0_ddr4_cke             (ddr_c0_ddr4_cke),
    .io_port_c0_ddr4_cs_n            (ddr_c0_ddr4_cs_n),
    .io_port_c0_ddr4_odt             (ddr_c0_ddr4_odt),
    .io_port_c0_ddr4_ui_clk          (_mig_io_port_c0_ddr4_ui_clk),
    .io_port_c0_ddr4_ui_clk_sync_rst (_mig_io_port_c0_ddr4_ui_clk_sync_rst)
  );
  harnessSysPLL harnessSysPLL (	// @[XilinxShell.scala:84:55]
    .clk_in1  (_sys_clock_ibufds_O),	// @[ClockOverlay.scala:14:24]
    .reset    (_WIRE),	// @[TestHarness.scala:115:38]
    .clk_out1 (_harnessSysPLL_clk_out1),
    .locked   (_harnessSysPLL_locked)
  );
  IBUFDS #(
    .DIFF_TERM("FALSE"),
    .IOSTANDARD("DEFAULT"),
    .DQS_BIAS("FALSE"),
    .CAPACITANCE("DONT_CARE"),
    .IFD_DELAY_VALUE("AUTO"),
    .IBUF_LOW_PWR("TRUE"),
    .IBUF_DELAY_VALUE(0)
  ) sys_clock_ibufds (	// @[ClockOverlay.scala:14:24]
    .I  (sys_clock_p),
    .IB (sys_clock_n),
    .O  (_sys_clock_ibufds_O)
  );
  UIntToAnalog_1 a2b (	// @[Util.scala:58:21]
    .a    (uart_txd),
    .b    (_chiptop0_uart_0_txd),	// @[HasHarnessInstantiators.scala:82:40]
    .b_en (1'h1)	// @[WidthWidget.scala:206:20]
  );
  AnalogToUInt_1 bundleIn_0_rxd_a2b (	// @[Util.scala:30:21]
    .a (uart_rxd),
    .b (_bundleIn_0_rxd_a2b_b)
  );
  UIntToAnalog_1 a2b_1 (	// @[Util.scala:58:21]
    .a    (sdio_spi_clk),
    .b    (_chiptop0_spi_0_sck),	// @[HasHarnessInstantiators.scala:82:40]
    .b_en (1'h1)	// @[WidthWidget.scala:206:20]
  );
  UIntToAnalog_1 a2b_2 (	// @[Util.scala:58:21]
    .a    (sdio_spi_dat_3),
    .b    (_chiptop0_spi_0_cs_0),	// @[HasHarnessInstantiators.scala:82:40]
    .b_en (1'h1)	// @[WidthWidget.scala:206:20]
  );
  UIntToAnalog_1 a2b_3 (	// @[Util.scala:58:21]
    .a    (sdio_spi_cs),
    .b    (_chiptop0_spi_0_dq_0_o),	// @[HasHarnessInstantiators.scala:82:40]
    .b_en (1'h1)	// @[WidthWidget.scala:206:20]
  );
  AnalogToUInt_1 a2b_4 (	// @[Util.scala:30:21]
    .a (sdio_spi_dat_0),
    .b (_a2b_4_b)
  );
  IBUF resetIBUF (	// @[TestHarness.scala:102:25]
    .I (reset),
    .O (_resetIBUF_O)
  );
  PowerOnResetFPGAOnly fpga_power_on (	// @[Xilinx.scala:104:21]
    .clock          (_sys_clock_ibufds_O),	// @[ClockOverlay.scala:14:24]
    .power_on_reset (_fpga_power_on_power_on_reset)
  );
  ChipTop chiptop0 (	// @[HasHarnessInstantiators.scala:82:40]
    .tl_slave_0_a_ready        (_mig_auto_buffer_in_a_ready),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_valid        (_mig_auto_buffer_in_d_valid),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_opcode  (_mig_auto_buffer_in_d_bits_opcode),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_param   (_mig_auto_buffer_in_d_bits_param),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_size    (_mig_auto_buffer_in_d_bits_size[2:0]),	// @[HarnessBinders.scala:42:23, VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_source  (_mig_auto_buffer_in_d_bits_source),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_sink    (_mig_auto_buffer_in_d_bits_sink),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_denied  (_mig_auto_buffer_in_d_bits_denied),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_data    (_mig_auto_buffer_in_d_bits_data),	// @[VCU118NewShell.scala:312:23]
    .tl_slave_0_d_bits_corrupt (_mig_auto_buffer_in_d_bits_corrupt),	// @[VCU118NewShell.scala:312:23]
    .custom_boot               (_plusarg_reader_out),	// @[PlusArg.scala:80:11]
    .reset_io                  (_harnessBinderReset_catcher_io_sync_reset),	// @[ResetCatchAndSync.scala:39:28]
    .clock_uncore_clock        (_dutWrangler_auto_out_0_clock),	// @[TestHarness.scala:57:31]
    .spi_0_dq_0_i              (1'h0),	// @[LazyModule.scala:411:29]
    .spi_0_dq_1_i              (bundleIn_0_dq_1_i_REG_1),	// @[SDIOOverlay.scala:19:31]
    .spi_0_dq_2_i              (1'h0),	// @[LazyModule.scala:411:29]
    .spi_0_dq_3_i              (1'h0),	// @[LazyModule.scala:411:29]
    .uart_0_rxd                (_bundleIn_0_rxd_a2b_b),	// @[Util.scala:30:21]
    .tl_slave_0_a_valid        (_chiptop0_tl_slave_0_a_valid),
    .tl_slave_0_a_bits_opcode  (_chiptop0_tl_slave_0_a_bits_opcode),
    .tl_slave_0_a_bits_param   (_chiptop0_tl_slave_0_a_bits_param),
    .tl_slave_0_a_bits_size    (_chiptop0_tl_slave_0_a_bits_size),
    .tl_slave_0_a_bits_source  (_chiptop0_tl_slave_0_a_bits_source),
    .tl_slave_0_a_bits_address (_chiptop0_tl_slave_0_a_bits_address),
    .tl_slave_0_a_bits_mask    (_chiptop0_tl_slave_0_a_bits_mask),
    .tl_slave_0_a_bits_data    (_chiptop0_tl_slave_0_a_bits_data),
    .tl_slave_0_a_bits_corrupt (_chiptop0_tl_slave_0_a_bits_corrupt),
    .tl_slave_0_d_ready        (_chiptop0_tl_slave_0_d_ready),
    .spi_0_sck                 (_chiptop0_spi_0_sck),
    .spi_0_dq_0_o              (_chiptop0_spi_0_dq_0_o),
    .spi_0_dq_0_ie             (_chiptop0_spi_0_dq_0_ie),
    .spi_0_dq_0_oe             (_chiptop0_spi_0_dq_0_oe),
    .spi_0_dq_1_o              (_chiptop0_spi_0_dq_1_o),
    .spi_0_dq_1_ie             (_chiptop0_spi_0_dq_1_ie),
    .spi_0_dq_1_oe             (_chiptop0_spi_0_dq_1_oe),
    .spi_0_dq_2_o              (_chiptop0_spi_0_dq_2_o),
    .spi_0_dq_2_ie             (_chiptop0_spi_0_dq_2_ie),
    .spi_0_dq_2_oe             (_chiptop0_spi_0_dq_2_oe),
    .spi_0_dq_3_o              (_chiptop0_spi_0_dq_3_o),
    .spi_0_dq_3_ie             (_chiptop0_spi_0_dq_3_ie),
    .spi_0_dq_3_oe             (_chiptop0_spi_0_dq_3_oe),
    .spi_0_cs_0                (_chiptop0_spi_0_cs_0),
    .uart_0_txd                (_chiptop0_uart_0_txd)
  );
  plusarg_reader_VCU118FPGATestHarness_UNIQUIFIED #(
    .FORMAT("custom_boot_pin=%d"),
    .DEFAULT(0),
    .WIDTH(1)
  ) plusarg_reader_VCU118FPGATestHarness_UNIQUIFIED (	// @[PlusArg.scala:80:11]
    .out (_plusarg_reader_out)
  );
  ResetCatchAndSync_d3_VCU118FPGATestHarness_UNIQUIFIED harnessBinderReset_catcher (	// @[ResetCatchAndSync.scala:39:28]
    .clock         (_dutWrangler_auto_out_0_clock),	// @[TestHarness.scala:57:31]
    .reset         (_dutWrangler_auto_out_0_reset),	// @[TestHarness.scala:57:31]
    .io_sync_reset (_harnessBinderReset_catcher_io_sync_reset)
  );
endmodule

