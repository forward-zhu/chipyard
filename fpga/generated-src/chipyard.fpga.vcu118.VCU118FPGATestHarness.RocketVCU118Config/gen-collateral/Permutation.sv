// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module Permutation(
  input          clock,
                 reset,
  input  [5:0]   io_in_uop_ctrl_funct6,
  input  [2:0]   io_in_uop_ctrl_funct3,
  input          io_in_uop_ctrl_vm,
  input  [4:0]   io_in_uop_ctrl_vs1_imm,
  input          io_in_uop_info_ma,
                 io_in_uop_info_ta,
  input  [2:0]   io_in_uop_info_vsew,
                 io_in_uop_info_vlmul,
  input  [7:0]   io_in_uop_info_vl,
  input  [6:0]   io_in_uop_info_vstart,
  input  [63:0]  io_in_rs1,
  input  [7:0]   io_in_vs1_preg_idx_0,
                 io_in_vs1_preg_idx_1,
                 io_in_vs1_preg_idx_2,
                 io_in_vs1_preg_idx_3,
                 io_in_vs1_preg_idx_4,
                 io_in_vs1_preg_idx_5,
                 io_in_vs1_preg_idx_6,
                 io_in_vs1_preg_idx_7,
                 io_in_vs2_preg_idx_0,
                 io_in_vs2_preg_idx_1,
                 io_in_vs2_preg_idx_2,
                 io_in_vs2_preg_idx_3,
                 io_in_vs2_preg_idx_4,
                 io_in_vs2_preg_idx_5,
                 io_in_vs2_preg_idx_6,
                 io_in_vs2_preg_idx_7,
                 io_in_old_vd_preg_idx_0,
                 io_in_old_vd_preg_idx_1,
                 io_in_old_vd_preg_idx_2,
                 io_in_old_vd_preg_idx_3,
                 io_in_old_vd_preg_idx_4,
                 io_in_old_vd_preg_idx_5,
                 io_in_old_vd_preg_idx_6,
                 io_in_old_vd_preg_idx_7,
  input          io_in_uop_valid,
  input  [127:0] io_in_rdata,
  input          io_in_rvalid,
  output [2:0]   io_out_uop_info_vlmul,
  output         io_out_rd_en,
  output [7:0]   io_out_rd_preg_idx,
  output         io_out_wb_vld,
  output [127:0] io_out_wb_data
);

  wire [3:0]      vrgather_cnt_max;	// @[Permutation.scala:343:27]
  wire            vrgather_update_vs_idx;	// @[Permutation.scala:341:84]
  wire [127:0]    _vrgatherEngine_io_vrgather_vd;	// @[Permutation.scala:618:30]
  wire [127:0]    _vcmprsEngine_io_cmprs_vd;	// @[Permutation.scala:590:28]
  wire [127:0]    _vslideEngine_io_vslideup_vd;	// @[Permutation.scala:571:28]
  wire [127:0]    _vslideEngine_io_vslidedn_vd;	// @[Permutation.scala:571:28]
  wire [127:0]    _vslideEngine_io_vslide1up_vd;	// @[Permutation.scala:571:28]
  wire [127:0]    _vslideEngine_io_vslide1dn_vd;	// @[Permutation.scala:571:28]
  wire            _vperm_fifo_io_deq_valid;	// @[Permutation.scala:466:26]
  wire [7:0]      _vperm_fifo_io_deq_bits;	// @[Permutation.scala:466:26]
  reg  [5:0]      funct6_reg;	// @[Permutation.scala:67:27]
  reg  [2:0]      funct3_reg;	// @[Permutation.scala:68:27]
  reg  [2:0]      vsew_reg;	// @[Permutation.scala:69:25]
  reg  [127:0]    mask;	// @[Permutation.scala:70:21]
  reg             mask_valid;	// @[Permutation.scala:71:27]
  reg  [127:0]    old_vd;	// @[Permutation.scala:72:23]
  reg  [127:0]    vs_reg;	// @[Permutation.scala:73:23]
  reg  [63:0]     rs1_reg;	// @[Permutation.scala:74:24]
  reg  [7:0]      vs1_preg_idx_reg_0;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_1;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_2;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_3;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_4;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_5;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_6;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs1_preg_idx_reg_7;	// @[Permutation.scala:75:33]
  reg  [7:0]      vs2_preg_idx_reg_0;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_1;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_2;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_3;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_4;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_5;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_6;	// @[Permutation.scala:76:33]
  reg  [7:0]      vs2_preg_idx_reg_7;	// @[Permutation.scala:76:33]
  reg  [7:0]      old_vd_preg_idx_reg_0;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_1;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_2;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_3;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_4;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_5;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_6;	// @[Permutation.scala:77:36]
  reg  [7:0]      old_vd_preg_idx_reg_7;	// @[Permutation.scala:77:36]
  reg             vm_reg;	// @[Permutation.scala:79:23]
  reg             ta_reg;	// @[Permutation.scala:80:23]
  reg             ma_reg;	// @[Permutation.scala:81:23]
  reg  [6:0]      vstart_reg;	// @[Permutation.scala:82:27]
  reg  [7:0]      vl_reg;	// @[Permutation.scala:83:23]
  reg  [2:0]      rd_vlmul;	// @[Permutation.scala:84:25]
  reg  [2:0]      vlmul_reg;	// @[Permutation.scala:85:26]
  reg             perm_busy;	// @[Permutation.scala:88:26]
  reg             flush;	// @[Permutation.scala:89:22]
  wire            _reg_vrgather16_T = funct6_reg == 6'hE;	// @[Permutation.scala:37:29, :67:27, :98:37]
  wire            _reg_vrgather_vx_T_1 = funct3_reg == 3'h4;	// @[Permutation.scala:37:57, :68:27, :98:69]
  wire            _reg_vrgather_vi_T_1 = funct3_reg == 3'h3;	// @[Permutation.scala:38:57, :68:27, :99:69]
  wire            reg_vslideup = _reg_vrgather16_T & _reg_vrgather_vx_T_1 & ~flush | _reg_vrgather16_T & _reg_vrgather_vi_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:{37,69,83,86}, :99:69, :100:{38,57}]
  wire            _reg_vfslide1dn_vf_T = funct6_reg == 6'hF;	// @[Permutation.scala:40:29, :67:27, :101:37]
  wire            reg_vslidedn = _reg_vfslide1dn_vf_T & _reg_vrgather_vx_T_1 & ~flush | _reg_vfslide1dn_vf_T & _reg_vrgather_vi_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:{69,86}, :99:69, :101:{37,83}, :103:{38,57}]
  wire            _reg_vslide1dn_vx_T_1 = funct3_reg == 3'h6;	// @[Permutation.scala:43:58, :68:27, :104:70]
  wire            _reg_vfslide1dn_vf_T_1 = funct3_reg == 3'h5;	// @[Permutation.scala:44:59, :68:27, :105:71]
  wire            reg_vslide1up = _reg_vrgather16_T & _reg_vslide1dn_vx_T_1 & ~flush | _reg_vrgather16_T & _reg_vfslide1dn_vf_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:{37,86}, :104:{70,84}, :105:71, :106:{40,61}]
  wire            reg_vslide1dn = _reg_vfslide1dn_vf_T & _reg_vslide1dn_vx_T_1 & ~flush | _reg_vfslide1dn_vf_T & _reg_vfslide1dn_vf_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:86, :101:37, :104:70, :105:71, :107:84, :109:{40,61}]
  wire            _reg_vrgather_vi_T = funct6_reg == 6'hC;	// @[Permutation.scala:67:27, :110:37]
  wire            _reg_vrgather16_T_1 = funct3_reg == 3'h0;	// @[Permutation.scala:68:27, :110:69]
  wire            reg_vrgather16 = _reg_vrgather16_T & _reg_vrgather16_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:{37,86}, :110:69, :111:82]
  wire            reg_vrgather_vxi = _reg_vrgather_vi_T & _reg_vrgather_vx_T_1 & ~flush | _reg_vrgather_vi_T & _reg_vrgather_vi_T_1 & ~flush;	// @[Permutation.scala:89:22, :98:{69,86}, :99:69, :110:37, :112:83, :114:{42,61}]
  wire            reg_vcompress = funct6_reg == 6'h17 & funct3_reg == 3'h2 & ~flush;	// @[Permutation.scala:56:46, :67:27, :68:27, :89:22, :98:86, :115:{35,67,81}]
  wire            _eew_sew_oneHot_WIRE_0 = vsew_reg == 3'h0;	// @[Permutation.scala:68:27, :69:25, :116:57]
  wire            reg_vrgather16_sew8 = reg_vrgather16 & _eew_sew_oneHot_WIRE_0 & ~flush;	// @[Permutation.scala:89:22, :98:86, :111:82, :116:{57,66}]
  wire            _eew_sew_oneHot_WIRE_2 = vsew_reg == 3'h2;	// @[Permutation.scala:56:46, :69:25, :117:58]
  wire            _eew_sew_oneHot_WIRE_3 = vsew_reg == 3'h3;	// @[Permutation.scala:38:57, :69:25, :118:58]
  wire            reg_vslide = reg_vslideup | reg_vslidedn | reg_vslide1up | reg_vslide1dn & ~flush;	// @[Permutation.scala:89:22, :98:86, :100:38, :103:38, :106:40, :109:40, :119:{66,83}]
  wire            reg_vrgather = _reg_vrgather_vi_T & _reg_vrgather16_T_1 & ~flush | reg_vrgather_vxi | reg_vrgather16 & ~flush;	// @[Permutation.scala:89:22, :98:86, :110:{37,69,83}, :111:82, :114:42, :120:{58,76}]
  reg  [2:0]      wb_idx;	// @[Permutation.scala:126:23]
  reg  [7:0]      vlRemain;	// @[Permutation.scala:128:25]
  reg  [7:0]      vlRemain_reg;	// @[Permutation.scala:133:29]
  wire [14:0]     vlRemainBytes_reg = {7'h0, vlRemain_reg} << vsew_reg;	// @[Permutation.scala:69:25, :82:27, :133:29, :139:40]
  wire [127:0]    vmask_tail_bits = 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF >> {110'h0, (|(vlRemainBytes_reg[14:4])) ? 15'h0 : 15'h10 - vlRemainBytes_reg, 3'h0};	// @[Permutation.scala:68:27, :131:15, :139:40, :140:{23,43,69}, :143:30]
  reg  [127:0]    vd_reg;	// @[Permutation.scala:148:23]
  wire            _eew_sew_oneHot_WIRE_1 = vsew_reg == 3'h1;	// @[Permutation.scala:69:25, VFuBundles.scala:67:53]
  reg  [2:0]      vs_idx;	// @[Permutation.scala:163:23]
  reg  [2:0]      rdata_vs_idx;	// @[Permutation.scala:164:29]
  reg  [2:0]      rdata_wb_idx;	// @[Permutation.scala:165:29]
  reg  [2:0]      vd_idx;	// @[Permutation.scala:166:23]
  wire [70:0]     vslide_bytes = {7'h0, reg_vslide1up | reg_vslide1dn ? 64'h1 : rs1_reg} << vsew_reg;	// @[Permutation.scala:69:25, :74:24, :82:27, :106:40, :109:40, :170:{23,38}, :171:33]
  wire            _T_62 = reg_vslideup | reg_vslide1up;	// @[Permutation.scala:100:38, :106:40, :173:42]
  wire [67:0]     _GEN = {1'h0, vslide_bytes[70:4]};	// @[Permutation.scala:171:33, :173:{72,80}]
  wire [67:0]     _GEN_0 = {65'h0, vs_idx};	// @[Permutation.scala:163:23, :173:87]
  wire            _T_69 = reg_vslidedn | reg_vslide1dn;	// @[Permutation.scala:103:38, :109:40, :173:112]
  wire            vslide_lo_valid = _T_62 ? _GEN + 68'h1 <= _GEN_0 : _T_69 & _GEN_0 + _GEN <= {65'h0, rd_vlmul};	// @[Permutation.scala:84:25, :173:{28,42,80,87,112,130,141,164}]
  wire            vslide_hi_valid = _T_62 ? vslide_bytes[70:4] <= {64'h0, vs_idx} : _T_69 & {1'h0, _GEN_0 + _GEN} + 69'h1 <= {66'h0, rd_vlmul};	// @[Permutation.scala:74:24, :84:25, :163:23, :171:33, :173:{42,72,80,87,112}, :174:{28,80,123,134,157,164}]
  reg  [1:0]      vslide_rd_cnt;	// @[Permutation.scala:176:30]
  reg             rd_mask_en;	// @[Permutation.scala:177:27]
  reg             rd_vs_en;	// @[Permutation.scala:178:25]
  reg             calc_done;	// @[Permutation.scala:192:26]
  wire [1:0]      vslide_cnt_max = {1'h0, vslide_lo_valid} + {1'h0, vslide_hi_valid};	// @[Permutation.scala:173:28, :174:28, :229:52]
  wire            vslide_update_vs_idx = reg_vslide & vslide_rd_cnt == vslide_cnt_max & rd_vs_en;	// @[Permutation.scala:119:66, :176:30, :178:25, :229:52, :240:{56,76}]
  reg  [127:0]    vmask_vl;	// @[Permutation.scala:273:25]
  wire [7:0]      _vmask_uop_extracted_T_17 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[7:0] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_1 = _vmask_uop_extracted_T_17[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[3:0] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_32 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[15:8] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_2 = _vmask_uop_extracted_T_32[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[7:4] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_47 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[23:16] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_3 = _vmask_uop_extracted_T_47[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[11:8] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_62 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[31:24] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_4 = _vmask_uop_extracted_T_62[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[15:12] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_77 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[39:32] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_5 = _vmask_uop_extracted_T_77[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[19:16] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_92 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[47:40] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_6 = _vmask_uop_extracted_T_92[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[23:20] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_107 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[55:48] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_7 = _vmask_uop_extracted_T_107[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[27:24] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [7:0]      _vmask_uop_extracted_T_122 = _eew_sew_oneHot_WIRE_1 ? vmask_vl[63:56] : 8'h0;	// @[Mux.scala:27:73, Permutation.scala:273:25, VFuBundles.scala:67:53, VFuUtils.scala:51:18]
  wire [3:0]      _GEN_8 = _vmask_uop_extracted_T_122[3:0] | (_eew_sew_oneHot_WIRE_2 ? vmask_vl[31:28] : 4'h0);	// @[Bitwise.scala:77:12, Mux.scala:27:73, Permutation.scala:117:58, :273:25, VFuUtils.scala:51:18]
  wire [15:0]     _vmask_uop_extracted_WIRE_8 = (vs_idx == 3'h0 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[15:0] : 16'h0) | {8'h0, _vmask_uop_extracted_T_17[7:4], _GEN_1[3:2], _GEN_1[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[1:0] : 2'h0)} : 16'h0) | (vs_idx == 3'h1 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[31:16] : 16'h0) | {8'h0, _vmask_uop_extracted_T_32[7:4], _GEN_2[3:2], _GEN_2[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[3:2] : 2'h0)} : 16'h0) | (vs_idx == 3'h2 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[47:32] : 16'h0) | {8'h0, _vmask_uop_extracted_T_47[7:4], _GEN_3[3:2], _GEN_3[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[5:4] : 2'h0)} : 16'h0) | (vs_idx == 3'h3 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[63:48] : 16'h0) | {8'h0, _vmask_uop_extracted_T_62[7:4], _GEN_4[3:2], _GEN_4[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[7:6] : 2'h0)} : 16'h0) | (vs_idx == 3'h4 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[79:64] : 16'h0) | {8'h0, _vmask_uop_extracted_T_77[7:4], _GEN_5[3:2], _GEN_5[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[9:8] : 2'h0)} : 16'h0) | (vs_idx == 3'h5 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[95:80] : 16'h0) | {8'h0, _vmask_uop_extracted_T_92[7:4], _GEN_6[3:2], _GEN_6[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[11:10] : 2'h0)} : 16'h0) | (vs_idx == 3'h6 ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[111:96] : 16'h0) | {8'h0, _vmask_uop_extracted_T_107[7:4], _GEN_7[3:2], _GEN_7[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[13:12] : 2'h0)} : 16'h0) | ((&vs_idx) ? (_eew_sew_oneHot_WIRE_0 ? vmask_vl[127:112] : 16'h0) | {8'h0, _vmask_uop_extracted_T_122[7:4], _GEN_8[3:2], _GEN_8[1:0] | (_eew_sew_oneHot_WIRE_3 ? vmask_vl[15:14] : 2'h0)} : 16'h0);	// @[Mux.scala:27:73, Permutation.scala:37:57, :38:57, :43:58, :44:59, :56:46, :68:27, :116:57, :118:58, :163:23, :176:30, :273:25, VFuBundles.scala:67:53, VFuUtils.scala:49:47, :51:18]
  wire [15:0]     vmask_16b = rd_vs_en ? (_eew_sew_oneHot_WIRE_0 ? _vmask_uop_extracted_WIRE_8 : 16'h0) | (_eew_sew_oneHot_WIRE_1 ? {{2{_vmask_uop_extracted_WIRE_8[7]}}, {2{_vmask_uop_extracted_WIRE_8[6]}}, {2{_vmask_uop_extracted_WIRE_8[5]}}, {2{_vmask_uop_extracted_WIRE_8[4]}}, {2{_vmask_uop_extracted_WIRE_8[3]}}, {2{_vmask_uop_extracted_WIRE_8[2]}}, {2{_vmask_uop_extracted_WIRE_8[1]}}, {2{_vmask_uop_extracted_WIRE_8[0]}}} : 16'h0) | (_eew_sew_oneHot_WIRE_2 ? {{4{_vmask_uop_extracted_WIRE_8[3]}}, {4{_vmask_uop_extracted_WIRE_8[2]}}, {4{_vmask_uop_extracted_WIRE_8[1]}}, {4{_vmask_uop_extracted_WIRE_8[0]}}} : 16'h0) | (_eew_sew_oneHot_WIRE_3 ? {{8{_vmask_uop_extracted_WIRE_8[1]}}, {8{_vmask_uop_extracted_WIRE_8[0]}}} : 16'h0) : 16'h0;	// @[Bitwise.scala:77:12, Cat.scala:33:92, Mux.scala:27:73, Permutation.scala:116:57, :117:58, :118:58, :178:25, :275:22, VFuBundles.scala:67:53, VFuUtils.scala:135:{56,72}]
  reg  [7:0]      rd_ones_sum;	// @[Permutation.scala:277:28]
  reg             cmprs_rd_old_vd;	// @[Permutation.scala:281:32]
  reg  [2:0]      cmprs_rd_old_vd_idx;	// @[Permutation.scala:282:36]
  wire [7:0]      _cmprs_rd_wb_T_1 = rd_ones_sum + {3'h0, {1'h0, {1'h0, {1'h0, {1'h0, vmask_16b[0]} + {1'h0, vmask_16b[1]}} + {1'h0, {1'h0, vmask_16b[2]} + {1'h0, vmask_16b[3]}}} + {1'h0, {1'h0, {1'h0, vmask_16b[4]} + {1'h0, vmask_16b[5]}} + {1'h0, {1'h0, vmask_16b[6]} + {1'h0, vmask_16b[7]}}}} + {1'h0, {1'h0, {1'h0, {1'h0, vmask_16b[8]} + {1'h0, vmask_16b[9]}} + {1'h0, {1'h0, vmask_16b[10]} + {1'h0, vmask_16b[11]}}} + {1'h0, {1'h0, {1'h0, vmask_16b[12]} + {1'h0, vmask_16b[13]}} + {1'h0, {1'h0, vmask_16b[14]} + {1'h0, vmask_16b[15]}}}}};	// @[Bitwise.scala:51:90, :53:100, Permutation.scala:68:27, :275:22, :277:28, :295:49]
  wire [7:0]      _cmprs_rd_resent_en_T_2 = {{1'h0, wb_idx} + 4'h1, 4'h0};	// @[Bitwise.scala:77:12, Cat.scala:33:92, Permutation.scala:126:23, :249:46, :286:41]
  wire            cmprs_rd_wb = reg_vcompress & _cmprs_rd_wb_T_1 >= _cmprs_rd_resent_en_T_2;	// @[Cat.scala:33:92, Permutation.scala:115:81, :295:{32,49,75}]
  wire            cmprs_update_vs_idx = reg_vcompress & rd_vs_en & ~(reg_vcompress & _cmprs_rd_wb_T_1 > _cmprs_rd_resent_en_T_2);	// @[Cat.scala:33:92, Permutation.scala:115:81, :178:25, :295:49, :296:{39,82}, :331:{52,54}]
  reg  [3:0]      vrgather_rd_cnt;	// @[Permutation.scala:336:32]
  wire            _T_24 = vrgather_rd_cnt == vrgather_cnt_max;	// @[Permutation.scala:336:32, :341:62, :343:27]
  assign vrgather_update_vs_idx = reg_vrgather & _T_24 & rd_vs_en;	// @[Permutation.scala:120:58, :178:25, :341:{62,84}]
  assign vrgather_cnt_max = {1'h0, rd_vlmul} + 4'h2;	// @[Permutation.scala:84:25, :343:27, :613:89]
  reg             update_vd_idx;	// @[Permutation.scala:372:30]
  wire            update_vs_idx = vslide_update_vs_idx | cmprs_update_vs_idx | vrgather_update_vs_idx;	// @[Permutation.scala:240:76, :331:52, :341:84, :378:64]
  wire            wb_vld = vslide_update_vs_idx | cmprs_rd_wb | cmprs_rd_old_vd | (~(reg_vrgather16_sew8 & ~(vlmul_reg[2])) | vs_idx[0]) & vrgather_update_vs_idx;	// @[Permutation.scala:85:26, :116:66, :163:23, :240:76, :281:32, :295:32, :339:{28,49,63,103}, :341:84, :379:43]
  reg  [127:0]    rdata_reg;	// @[Permutation.scala:451:26]
  reg             rvalid_reg;	// @[Permutation.scala:452:27]
  wire            _rd_en_T = rd_mask_en | rd_vs_en;	// @[Permutation.scala:177:27, :178:25, :477:41]
  wire            rdata_rd_mask_en = rvalid_reg & _vperm_fifo_io_deq_bits[0] & _vperm_fifo_io_deq_valid;	// @[Permutation.scala:452:27, :466:26, :479:{59,63}]
  wire            rdata_wb_vld = rvalid_reg & _vperm_fifo_io_deq_bits[1] & _vperm_fifo_io_deq_valid;	// @[Permutation.scala:452:27, :466:26, :480:{55,59}]
  wire            rdata_vslide_lo_valid = rvalid_reg & _vperm_fifo_io_deq_bits[2] & _vperm_fifo_io_deq_valid & reg_vslide;	// @[Permutation.scala:119:66, :452:27, :466:26, :481:{64,95}]
  wire            rdata_vslide_hi_valid = rvalid_reg & _vperm_fifo_io_deq_bits[3] & _vperm_fifo_io_deq_valid & reg_vslide;	// @[Permutation.scala:119:66, :452:27, :466:26, :482:{64,95}]
  wire            rdata_update_vs_idx = rvalid_reg & _vperm_fifo_io_deq_bits[2] & _vperm_fifo_io_deq_valid & (reg_vcompress | reg_vrgather);	// @[Permutation.scala:115:81, :120:58, :452:27, :466:26, :481:64, :484:{93,111}]
  wire            _vrgather_update_vs2_T = rvalid_reg & reg_vrgather;	// @[Permutation.scala:120:58, :452:27, :487:43]
  wire [3:0]      rdata_vrgather_rd_cnt = (_vrgather_update_vs2_T ? _vperm_fifo_io_deq_bits[6:3] : 4'h0) & {4{_vperm_fifo_io_deq_valid}};	// @[Bitwise.scala:77:12, Permutation.scala:466:26, :487:{31,43,82,95}]
  wire            _T_65 = ~rdata_vslide_hi_valid & ~rdata_vslide_lo_valid;	// @[Permutation.scala:481:95, :482:95, :547:{10,33,36}]
  wire            _T_67 = rdata_vslide_hi_valid & ~rdata_vslide_lo_valid;	// @[Permutation.scala:481:95, :482:95, :547:36, :549:38]
  wire            _T_68 = rdata_vslide_hi_valid & rdata_vslide_lo_valid;	// @[Permutation.scala:481:95, :482:95, :552:38]
  wire            _GEN_9 = _T_67 | _T_68;	// @[Permutation.scala:544:17, :549:{38,65}, :550:21, :552:{38,64}, :553:21]
  wire [7:0]      _GEN_10 = {1'h0, vstart_reg};	// @[Permutation.scala:82:27, :595:47]
  wire            vrgather_update_vs2 = _vrgather_update_vs2_T & ~rdata_rd_mask_en & (|(rdata_vrgather_rd_cnt[3:1])) & rdata_vrgather_rd_cnt < 4'hA;	// @[Permutation.scala:479:63, :487:{43,95}, :613:45, :614:{103,111,137}]
  reg             rdata_update_vs_idx_reg;	// @[Permutation.scala:651:40]
  reg             rdata_wb_vld_reg;	// @[Permutation.scala:652:33]
  reg             rdata_wb_vld_reg2;	// @[Permutation.scala:653:34]
  reg  [6:0]      vstartRemain;	// @[Permutation.scala:681:29]
  wire [13:0]     _vstartRemainBytes_T = {7'h0, vstartRemain} << vsew_reg;	// @[Permutation.scala:69:25, :82:27, :681:29, :686:37]
  wire [382:0]    _vmask_vstart_bits_T = 383'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF << {375'h0, (|(_vstartRemainBytes_T[6:4])) ? 5'h10 : _vstartRemainBytes_T[4:0], 3'h0};	// @[Permutation.scala:68:27, :686:{21,37}, :687:{22,41}, :688:32]
  reg             reg_rd_en;	// @[Permutation.scala:711:26]
  reg  [7:0]      reg_rd_preg_idx;	// @[Permutation.scala:712:32]
  reg  [2:0]      uop_reg_info_vlmul;	// @[Permutation.scala:727:20]
  wire [7:0]      _rd_vlmul_T_4 = 8'h1 << (io_in_uop_info_vlmul[2] ? 3'h0 : {1'h0, io_in_uop_info_vlmul[1:0]});	// @[Cat.scala:33:92, Permutation.scala:68:27, :225:{22,28,34,63}]
  wire            _T_49 = rvalid_reg & reg_vslide;	// @[Permutation.scala:119:66, :452:27, :483:41]
  wire [1:0]      rdata_vslide_rd_cnt = (_T_49 ? _vperm_fifo_io_deq_bits[5:4] : 2'h0) & {2{_vperm_fifo_io_deq_valid}};	// @[Bitwise.scala:77:12, Permutation.scala:176:30, :466:26, :483:{29,41,78,91}]
  wire [7:0]      _GEN_11 = {5'h0, {1'h0, ~(vsew_reg[1:0])} + 3'h1};	// @[Permutation.scala:69:25, :225:22, :640:{31,40,48}, :646:38, VFuBundles.scala:67:53]
  wire [7:0]      _GEN_12 = {1'h0, vstartRemain};	// @[Permutation.scala:681:29, :696:38]
  wire [7:0]      _vlRemain_T_7 = 8'h1 << _GEN_11;	// @[Permutation.scala:225:22, :646:38]
  wire [7:0]      _vlRemain_T_13 = 8'h1 << _GEN_11;	// @[Permutation.scala:225:22, :646:38, :648:38]
  wire [7:0]      _vstartRemain_T_7 = 8'h1 << _GEN_11;	// @[Permutation.scala:225:22, :646:38, :696:46]
  wire [7:0]      _vstartRemain_T_13 = 8'h1 << _GEN_11;	// @[Permutation.scala:225:22, :646:38, :698:46]
  wire            _T_8 = vslide_rd_cnt == 2'h1;	// @[Permutation.scala:176:30, :262:31]
  wire [7:0][7:0] _GEN_13 = {{vs1_preg_idx_reg_7}, {vs1_preg_idx_reg_6}, {vs1_preg_idx_reg_5}, {vs1_preg_idx_reg_4}, {vs1_preg_idx_reg_3}, {vs1_preg_idx_reg_2}, {vs1_preg_idx_reg_1}, {vs1_preg_idx_reg_0}};	// @[Permutation.scala:75:33, :365:30]
  wire [7:0][7:0] _GEN_14 = {{old_vd_preg_idx_reg_7}, {old_vd_preg_idx_reg_6}, {old_vd_preg_idx_reg_5}, {old_vd_preg_idx_reg_4}, {old_vd_preg_idx_reg_3}, {old_vd_preg_idx_reg_2}, {old_vd_preg_idx_reg_1}, {old_vd_preg_idx_reg_0}};	// @[Permutation.scala:77:36, :261:26]
  wire [7:0][7:0] _GEN_15 = {{vs2_preg_idx_reg_7}, {vs2_preg_idx_reg_6}, {vs2_preg_idx_reg_5}, {vs2_preg_idx_reg_4}, {vs2_preg_idx_reg_3}, {vs2_preg_idx_reg_2}, {vs2_preg_idx_reg_1}, {vs2_preg_idx_reg_0}};	// @[Permutation.scala:76:33, :263:26]
  wire [7:0]      _GEN_16 = _GEN_15[vs_idx];	// @[Permutation.scala:163:23, :263:26, :326:23]
  wire [7:0]      _GEN_17 = _GEN_14[vs_idx];	// @[Permutation.scala:163:23, :261:26]
  wire            _vrgather16_T = io_in_uop_ctrl_funct6 == 6'hE;	// @[Permutation.scala:37:29]
  wire            _vfslide1dn_vf_T_1 = io_in_uop_ctrl_funct3 == 3'h5;	// @[Permutation.scala:44:59]
  wire [63:0]     _GEN_18 = {32'h0, (&(io_in_rs1[63:32])) ? io_in_rs1[31:0] : 32'h7FC00000};	// @[Cat.scala:33:92, VFPU.scala:38:{25,34}, :39:8, :41:10, :42:15]
  wire            _GEN_19 = ~(_vrgather16_T & _vfslide1dn_vf_T_1 | io_in_uop_ctrl_funct6 == 6'hF & _vfslide1dn_vf_T_1) | io_in_uop_info_vsew != 3'h2;	// @[Permutation.scala:37:29, :40:29, :44:{48,59}, :47:48, :56:46, :61:31, :64:16]
  wire            _rs1_imm_T_5 = ~(io_in_uop_ctrl_funct3[2]) & io_in_uop_ctrl_funct3[1] & io_in_uop_ctrl_funct3[0];	// @[VFuBundles.scala:33:{12,19,32,36,45}]
  wire [63:0]     _rs1_imm_T_6 = {59'h0, io_in_uop_ctrl_vs1_imm};	// @[Cat.scala:33:92]
  wire            _T_34 = wb_idx == rd_vlmul;	// @[Permutation.scala:84:25, :126:23, :191:25]
  wire            rd_done = _T_34 & wb_vld;	// @[Permutation.scala:191:{25,39}, :379:43]
  wire            _T_15 = rd_done | flush;	// @[Permutation.scala:89:22, :191:39, :298:16]
  wire            _GEN_20 = ~flush & rdata_wb_vld;	// @[Permutation.scala:89:22, :194:15, :203:12, :210:25, :373:15, :374:19, :376:19, :480:59]
  wire [2:0]      vrgather16_sew8_rd_vlmul = reg_vrgather16_sew8 & ~(vlmul_reg[2]) ? {rd_vlmul[1:0] + 2'h1, 1'h0} - 3'h1 : rd_vlmul;	// @[Permutation.scala:84:25, :85:26, :116:66, :262:31, :339:63, :343:27, :390:{34,55,105,122}]
  wire            _T_38 = rdata_rd_mask_en & rvalid_reg;	// @[Permutation.scala:452:27, :479:63, :492:31]
  wire            rd_en = _rd_en_T | cmprs_rd_old_vd;	// @[Permutation.scala:281:32, :477:41, :710:38]
  wire            vslideup = _vrgather16_T & io_in_uop_ctrl_funct3 == 3'h4 | _vrgather16_T & io_in_uop_ctrl_funct3 == 3'h3;	// @[Permutation.scala:37:{29,46,57}, :38:{46,57}, :39:30]
  wire [63:0]     rs1_imm = _rs1_imm_T_5 ? _rs1_imm_T_6 : _GEN_19 ? io_in_rs1 : _GEN_18;	// @[Cat.scala:33:92, Permutation.scala:64:16, :65:20, VFPU.scala:39:8, VFuBundles.scala:33:36]
  wire            rec_done = io_in_uop_valid & ~(perm_busy | flush);	// @[Permutation.scala:33:{35,38}, :88:26, :89:22, :738:33]
  always @(posedge clock) begin
    if (reset) begin
      funct6_reg <= 6'h0;	// @[Permutation.scala:67:27]
      funct3_reg <= 3'h0;	// @[Permutation.scala:68:27]
      vsew_reg <= 3'h0;	// @[Permutation.scala:68:27, :69:25]
      mask <= 128'h0;	// @[Permutation.scala:70:21]
      mask_valid <= 1'h0;	// @[Permutation.scala:71:27]
      old_vd <= 128'h0;	// @[Permutation.scala:70:21, :72:23]
      vs_reg <= 128'h0;	// @[Permutation.scala:70:21, :73:23]
      rs1_reg <= 64'h0;	// @[Permutation.scala:74:24]
      vs1_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:75:33]
      vs1_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:75:33]
      vs2_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:76:33]
      vs2_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:76:33]
      old_vd_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:77:36]
      old_vd_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:77:36]
      vm_reg <= 1'h0;	// @[Permutation.scala:79:23]
      ta_reg <= 1'h0;	// @[Permutation.scala:80:23]
      ma_reg <= 1'h0;	// @[Permutation.scala:81:23]
      vstart_reg <= 7'h0;	// @[Permutation.scala:82:27]
      vl_reg <= 8'h0;	// @[Permutation.scala:83:23]
      rd_vlmul <= 3'h0;	// @[Permutation.scala:68:27, :84:25]
      vlmul_reg <= 3'h0;	// @[Permutation.scala:68:27, :85:26]
      perm_busy <= 1'h0;	// @[Permutation.scala:88:26]
      flush <= 1'h0;	// @[Permutation.scala:89:22]
      wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :126:23]
      vlRemain <= 8'h0;	// @[Permutation.scala:128:25]
      vlRemain_reg <= 8'h0;	// @[Permutation.scala:133:29]
      vd_reg <= 128'h0;	// @[Permutation.scala:70:21, :148:23]
      vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :163:23]
      rdata_vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :164:29]
      rdata_wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :165:29]
      vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :166:23]
      vslide_rd_cnt <= 2'h0;	// @[Permutation.scala:176:30]
      rd_mask_en <= 1'h0;	// @[Permutation.scala:177:27]
      rd_vs_en <= 1'h0;	// @[Permutation.scala:178:25]
      calc_done <= 1'h0;	// @[Permutation.scala:192:26]
      vmask_vl <= 128'h0;	// @[Permutation.scala:70:21, :273:25]
      rd_ones_sum <= 8'h0;	// @[Permutation.scala:277:28]
      cmprs_rd_old_vd <= 1'h0;	// @[Permutation.scala:281:32]
      cmprs_rd_old_vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :282:36]
      vrgather_rd_cnt <= 4'h0;	// @[Bitwise.scala:77:12, Permutation.scala:336:32]
      update_vd_idx <= 1'h0;	// @[Permutation.scala:372:30]
      rdata_reg <= 128'h0;	// @[Permutation.scala:70:21, :451:26]
      rvalid_reg <= 1'h0;	// @[Permutation.scala:452:27]
      rdata_update_vs_idx_reg <= 1'h0;	// @[Permutation.scala:651:40]
      rdata_wb_vld_reg <= 1'h0;	// @[Permutation.scala:652:33]
      rdata_wb_vld_reg2 <= 1'h0;	// @[Permutation.scala:653:34]
      vstartRemain <= 7'h0;	// @[Permutation.scala:82:27, :681:29]
      reg_rd_en <= 1'h0;	// @[Permutation.scala:711:26]
      reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
    end
    else begin
      if (flush) begin	// @[Permutation.scala:89:22]
        funct6_reg <= 6'h0;	// @[Permutation.scala:67:27]
        funct3_reg <= 3'h0;	// @[Permutation.scala:68:27]
        vsew_reg <= 3'h0;	// @[Permutation.scala:68:27, :69:25]
        mask <= 128'h0;	// @[Permutation.scala:70:21]
        old_vd <= 128'h0;	// @[Permutation.scala:70:21, :72:23]
        vs_reg <= 128'h0;	// @[Permutation.scala:70:21, :73:23]
        rs1_reg <= 64'h0;	// @[Permutation.scala:74:24]
        vs1_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:75:33]
        vs2_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:76:33]
        old_vd_preg_idx_reg_0 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_1 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_2 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_3 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_4 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_5 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_6 <= 8'h0;	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_7 <= 8'h0;	// @[Permutation.scala:77:36]
        vstart_reg <= 7'h0;	// @[Permutation.scala:82:27]
        vl_reg <= 8'h0;	// @[Permutation.scala:83:23]
        rd_vlmul <= 3'h0;	// @[Permutation.scala:68:27, :84:25]
        vlmul_reg <= 3'h0;	// @[Permutation.scala:68:27, :85:26]
      end
      else begin	// @[Permutation.scala:89:22]
        if (rec_done) begin	// @[Permutation.scala:33:35]
          funct6_reg <= io_in_uop_ctrl_funct6;	// @[Permutation.scala:67:27]
          funct3_reg <= io_in_uop_ctrl_funct3;	// @[Permutation.scala:68:27]
          vsew_reg <= io_in_uop_info_vsew;	// @[Permutation.scala:69:25]
          if (_rs1_imm_T_5)	// @[VFuBundles.scala:33:36]
            rs1_reg <= _rs1_imm_T_6;	// @[Cat.scala:33:92, Permutation.scala:74:24]
          else if (_GEN_19)	// @[Permutation.scala:64:16]
            rs1_reg <= io_in_rs1;	// @[Permutation.scala:74:24]
          else	// @[Permutation.scala:64:16]
            rs1_reg <= _GEN_18;	// @[Permutation.scala:74:24, VFPU.scala:39:8]
          vs1_preg_idx_reg_0 <= io_in_vs1_preg_idx_0;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_1 <= io_in_vs1_preg_idx_1;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_2 <= io_in_vs1_preg_idx_2;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_3 <= io_in_vs1_preg_idx_3;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_4 <= io_in_vs1_preg_idx_4;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_5 <= io_in_vs1_preg_idx_5;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_6 <= io_in_vs1_preg_idx_6;	// @[Permutation.scala:75:33]
          vs1_preg_idx_reg_7 <= io_in_vs1_preg_idx_7;	// @[Permutation.scala:75:33]
          vs2_preg_idx_reg_0 <= io_in_vs2_preg_idx_0;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_1 <= io_in_vs2_preg_idx_1;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_2 <= io_in_vs2_preg_idx_2;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_3 <= io_in_vs2_preg_idx_3;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_4 <= io_in_vs2_preg_idx_4;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_5 <= io_in_vs2_preg_idx_5;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_6 <= io_in_vs2_preg_idx_6;	// @[Permutation.scala:76:33]
          vs2_preg_idx_reg_7 <= io_in_vs2_preg_idx_7;	// @[Permutation.scala:76:33]
          old_vd_preg_idx_reg_0 <= io_in_old_vd_preg_idx_0;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_1 <= io_in_old_vd_preg_idx_1;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_2 <= io_in_old_vd_preg_idx_2;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_3 <= io_in_old_vd_preg_idx_3;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_4 <= io_in_old_vd_preg_idx_4;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_5 <= io_in_old_vd_preg_idx_5;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_6 <= io_in_old_vd_preg_idx_6;	// @[Permutation.scala:77:36]
          old_vd_preg_idx_reg_7 <= io_in_old_vd_preg_idx_7;	// @[Permutation.scala:77:36]
          vstart_reg <= io_in_uop_info_vstart;	// @[Permutation.scala:82:27]
          vl_reg <= io_in_uop_info_vl;	// @[Permutation.scala:83:23]
          rd_vlmul <= _rd_vlmul_T_4[2:0] - 3'h1;	// @[Permutation.scala:84:25, :225:{22,73}]
          vlmul_reg <= io_in_uop_info_vlmul;	// @[Permutation.scala:85:26]
        end
        if (_T_38)	// @[Permutation.scala:492:31]
          mask <= rdata_reg;	// @[Permutation.scala:70:21, :451:26]
        if (reg_vslide & ~rdata_rd_mask_en & rvalid_reg & rdata_vslide_rd_cnt == 2'h0 | reg_vrgather & ~rdata_rd_mask_en & rvalid_reg & rdata_vrgather_rd_cnt == 4'h0)	// @[Bitwise.scala:77:12, Permutation.scala:72:23, :119:66, :120:58, :176:30, :452:27, :479:63, :483:91, :487:95, :501:{28,60,84,94}, :502:12, :503:{62,88,98}, :504:12]
          old_vd <= rdata_reg;	// @[Permutation.scala:72:23, :451:26]
        if (_T_49 & rdata_vslide_rd_cnt == 2'h1 | _vrgather_update_vs2_T & rdata_vrgather_rd_cnt == 4'h1)	// @[Permutation.scala:73:23, :249:46, :262:31, :483:{41,91}, :487:{43,95}, :509:{39,63,73}, :510:12, :511:{41,67,77}, :512:12]
          vs_reg <= rdata_reg;	// @[Permutation.scala:73:23, :451:26]
      end
      mask_valid <= ~flush & _T_38;	// @[Permutation.scala:71:27, :89:22, :194:15, :203:12, :210:25, :489:15, :491:16, :492:{31,46}]
      vm_reg <= ~flush & (rec_done ? io_in_uop_ctrl_vm : vm_reg);	// @[Permutation.scala:33:35, :79:23, :89:22, :194:15, :203:12, :210:25, :219:12]
      ta_reg <= ~flush & (rec_done ? io_in_uop_info_ta : ta_reg);	// @[Permutation.scala:33:35, :80:23, :89:22, :194:15, :203:12, :204:12, :210:25, :220:12]
      ma_reg <= ~flush & (rec_done ? io_in_uop_info_ma : ma_reg);	// @[Permutation.scala:33:35, :81:23, :89:22, :194:15, :203:12, :205:12, :210:25, :221:12]
      perm_busy <= ~flush & (rec_done | ~(reg_vcompress & calc_done | ~reg_vcompress & vd_idx == rd_vlmul & update_vd_idx) & perm_busy);	// @[Permutation.scala:33:35, :84:25, :88:26, :89:22, :115:81, :166:23, :192:26, :194:15, :203:12, :210:25, :372:30, :527:15, :528:15, :529:25, :530:15, :531:{28,42}, :532:15, :533:{14,40,54,72}, :534:15]
      flush <= ~rec_done & flush & perm_busy;	// @[Permutation.scala:33:35, :88:26, :89:22, :92:19, :93:11, :95:11]
      if (flush) begin	// @[Permutation.scala:89:22]
        wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :126:23]
        vlRemain <= 8'h0;	// @[Permutation.scala:128:25]
        vlRemain_reg <= 8'h0;	// @[Permutation.scala:133:29]
        vd_reg <= 128'h0;	// @[Permutation.scala:70:21, :148:23]
        vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :163:23]
        rdata_vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :164:29]
        rdata_wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :165:29]
        vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :166:23]
        vslide_rd_cnt <= 2'h0;	// @[Permutation.scala:176:30]
        vmask_vl <= 128'h0;	// @[Permutation.scala:70:21, :273:25]
        cmprs_rd_old_vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :282:36]
        vrgather_rd_cnt <= 4'h0;	// @[Bitwise.scala:77:12, Permutation.scala:336:32]
        rdata_reg <= 128'h0;	// @[Permutation.scala:70:21, :451:26]
        vstartRemain <= 7'h0;	// @[Permutation.scala:82:27, :681:29]
        reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
      end
      else begin	// @[Permutation.scala:89:22]
        if (wb_vld) begin	// @[Permutation.scala:379:43]
          if (_T_34)	// @[Permutation.scala:191:25]
            wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :126:23]
          else	// @[Permutation.scala:191:25]
            wb_idx <= wb_idx + 3'h1;	// @[Permutation.scala:126:23, :417:24, VFuBundles.scala:67:53]
        end
        if (rec_done) begin	// @[Permutation.scala:33:35]
          vlRemain <= vslideup & rs1_imm > {56'h0, io_in_uop_info_vl} ? (rs1_imm > 64'h80 ? 8'h80 : rs1_imm[7:0]) : io_in_uop_info_vl;	// @[Permutation.scala:39:30, :65:20, :128:25, :285:36, :644:{20,30,42,52,61}]
          vstartRemain <= vslideup & rs1_imm > {57'h0, io_in_uop_info_vstart} ? (rs1_imm > 64'h80 ? 7'h0 : rs1_imm[6:0]) : io_in_uop_info_vstart;	// @[Permutation.scala:39:30, :65:20, :82:27, :644:52, :681:29, :694:{24,34,46,60,69}]
        end
        else begin	// @[Permutation.scala:33:35]
          if (reg_vcompress & rdata_update_vs_idx) begin	// @[Permutation.scala:115:81, :484:93, :645:28]
            if (vlRemain >= _vlRemain_T_7)	// @[Permutation.scala:128:25, :646:{30,38}]
              vlRemain <= vlRemain - _vlRemain_T_7;	// @[Permutation.scala:128:25, :646:{38,63}]
            else	// @[Permutation.scala:646:30]
              vlRemain <= 8'h0;	// @[Permutation.scala:128:25]
          end
          else if (~reg_vcompress & rdata_wb_vld) begin	// @[Permutation.scala:115:81, :480:59, :647:{14,29}]
            if (vlRemain >= _vlRemain_T_13)	// @[Permutation.scala:128:25, :648:{30,38}]
              vlRemain <= vlRemain - _vlRemain_T_13;	// @[Permutation.scala:128:25, :648:{38,63}]
            else	// @[Permutation.scala:648:30]
              vlRemain <= 8'h0;	// @[Permutation.scala:128:25]
          end
          if (reg_vcompress & rdata_update_vs_idx)	// @[Permutation.scala:115:81, :484:93, :695:28]
            vstartRemain <= _GEN_12 >= _vstartRemain_T_7 ? vstartRemain - _vstartRemain_T_7[6:0] : 7'h0;	// @[Permutation.scala:82:27, :681:29, :696:{24,38,46,75}]
          else if (~reg_vcompress & update_vd_idx)	// @[Permutation.scala:115:81, :372:30, :697:{14,29}]
            vstartRemain <= _GEN_12 >= _vstartRemain_T_13 ? vstartRemain - _vstartRemain_T_13[6:0] : 7'h0;	// @[Permutation.scala:82:27, :681:29, :696:38, :698:{24,38,46,75}]
        end
        vlRemain_reg <= vlRemain;	// @[Permutation.scala:128:25, :133:29]
        if (reg_vcompress & (rdata_update_vs_idx_reg | rdata_wb_vld_reg))	// @[Permutation.scala:115:81, :651:40, :652:33, :667:{28,56}]
          vd_reg <= _vcmprsEngine_io_cmprs_vd;	// @[Permutation.scala:148:23, :590:28]
        else if (reg_vslideup & rdata_wb_vld)	// @[Permutation.scala:100:38, :480:59, :669:27]
          vd_reg <= _vslideEngine_io_vslideup_vd;	// @[Permutation.scala:148:23, :571:28]
        else if (reg_vslidedn & rdata_wb_vld)	// @[Permutation.scala:103:38, :480:59, :671:27]
          vd_reg <= _vslideEngine_io_vslidedn_vd;	// @[Permutation.scala:148:23, :571:28]
        else if (reg_vslide1up & rdata_wb_vld)	// @[Permutation.scala:106:40, :480:59, :673:28]
          vd_reg <= _vslideEngine_io_vslide1up_vd;	// @[Permutation.scala:148:23, :571:28]
        else if (reg_vslide1dn & rdata_wb_vld)	// @[Permutation.scala:109:40, :480:59, :675:28]
          vd_reg <= _vslideEngine_io_vslide1dn_vd;	// @[Permutation.scala:148:23, :571:28]
        else if (reg_vrgather & vrgather_update_vs2)	// @[Permutation.scala:120:58, :614:111, :677:27]
          vd_reg <= _vrgatherEngine_io_vrgather_vd;	// @[Permutation.scala:148:23, :618:30]
        if (update_vs_idx) begin	// @[Permutation.scala:378:64]
          if (vs_idx == vrgather16_sew8_rd_vlmul)	// @[Permutation.scala:163:23, :390:34, :404:17]
            vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :163:23]
          else	// @[Permutation.scala:404:17]
            vs_idx <= vs_idx + 3'h1;	// @[Permutation.scala:163:23, :407:24, VFuBundles.scala:67:53]
        end
        if (rdata_update_vs_idx) begin	// @[Permutation.scala:484:93]
          if (rdata_vs_idx == vrgather16_sew8_rd_vlmul)	// @[Permutation.scala:164:29, :390:34, :424:23]
            rdata_vs_idx <= 3'h0;	// @[Permutation.scala:68:27, :164:29]
          else	// @[Permutation.scala:424:23]
            rdata_vs_idx <= rdata_vs_idx + 3'h1;	// @[Permutation.scala:164:29, :427:36, VFuBundles.scala:67:53]
        end
        if (rdata_wb_vld) begin	// @[Permutation.scala:480:59]
          if (rdata_wb_idx == rd_vlmul)	// @[Permutation.scala:84:25, :165:29, :434:23]
            rdata_wb_idx <= 3'h0;	// @[Permutation.scala:68:27, :165:29]
          else	// @[Permutation.scala:434:23]
            rdata_wb_idx <= rdata_wb_idx + 3'h1;	// @[Permutation.scala:165:29, :437:36, VFuBundles.scala:67:53]
        end
        if (update_vd_idx) begin	// @[Permutation.scala:372:30]
          if (vd_idx == rd_vlmul)	// @[Permutation.scala:84:25, :166:23, :444:17]
            vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :166:23]
          else	// @[Permutation.scala:444:17]
            vd_idx <= vd_idx + 3'h1;	// @[Permutation.scala:166:23, :447:24, VFuBundles.scala:67:53]
        end
        if (rd_vs_en & reg_vslide) begin	// @[Permutation.scala:119:66, :178:25, :232:23]
          if (vslide_rd_cnt == vslide_cnt_max)	// @[Permutation.scala:176:30, :229:52, :233:24]
            vslide_rd_cnt <= 2'h0;	// @[Permutation.scala:176:30]
          else	// @[Permutation.scala:233:24]
            vslide_rd_cnt <= vslide_rd_cnt + 2'h1;	// @[Permutation.scala:176:30, :236:38, :262:31]
        end
        vmask_vl <= mask & 128'hFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF >> 8'h80 - vl_reg;	// @[Permutation.scala:70:21, :83:23, :131:15, :273:25, :285:{25,36}, :292:22]
        if (cmprs_rd_old_vd) begin	// @[Permutation.scala:281:32]
          if (cmprs_rd_old_vd_idx == rd_vlmul)	// @[Permutation.scala:84:25, :282:36, :315:30]
            cmprs_rd_old_vd_idx <= 3'h0;	// @[Permutation.scala:68:27, :282:36]
          else	// @[Permutation.scala:315:30]
            cmprs_rd_old_vd_idx <= cmprs_rd_old_vd_idx + 3'h1;	// @[Permutation.scala:282:36, :318:50, VFuBundles.scala:67:53]
        end
        else	// @[Permutation.scala:281:32]
          cmprs_rd_old_vd_idx <= _cmprs_rd_wb_T_1[6:4];	// @[Permutation.scala:282:36, :295:49, :311:{23,34}]
        if (rd_vs_en & reg_vrgather) begin	// @[Permutation.scala:120:58, :178:25, :347:23]
          if (_T_24)	// @[Permutation.scala:341:62]
            vrgather_rd_cnt <= 4'h0;	// @[Bitwise.scala:77:12, Permutation.scala:336:32]
          else	// @[Permutation.scala:341:62]
            vrgather_rd_cnt <= vrgather_rd_cnt + 4'h1;	// @[Permutation.scala:249:46, :336:32, :351:42]
        end
        if (io_in_rvalid)
          rdata_reg <= io_in_rdata;	// @[Permutation.scala:451:26]
        if (rd_en) begin	// @[Permutation.scala:710:38]
          if (reg_vcompress) begin	// @[Permutation.scala:115:81]
            if (rd_mask_en)	// @[Permutation.scala:177:27]
              reg_rd_preg_idx <= vs1_preg_idx_reg_0;	// @[Permutation.scala:75:33, :712:32]
            else if (reg_vcompress & rd_vs_en)	// @[Permutation.scala:115:81, :178:25, :325:28]
              reg_rd_preg_idx <= _GEN_16;	// @[Permutation.scala:326:23, :712:32]
            else if (cmprs_rd_old_vd)	// @[Permutation.scala:281:32]
              reg_rd_preg_idx <= _GEN_14[cmprs_rd_old_vd_idx];	// @[Permutation.scala:261:26, :282:36, :328:23, :712:32]
            else	// @[Permutation.scala:281:32]
              reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
          end
          else if (reg_vslide) begin	// @[Permutation.scala:119:66]
            if (rd_mask_en | ~(reg_vslide & rd_vs_en))	// @[Permutation.scala:119:66, :177:27, :178:25, :257:20, :258:24, :259:{25,38}]
              reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
            else if (vslide_rd_cnt == 2'h0)	// @[Permutation.scala:176:30, :260:24]
              reg_rd_preg_idx <= _GEN_17;	// @[Permutation.scala:261:26, :712:32]
            else if (_T_8 & vslide_lo_valid)	// @[Permutation.scala:173:28, :262:{31,40}]
              reg_rd_preg_idx <= _GEN_15[_T_62 ? vs_idx - vslide_bytes[6:4] - 3'h1 : _T_69 ? vs_idx + vslide_bytes[6:4] : 3'h0];	// @[Permutation.scala:68:27, :163:23, :171:33, :173:{42,112}, :246:13, :248:39, :249:{15,25,39,46}, :251:45, :252:{15,25,39}, :263:26, :712:32]
            else if (_T_8 & vslide_hi_valid & ~vslide_lo_valid | vslide_rd_cnt == 2'h2)	// @[Permutation.scala:54:55, :173:28, :174:28, :176:30, :262:31, :264:{59,62,80}, :265:26, :266:{30,39}]
              reg_rd_preg_idx <= _GEN_15[_T_62 ? vs_idx - vslide_bytes[6:4] : _T_69 ? vs_idx + vslide_bytes[6:4] + 3'h1 : 3'h0];	// @[Permutation.scala:68:27, :163:23, :171:33, :173:{42,112}, :247:13, :248:39, :249:39, :250:{15,25}, :251:45, :252:39, :253:{15,46}, :263:26, :265:26, :712:32, VFuBundles.scala:67:53]
            else	// @[Permutation.scala:264:80, :265:26, :266:39]
              reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
          end
          else if (rd_mask_en | ~(reg_vrgather & rd_vs_en))	// @[Permutation.scala:120:58, :177:27, :178:25, :356:20, :357:26, :358:{27,40}]
            reg_rd_preg_idx <= 8'h0;	// @[Permutation.scala:712:32]
          else if (vrgather_rd_cnt == 4'h0)	// @[Bitwise.scala:77:12, Permutation.scala:336:32, :359:26]
            reg_rd_preg_idx <= _GEN_17;	// @[Permutation.scala:261:26, :712:32]
          else if (vrgather_rd_cnt == 4'h1) begin	// @[Permutation.scala:249:46, :336:32, :361:32]
            if (reg_vrgather_vxi)	// @[Permutation.scala:114:42]
              reg_rd_preg_idx <= _GEN_16;	// @[Permutation.scala:326:23, :712:32]
            else	// @[Permutation.scala:114:42]
              reg_rd_preg_idx <= _GEN_13[vs_idx];	// @[Permutation.scala:163:23, :365:30, :712:32]
          end
          else	// @[Permutation.scala:361:32]
            reg_rd_preg_idx <= _GEN_15[vrgather_rd_cnt[2:0] - 3'h2];	// @[Permutation.scala:263:26, :336:32, :351:42, :368:{28,64}, :712:32]
        end
      end
      rd_mask_en <= ~flush & rec_done;	// @[Permutation.scala:33:35, :89:22, :177:27, :194:15, :203:12, :210:25, :383:15, :384:16, :385:25]
      rd_vs_en <= ~flush & (~reg_vcompress & rd_mask_en | reg_vcompress & mask_valid | ~(update_vs_idx & vs_idx == vrgather16_sew8_rd_vlmul) & rd_vs_en);	// @[Permutation.scala:71:27, :89:22, :115:81, :163:23, :177:27, :178:25, :194:15, :203:12, :210:25, :378:64, :390:34, :391:15, :392:14, :393:{14,29,44}, :394:14, :395:{28,43}, :396:14, :397:{28,39,70}, :398:14]
      calc_done <= ~flush & vd_idx == rd_vlmul & update_vd_idx;	// @[Permutation.scala:84:25, :89:22, :166:23, :192:26, :194:15, :203:12, :210:25, :372:30, :521:15, :522:15, :523:{22,54}]
      if (_T_15 | cmprs_rd_old_vd)	// @[Permutation.scala:281:32, :298:{16,25}]
        rd_ones_sum <= 8'h0;	// @[Permutation.scala:277:28]
      else if (cmprs_update_vs_idx)	// @[Permutation.scala:331:52]
        rd_ones_sum <= _cmprs_rd_wb_T_1;	// @[Permutation.scala:277:28, :295:49]
      cmprs_rd_old_vd <= ~_T_15 & (reg_vcompress & update_vs_idx & vs_idx == rd_vlmul & ~rd_done | cmprs_rd_old_vd);	// @[Permutation.scala:84:25, :115:81, :163:23, :191:39, :281:32, :298:16, :304:26, :305:21, :306:{57,72,75,85}, :307:21, :378:64]
      update_vd_idx <= _GEN_20;	// @[Permutation.scala:372:30, :373:15, :374:19, :376:19]
      rvalid_reg <= ~flush & io_in_rvalid;	// @[Permutation.scala:89:22, :194:15, :203:12, :210:25, :452:27, :460:15, :461:16, :463:16]
      rdata_update_vs_idx_reg <= ~flush & rdata_update_vs_idx;	// @[Permutation.scala:89:22, :194:15, :203:12, :210:25, :484:93, :651:40, :655:15, :656:29, :660:29]
      rdata_wb_vld_reg <= _GEN_20;	// @[Permutation.scala:373:15, :374:19, :376:19, :652:33]
      rdata_wb_vld_reg2 <= ~flush & rdata_wb_vld_reg;	// @[Permutation.scala:89:22, :194:15, :203:12, :210:25, :652:33, :653:34, :655:15, :658:23, :662:23]
      reg_rd_en <= ~flush & rd_en;	// @[Permutation.scala:89:22, :194:15, :203:12, :210:25, :710:38, :711:26, :714:15, :715:15, :717:15]
    end
    if (rec_done)	// @[Permutation.scala:33:35]
      uop_reg_info_vlmul <= io_in_uop_info_vlmul;	// @[Permutation.scala:727:20]
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    logic [31:0] _RANDOM_25;
    logic [31:0] _RANDOM_26;
    logic [31:0] _RANDOM_27;
    logic [31:0] _RANDOM_28;
    logic [31:0] _RANDOM_29;
    logic [31:0] _RANDOM_30;
    logic [31:0] _RANDOM_31;
    logic [31:0] _RANDOM_32;
    logic [31:0] _RANDOM_33;
    logic [31:0] _RANDOM_34;
    logic [31:0] _RANDOM_35;
    logic [31:0] _RANDOM_36;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        _RANDOM_25 = `RANDOM;
        _RANDOM_26 = `RANDOM;
        _RANDOM_27 = `RANDOM;
        _RANDOM_28 = `RANDOM;
        _RANDOM_29 = `RANDOM;
        _RANDOM_30 = `RANDOM;
        _RANDOM_31 = `RANDOM;
        _RANDOM_32 = `RANDOM;
        _RANDOM_33 = `RANDOM;
        _RANDOM_34 = `RANDOM;
        _RANDOM_35 = `RANDOM;
        _RANDOM_36 = `RANDOM;
        funct6_reg = _RANDOM_0[5:0];	// @[Permutation.scala:67:27]
        funct3_reg = _RANDOM_0[8:6];	// @[Permutation.scala:67:27, :68:27]
        vsew_reg = _RANDOM_0[11:9];	// @[Permutation.scala:67:27, :69:25]
        mask = {_RANDOM_0[31:12], _RANDOM_1, _RANDOM_2, _RANDOM_3, _RANDOM_4[11:0]};	// @[Permutation.scala:67:27, :70:21]
        mask_valid = _RANDOM_4[12];	// @[Permutation.scala:70:21, :71:27]
        old_vd = {_RANDOM_4[31:13], _RANDOM_5, _RANDOM_6, _RANDOM_7, _RANDOM_8[12:0]};	// @[Permutation.scala:70:21, :72:23]
        vs_reg = {_RANDOM_8[31:13], _RANDOM_9, _RANDOM_10, _RANDOM_11, _RANDOM_12[12:0]};	// @[Permutation.scala:72:23, :73:23]
        rs1_reg = {_RANDOM_12[31:13], _RANDOM_13, _RANDOM_14[12:0]};	// @[Permutation.scala:73:23, :74:24]
        vs1_preg_idx_reg_0 = _RANDOM_14[20:13];	// @[Permutation.scala:74:24, :75:33]
        vs1_preg_idx_reg_1 = _RANDOM_14[28:21];	// @[Permutation.scala:74:24, :75:33]
        vs1_preg_idx_reg_2 = {_RANDOM_14[31:29], _RANDOM_15[4:0]};	// @[Permutation.scala:74:24, :75:33]
        vs1_preg_idx_reg_3 = _RANDOM_15[12:5];	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_4 = _RANDOM_15[20:13];	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_5 = _RANDOM_15[28:21];	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_6 = {_RANDOM_15[31:29], _RANDOM_16[4:0]};	// @[Permutation.scala:75:33]
        vs1_preg_idx_reg_7 = _RANDOM_16[12:5];	// @[Permutation.scala:75:33]
        vs2_preg_idx_reg_0 = _RANDOM_16[20:13];	// @[Permutation.scala:75:33, :76:33]
        vs2_preg_idx_reg_1 = _RANDOM_16[28:21];	// @[Permutation.scala:75:33, :76:33]
        vs2_preg_idx_reg_2 = {_RANDOM_16[31:29], _RANDOM_17[4:0]};	// @[Permutation.scala:75:33, :76:33]
        vs2_preg_idx_reg_3 = _RANDOM_17[12:5];	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_4 = _RANDOM_17[20:13];	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_5 = _RANDOM_17[28:21];	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_6 = {_RANDOM_17[31:29], _RANDOM_18[4:0]};	// @[Permutation.scala:76:33]
        vs2_preg_idx_reg_7 = _RANDOM_18[12:5];	// @[Permutation.scala:76:33]
        old_vd_preg_idx_reg_0 = _RANDOM_18[20:13];	// @[Permutation.scala:76:33, :77:36]
        old_vd_preg_idx_reg_1 = _RANDOM_18[28:21];	// @[Permutation.scala:76:33, :77:36]
        old_vd_preg_idx_reg_2 = {_RANDOM_18[31:29], _RANDOM_19[4:0]};	// @[Permutation.scala:76:33, :77:36]
        old_vd_preg_idx_reg_3 = _RANDOM_19[12:5];	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_4 = _RANDOM_19[20:13];	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_5 = _RANDOM_19[28:21];	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_6 = {_RANDOM_19[31:29], _RANDOM_20[4:0]};	// @[Permutation.scala:77:36]
        old_vd_preg_idx_reg_7 = _RANDOM_20[12:5];	// @[Permutation.scala:77:36]
        vm_reg = _RANDOM_20[21];	// @[Permutation.scala:77:36, :79:23]
        ta_reg = _RANDOM_20[22];	// @[Permutation.scala:77:36, :80:23]
        ma_reg = _RANDOM_20[23];	// @[Permutation.scala:77:36, :81:23]
        vstart_reg = _RANDOM_20[30:24];	// @[Permutation.scala:77:36, :82:27]
        vl_reg = {_RANDOM_20[31], _RANDOM_21[6:0]};	// @[Permutation.scala:77:36, :83:23]
        rd_vlmul = _RANDOM_21[9:7];	// @[Permutation.scala:83:23, :84:25]
        vlmul_reg = _RANDOM_21[12:10];	// @[Permutation.scala:83:23, :85:26]
        perm_busy = _RANDOM_21[13];	// @[Permutation.scala:83:23, :88:26]
        flush = _RANDOM_21[14];	// @[Permutation.scala:83:23, :89:22]
        wb_idx = _RANDOM_21[26:24];	// @[Permutation.scala:83:23, :126:23]
        vlRemain = {_RANDOM_21[31:27], _RANDOM_22[2:0]};	// @[Permutation.scala:83:23, :128:25]
        vlRemain_reg = _RANDOM_22[10:3];	// @[Permutation.scala:128:25, :133:29]
        vd_reg = {_RANDOM_22[31:11], _RANDOM_23, _RANDOM_24, _RANDOM_25, _RANDOM_26[10:0]};	// @[Permutation.scala:128:25, :148:23]
        vs_idx = _RANDOM_26[13:11];	// @[Permutation.scala:148:23, :163:23]
        rdata_vs_idx = _RANDOM_26[16:14];	// @[Permutation.scala:148:23, :164:29]
        rdata_wb_idx = _RANDOM_26[19:17];	// @[Permutation.scala:148:23, :165:29]
        vd_idx = _RANDOM_26[22:20];	// @[Permutation.scala:148:23, :166:23]
        vslide_rd_cnt = _RANDOM_26[24:23];	// @[Permutation.scala:148:23, :176:30]
        rd_mask_en = _RANDOM_26[25];	// @[Permutation.scala:148:23, :177:27]
        rd_vs_en = _RANDOM_26[26];	// @[Permutation.scala:148:23, :178:25]
        calc_done = _RANDOM_26[27];	// @[Permutation.scala:148:23, :192:26]
        vmask_vl = {_RANDOM_26[31:28], _RANDOM_27, _RANDOM_28, _RANDOM_29, _RANDOM_30[27:0]};	// @[Permutation.scala:148:23, :273:25]
        rd_ones_sum = {_RANDOM_30[31:28], _RANDOM_31[3:0]};	// @[Permutation.scala:273:25, :277:28]
        cmprs_rd_old_vd = _RANDOM_31[4];	// @[Permutation.scala:277:28, :281:32]
        cmprs_rd_old_vd_idx = _RANDOM_31[7:5];	// @[Permutation.scala:277:28, :282:36]
        vrgather_rd_cnt = _RANDOM_31[11:8];	// @[Permutation.scala:277:28, :336:32]
        update_vd_idx = _RANDOM_31[12];	// @[Permutation.scala:277:28, :372:30]
        rdata_reg = {_RANDOM_31[31:13], _RANDOM_32, _RANDOM_33, _RANDOM_34, _RANDOM_35[12:0]};	// @[Permutation.scala:277:28, :451:26]
        rvalid_reg = _RANDOM_35[13];	// @[Permutation.scala:451:26, :452:27]
        rdata_update_vs_idx_reg = _RANDOM_35[14];	// @[Permutation.scala:451:26, :651:40]
        rdata_wb_vld_reg = _RANDOM_35[15];	// @[Permutation.scala:451:26, :652:33]
        rdata_wb_vld_reg2 = _RANDOM_35[16];	// @[Permutation.scala:451:26, :653:34]
        vstartRemain = _RANDOM_35[23:17];	// @[Permutation.scala:451:26, :681:29]
        reg_rd_en = _RANDOM_35[24];	// @[Permutation.scala:451:26, :711:26]
        reg_rd_preg_idx = {_RANDOM_35[31:25], _RANDOM_36[0]};	// @[Permutation.scala:451:26, :712:32]
        uop_reg_info_vlmul = _RANDOM_36[27:25];	// @[Permutation.scala:712:32, :727:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  perm_RegFifo vperm_fifo (	// @[Permutation.scala:466:26]
    .clock        (clock),
    .reset        (reset),
    .io_rst       (flush),	// @[Permutation.scala:89:22]
    .io_enq_valid (_rd_en_T | cmprs_rd_old_vd),	// @[Permutation.scala:281:32, :477:{41,53}]
    .io_enq_bits  ({reg_vcompress ? {3'h0, cmprs_rd_old_vd, cmprs_rd_wb, update_vs_idx} : reg_vslide ? {2'h0, vslide_rd_cnt, vslide_hi_valid, vslide_lo_valid} : {1'h0, vrgather_rd_cnt, update_vs_idx}, wb_vld, rd_mask_en}),	// @[Cat.scala:33:92, Permutation.scala:68:27, :115:81, :119:66, :173:28, :174:28, :176:30, :177:27, :281:32, :295:32, :336:32, :378:64, :379:43, :476:{32,69}]
    .io_deq_ready (rvalid_reg & _vperm_fifo_io_deq_valid),	// @[Permutation.scala:452:27, :466:26, :478:41]
    .io_deq_valid (_vperm_fifo_io_deq_valid),
    .io_deq_bits  (_vperm_fifo_io_deq_bits)
  );
  VslideEngine vslideEngine (	// @[Permutation.scala:571:28]
    .io_funct6       (funct6_reg),	// @[Permutation.scala:67:27]
    .io_funct3       (funct3_reg),	// @[Permutation.scala:68:27]
    .io_vm           (vm_reg),	// @[Permutation.scala:79:23]
    .io_ma           (ma_reg),	// @[Permutation.scala:81:23]
    .io_vsew         (vsew_reg),	// @[Permutation.scala:69:25]
    .io_vlmul        (vlmul_reg),	// @[Permutation.scala:85:26]
    .io_vl           (vl_reg),	// @[Permutation.scala:83:23]
    .io_vd_idx       (rdata_wb_idx),	// @[Permutation.scala:165:29]
    .io_rs1          (rs1_reg),	// @[Permutation.scala:74:24]
    .io_vs2_hi       (_T_62 ? (_T_65 | ~_GEN_9 ? 128'h0 : rdata_reg) : _T_69 ? rdata_reg : 128'h0),	// @[Permutation.scala:70:21, :173:{42,112}, :451:26, :543:10, :544:17, :546:39, :547:{33,60}, :549:65, :550:21, :552:64, :553:21, :557:45, :568:12]
    .io_vs2_lo       (_T_62 ? (_T_65 | _T_67 | ~_T_68 ? 128'h0 : vs_reg) : _T_69 ? (rdata_vslide_hi_valid & rdata_vslide_lo_valid ? vs_reg : rdata_reg) : 128'h0),	// @[Permutation.scala:70:21, :73:23, :173:{42,112}, :451:26, :481:95, :482:95, :542:10, :546:39, :547:{33,60}, :549:{38,65}, :552:{38,64}, :557:45, :563:{32,58}, :564:14, :566:14]
    .io_old_vd       (_T_62 ? (_T_65 ? rdata_reg : _GEN_9 ? old_vd : 128'h0) : _T_69 ? (rdata_vslide_hi_valid | rdata_vslide_lo_valid ? old_vd : rdata_reg) : 128'h0),	// @[Permutation.scala:70:21, :72:23, :173:{42,112}, :451:26, :481:95, :482:95, :544:17, :546:39, :547:{33,60}, :548:21, :549:65, :550:21, :552:64, :553:21, :557:45, :558:{32,58}, :559:21, :561:21]
    .io_vmask        (mask),	// @[Permutation.scala:70:21]
    .io_vslideup_vd  (_vslideEngine_io_vslideup_vd),
    .io_vslidedn_vd  (_vslideEngine_io_vslidedn_vd),
    .io_vslide1up_vd (_vslideEngine_io_vslide1up_vd),
    .io_vslide1dn_vd (_vslideEngine_io_vslide1dn_vd)
  );
  VcmprsEngine vcmprsEngine (	// @[Permutation.scala:590:28]
    .clock              (clock),
    .reset              (reset),
    .io_ta              (ta_reg & _GEN_10 < vl_reg),	// @[Permutation.scala:80:23, :83:23, :595:{32,47}]
    .io_vsew            (vsew_reg),	// @[Permutation.scala:69:25]
    .io_vs_idx          (rdata_vs_idx),	// @[Permutation.scala:164:29]
    .io_vd_idx          (rdata_wb_idx),	// @[Permutation.scala:165:29]
    .io_vs2             (rdata_reg),	// @[Permutation.scala:451:26]
    .io_old_vd          (rdata_reg),	// @[Permutation.scala:451:26]
    .io_vmask           (vmask_vl),	// @[Permutation.scala:273:25]
    .io_vd_reg          (vd_reg),	// @[Permutation.scala:148:23]
    .io_cmprs_rd_wb     (rvalid_reg & _vperm_fifo_io_deq_bits[3] & _vperm_fifo_io_deq_valid & reg_vcompress),	// @[Permutation.scala:115:81, :452:27, :466:26, :482:64, :485:91]
    .io_update_vs_idx   (rdata_update_vs_idx),	// @[Permutation.scala:484:93]
    .io_cmprs_rd_old_vd (rvalid_reg & _vperm_fifo_io_deq_bits[4] & _vperm_fifo_io_deq_valid & reg_vcompress),	// @[Permutation.scala:115:81, :452:27, :466:26, :486:{64,95}]
    .io_calc_done       (calc_done),	// @[Permutation.scala:192:26]
    .io_flush           (flush),	// @[Permutation.scala:89:22]
    .io_cmprs_vd        (_vcmprsEngine_io_cmprs_vd)
  );
  VrgatherEngine vrgatherEngine (	// @[Permutation.scala:618:30]
    .io_funct6      (funct6_reg),	// @[Permutation.scala:67:27]
    .io_funct3      (funct3_reg),	// @[Permutation.scala:68:27]
    .io_vm          (vm_reg),	// @[Permutation.scala:79:23]
    .io_ma          (ma_reg),	// @[Permutation.scala:81:23]
    .io_vsew        (vsew_reg),	// @[Permutation.scala:69:25]
    .io_vlmul       (vlmul_reg),	// @[Permutation.scala:85:26]
    .io_vl          (vl_reg),	// @[Permutation.scala:83:23]
    .io_first       (_vrgather_update_vs2_T & ~rdata_rd_mask_en & rdata_vrgather_rd_cnt == 4'h2),	// @[Permutation.scala:479:63, :487:{43,95}, :613:{45,63,89}]
    .io_update_vs2  (vrgather_update_vs2),	// @[Permutation.scala:614:111]
    .io_vs2_cnt     (rdata_vrgather_rd_cnt[2:0] - 3'h2),	// @[Permutation.scala:487:95, :616:45]
    .io_vd_idx      (rdata_vs_idx),	// @[Permutation.scala:164:29]
    .io_rs1         (rs1_reg),	// @[Permutation.scala:74:24]
    .io_vs1         (vs_reg),	// @[Permutation.scala:73:23]
    .io_vs2         (rdata_reg),	// @[Permutation.scala:451:26]
    .io_old_vd      (old_vd),	// @[Permutation.scala:72:23]
    .io_vmask       (mask),	// @[Permutation.scala:70:21]
    .io_vd_reg      (vd_reg),	// @[Permutation.scala:148:23]
    .io_vrgather_vd (_vrgatherEngine_io_vrgather_vd)
  );
  assign io_out_uop_info_vlmul = uop_reg_info_vlmul;	// @[Permutation.scala:727:20]
  assign io_out_rd_en = reg_rd_en & ~flush;	// @[Permutation.scala:89:22, :98:86, :711:26, :734:29]
  assign io_out_rd_preg_idx = reg_rd_preg_idx;	// @[Permutation.scala:712:32]
  assign io_out_wb_vld = reg_vcompress ? rdata_wb_vld_reg2 & ~flush : rdata_wb_vld_reg & ~flush;	// @[Permutation.scala:89:22, :98:86, :115:81, :652:33, :653:34, :736:{23,57,84}]
  assign io_out_wb_data = reg_vcompress ? vd_reg : _GEN_10 >= vl_reg ? old_vd : update_vd_idx ? vd_reg & vmask_tail_bits & _vmask_vstart_bits_T[127:0] | ({128{ta_reg}} | old_vd) & ~vmask_tail_bits | old_vd & ~(_vmask_vstart_bits_T[127:0]) : vd_reg;	// @[Permutation.scala:72:23, :80:23, :83:23, :115:81, :143:30, :144:31, :146:20, :148:23, :372:30, :595:47, :688:{21,32}, :689:{30,33}, :701:21, :702:{19,30}, :703:23, :704:29, :705:{23,52,83}, :708:17]
endmodule

