// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module VFDecoder(
  input  [24:0] io_instr,
  output [1:0]  io_fpCtrl_fmaCmd,
  output        io_fpCtrl_negVs1,
                io_fpCtrl_negVs2,
                io_fpCtrl_negVd,
                io_fpCtrl_switchVdVs2,
                io_fpCtrl_isCvt,
                io_fpCtrl_cvtSigned,
  output [2:0]  io_fpCtrl_cvtCmd,
  output [1:0]  io_fpCtrl_cvtRm,
  output        io_fpCtrl_isMisc,
  output [4:0]  io_fpCtrl_miscCmd,
  output [2:0]  io_fpCtrl_miscSubCmd,
  output        io_fpCtrl_isRec7,
                io_fpCtrl_isRecSqrt7,
                io_fpCtrl_isDivSqrt,
                io_fpCtrl_isSqrt,
                io_fpCtrl_divReverse
);

  wire [18:0] _GEN = ~(io_instr[24:6]);	// @[pla.scala:78:21]
  wire [4:0]  _decoders_decoded_T_12 = {io_instr[5], _GEN[0], io_instr[22], _GEN[17], io_instr[24]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [4:0]  _decoders_decoded_T_22 = {io_instr[5], _GEN[0], io_instr[21], io_instr[22], io_instr[24]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoders_decoded_T_60 = {io_instr[5], _GEN[0], _GEN[1], io_instr[9], io_instr[10], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [11:0] _decoders_decoded_T_62 = {io_instr[5], _GEN[0], _GEN[1], io_instr[9], io_instr[10], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [6:0]  _decoders_decoded_T_68 = {io_instr[5], _GEN[0], _GEN[13], io_instr[21], _GEN[16], _GEN[17], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [6:0]  _decoders_decoded_T_74 = {io_instr[5], _GEN[0], _GEN[13], _GEN[15], io_instr[22], _GEN[17], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [9:0]  _decoders_decoded_T_86 = {io_instr[5], _GEN[0], io_instr[7], _GEN[12], io_instr[19], io_instr[20], io_instr[21], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [14:0] _decoders_decoded_T_88 = {io_instr[5], _GEN[0], io_instr[7], _GEN[7], _GEN[8], _GEN[9], _GEN[10], _GEN[11], io_instr[18], io_instr[19], io_instr[20], io_instr[21], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [6:0]  _decoders_decoded_T_90 = {io_instr[5], _GEN[0], _GEN[13], _GEN[14], io_instr[22], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [6:0]  _decoders_decoded_T_92 = {io_instr[5], _GEN[0], io_instr[19], _GEN[15], io_instr[22], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [6:0]  _decoders_decoded_T_94 = {io_instr[5], _GEN[0], io_instr[7], io_instr[19], io_instr[22], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  wire [13:0] _decoders_decoded_T_108 = {io_instr[5], _GEN[0], _GEN[1], _GEN[2], _GEN[3], _GEN[4], _GEN[5], _GEN[6], io_instr[19], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29]
  assign io_fpCtrl_fmaCmd = {|{&{io_instr[5], _GEN[0], _GEN[13], _GEN[15], _GEN[16], _GEN[17], _GEN[18]}, &{io_instr[5], _GEN[0], io_instr[7], io_instr[19], io_instr[20], io_instr[21], _GEN[17], io_instr[24]}, &_decoders_decoded_T_12, &_decoders_decoded_T_22, &{io_instr[5], _GEN[0], _GEN[13], _GEN[16], io_instr[23], io_instr[24]}}, |{&{io_instr[5], _GEN[0], _GEN[13], _GEN[14], io_instr[21], _GEN[17], io_instr[24]}, &{io_instr[5], _GEN[0], _GEN[13], _GEN[14], io_instr[22], io_instr[24]}, &_decoders_decoded_T_12, &_decoders_decoded_T_22}};	// @[Cat.scala:33:92, VFDecoder.scala:186:33, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_negVs1 = |{&{io_instr[5], _GEN[0], _GEN[13], io_instr[20], _GEN[15], _GEN[16], _GEN[17], _GEN[18]}, &{io_instr[5], _GEN[0], io_instr[19], io_instr[22], _GEN[17], io_instr[24]}, &{io_instr[5], _GEN[0], io_instr[19], io_instr[21], io_instr[22], io_instr[24]}, &{io_instr[5], _GEN[0], _GEN[13], io_instr[20], _GEN[16], io_instr[23], io_instr[24]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_negVs2 = |{&{io_instr[5], _GEN[0], io_instr[7], io_instr[19], io_instr[20], io_instr[21], _GEN[16], _GEN[17], io_instr[24]}, &{io_instr[5], _GEN[0], io_instr[19], _GEN[14], _GEN[15], io_instr[22], _GEN[17], io_instr[24]}, &{io_instr[5], _GEN[0], _GEN[13], io_instr[20], _GEN[15], io_instr[22], _GEN[17], io_instr[24]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_negVd = |{&{io_instr[5], _GEN[0], io_instr[19], _GEN[14], io_instr[21], io_instr[22], io_instr[24]}, &{io_instr[5], _GEN[0], _GEN[13], io_instr[20], io_instr[21], io_instr[22], io_instr[24]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_switchVdVs2 = &{io_instr[5], _GEN[0], _GEN[15], io_instr[22], _GEN[17], io_instr[24]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign io_fpCtrl_isCvt = |{&{io_instr[5], _GEN[0], _GEN[1], _GEN[4], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[9], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], _GEN[2], io_instr[11], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], _GEN[5], io_instr[12], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_cvtSigned = |{&{io_instr[5], _GEN[0], _GEN[1], io_instr[8], _GEN[4], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[8], _GEN[4], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[8], io_instr[9], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[8], io_instr[9], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_cvtCmd = {|{&{io_instr[5], _GEN[0], _GEN[1], io_instr[9], _GEN[4], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[9], _GEN[4], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}}, |{&{io_instr[5], _GEN[0], _GEN[1], _GEN[3], _GEN[4], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], _GEN[3], _GEN[4], _GEN[6], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &_decoders_decoded_T_60, &_decoders_decoded_T_62}, |{&{io_instr[5], _GEN[0], _GEN[1], _GEN[2], _GEN[3], io_instr[10], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[1], _GEN[3], io_instr[10], _GEN[5], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}}};	// @[Cat.scala:33:92, VFDecoder.scala:186:33, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_cvtRm = {|{&_decoders_decoded_T_60, &_decoders_decoded_T_62}, &{io_instr[5], _GEN[0], _GEN[1], io_instr[8], _GEN[3], io_instr[10], _GEN[13], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}};	// @[Cat.scala:33:92, VFDecoder.scala:186:33, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_isMisc = |{&_decoders_decoded_T_68, &{io_instr[5], _GEN[0], _GEN[14], _GEN[15], io_instr[22], _GEN[18]}, &_decoders_decoded_T_74, &{io_instr[5], _GEN[0], _GEN[1], _GEN[2], _GEN[3], _GEN[4], _GEN[5], io_instr[12], io_instr[19], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, &_decoders_decoded_T_86, &_decoders_decoded_T_88, &_decoders_decoded_T_90, &_decoders_decoded_T_92, &_decoders_decoded_T_94};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_miscCmd = {&{io_instr[5], _GEN[0], _GEN[1], _GEN[2], _GEN[3], _GEN[4], io_instr[19], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]}, |{&_decoders_decoded_T_90, &_decoders_decoded_T_92, &_decoders_decoded_T_94}, |{&_decoders_decoded_T_74, &{io_instr[5], _GEN[0], _GEN[14], _GEN[15], io_instr[22], _GEN[17], _GEN[18]}}, &_decoders_decoded_T_68, |{&_decoders_decoded_T_86, &_decoders_decoded_T_88}};	// @[Cat.scala:33:92, VFDecoder.scala:186:33, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_miscSubCmd = {|{&_decoders_decoded_T_68, &{io_instr[5], _GEN[0], _GEN[13], _GEN[14], io_instr[21], io_instr[22], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], io_instr[7], io_instr[19], io_instr[21], io_instr[22], io_instr[23], _GEN[18]}}, |{&{io_instr[5], _GEN[0], _GEN[13], io_instr[20], io_instr[21], _GEN[16], _GEN[17], _GEN[18]}, &{io_instr[5], _GEN[0], _GEN[13], io_instr[20], _GEN[15], io_instr[22], _GEN[17], _GEN[18]}, &{io_instr[5], _GEN[0], io_instr[19], io_instr[20], _GEN[15], io_instr[22], io_instr[23], _GEN[18]}, &{io_instr[5], _GEN[0], io_instr[7], io_instr[19], io_instr[20], io_instr[22], io_instr[23], _GEN[18]}}, |{&{io_instr[5], _GEN[0], io_instr[19], _GEN[14], _GEN[15], io_instr[22], _GEN[18]}, &_decoders_decoded_T_92, &_decoders_decoded_T_94}};	// @[Cat.scala:33:92, VFDecoder.scala:186:33, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_isRec7 = &{io_instr[5], _GEN[0], _GEN[1], io_instr[8], _GEN[3], io_instr[10], _GEN[5], _GEN[6], io_instr[19], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign io_fpCtrl_isRecSqrt7 = &{io_instr[5], _GEN[0], _GEN[1], _GEN[2], _GEN[3], io_instr[10], _GEN[5], _GEN[6], io_instr[19], io_instr[20], _GEN[15], _GEN[16], io_instr[23], _GEN[18]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
  assign io_fpCtrl_isDivSqrt = |{&_decoders_decoded_T_108, &{io_instr[5], _GEN[0], _GEN[13], _GEN[14], _GEN[15], _GEN[16], _GEN[17], io_instr[24]}, &{io_instr[5], _GEN[0], io_instr[7], _GEN[14], _GEN[15], _GEN[16], _GEN[17], io_instr[24]}};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74, :114:39]
  assign io_fpCtrl_isSqrt = &_decoders_decoded_T_108;	// @[Cat.scala:33:92, pla.scala:98:74]
  assign io_fpCtrl_divReverse = &{io_instr[5], _GEN[0], io_instr[7], io_instr[19], _GEN[14], _GEN[15], _GEN[16], _GEN[17], io_instr[24]};	// @[Cat.scala:33:92, pla.scala:78:21, :90:45, :91:29, :98:74]
endmodule

