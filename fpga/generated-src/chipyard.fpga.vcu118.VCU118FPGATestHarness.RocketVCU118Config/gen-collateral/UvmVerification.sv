// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module UvmVerification(
  input           clock,
                  reset,
  input  [39:0]   io_uvm_in_mem_npc,
  input           io_uvm_in_wb_reg_valid,
                  io_uvm_in_wb_ctrl_wfd,
                  io_uvm_in_wb_ctrl_vector,
                  io_uvm_in_vpu_commit_vld,
  input  [39:0]   io_uvm_in_wb_reg_pc,
  input  [31:0]   io_uvm_in_wb_reg_raw_inst,
                  io_uvm_in_wb_reg_inst,
  input  [63:0]   io_uvm_in_ver_read_withoutrestrict,
  input           io_uvm_in_wb_xcpt,
  input  [1983:0] io_uvm_in_ver_read,
  input  [127:0]  io_uvm_in_vpu_rfdata_0,
                  io_uvm_in_vpu_rfdata_1,
                  io_uvm_in_vpu_rfdata_2,
                  io_uvm_in_vpu_rfdata_3,
                  io_uvm_in_vpu_rfdata_4,
                  io_uvm_in_vpu_rfdata_5,
                  io_uvm_in_vpu_rfdata_6,
                  io_uvm_in_vpu_rfdata_7,
                  io_uvm_in_vpu_rfdata_8,
                  io_uvm_in_vpu_rfdata_9,
                  io_uvm_in_vpu_rfdata_10,
                  io_uvm_in_vpu_rfdata_11,
                  io_uvm_in_vpu_rfdata_12,
                  io_uvm_in_vpu_rfdata_13,
                  io_uvm_in_vpu_rfdata_14,
                  io_uvm_in_vpu_rfdata_15,
                  io_uvm_in_vpu_rfdata_16,
                  io_uvm_in_vpu_rfdata_17,
                  io_uvm_in_vpu_rfdata_18,
                  io_uvm_in_vpu_rfdata_19,
                  io_uvm_in_vpu_rfdata_20,
                  io_uvm_in_vpu_rfdata_21,
                  io_uvm_in_vpu_rfdata_22,
                  io_uvm_in_vpu_rfdata_23,
                  io_uvm_in_vpu_rfdata_24,
                  io_uvm_in_vpu_rfdata_25,
                  io_uvm_in_vpu_rfdata_26,
                  io_uvm_in_vpu_rfdata_27,
                  io_uvm_in_vpu_rfdata_28,
                  io_uvm_in_vpu_rfdata_29,
                  io_uvm_in_vpu_rfdata_30,
                  io_uvm_in_vpu_rfdata_31,
  input  [2047:0] io_uvm_in_fpu_ver_read,
  input  [104:0]  io_uvm_in_status,
  input  [63:0]   io_uvm_in_mepc,
                  io_uvm_in_mtval,
                  io_uvm_in_mtvec,
                  io_uvm_in_mcause,
                  io_uvm_in_mip,
                  io_uvm_in_mie,
                  io_uvm_in_mscratch,
                  io_uvm_in_mideleg,
                  io_uvm_in_medeleg,
                  io_uvm_in_minstret,
                  io_uvm_in_sstatus,
                  io_uvm_in_sepc,
                  io_uvm_in_stval,
                  io_uvm_in_stvec,
                  io_uvm_in_scause,
                  io_uvm_in_satp,
                  io_uvm_in_sscratch,
                  io_uvm_in_vtype,
                  io_uvm_in_vcsr,
                  io_uvm_in_vl,
                  io_uvm_in_vstart,
  input           io_uvm_in_fpu_1_wen,
                  io_uvm_in_wb_set_sboard,
                  io_uvm_in_wb_wen,
  input  [4:0]    io_uvm_in_sboard_waddr,
  input           io_uvm_in_id_wen,
  input  [39:0]   io_uvm_in_ibuf_pc,
  input           io_uvm_in_wb_dcache_miss,
                  io_uvm_in_fpu_sboard_set,
                  io_uvm_in_wb_valid,
  input  [4:0]    io_uvm_in_wb_waddr,
  input           io_uvm_in_ll_wen,
  input  [4:0]    io_uvm_in_ll_waddr,
  input           io_uvm_in_dmem_resp_replay,
                  io_uvm_in_dmem_resp_fpu,
  input  [4:0]    io_uvm_in_dmem_resp_waddr,
  input           io_uvm_in_fpu_sboard_clr,
  input  [4:0]    io_uvm_in_fpu_sboard_clra,
  input           io_uvm_in_fpu_ld,
  input  [39:0]   io_uvm_in_evec,
  input           io_uvm_in_eret,
                  io_uvm_in_flush,
                  io_uvm_in_sfence,
  output          io_uvm_out_commit_start,
                  io_uvm_out_commit_valid,
  output [63:0]   io_uvm_out_commit_prevPc,
                  io_uvm_out_commit_currPc,
  output [31:0]   io_uvm_out_commit_insn,
  output [1:0]    io_uvm_out_sim_halt,
  output [1983:0] io_uvm_out_reg_gpr,
  output [2047:0] io_uvm_out_reg_fpr,
  output [4095:0] io_uvm_out_reg_vpr,
  output [63:0]   io_uvm_out_csr_mstatusWr,
                  io_uvm_out_csr_mepcWr,
                  io_uvm_out_csr_mtvalWr,
                  io_uvm_out_csr_mtvecWr,
                  io_uvm_out_csr_mcauseWr,
                  io_uvm_out_csr_mipWr,
                  io_uvm_out_csr_mieWr,
                  io_uvm_out_csr_mscratchWr,
                  io_uvm_out_csr_midelegWr,
                  io_uvm_out_csr_medelegWr,
                  io_uvm_out_csr_minstretWr,
                  io_uvm_out_csr_sstatusWr,
                  io_uvm_out_csr_sepcWr,
                  io_uvm_out_csr_stvalWr,
                  io_uvm_out_csr_stvecWr,
                  io_uvm_out_csr_scauseWr,
                  io_uvm_out_csr_satpWr,
                  io_uvm_out_csr_sscratchWr,
                  io_uvm_out_csr_vtypeWr,
                  io_uvm_out_csr_vcsrWr,
                  io_uvm_out_csr_vlWr,
                  io_uvm_out_csr_vstartWr,
  output          io_uvm_out_update_reg_valid,
                  io_uvm_out_update_reg_gpr_en,
  output [63:0]   io_uvm_out_update_reg_pc,
  output [4:0]    io_uvm_out_update_reg_rd,
                  io_uvm_out_update_reg_rfd,
  output [63:0]   io_uvm_out_update_reg_data,
  output          io_uvm_out_sfma,
  output [63:0]   io_uvm_out_csr_evec
);

  wire [63:0]       _rf_1_ext_R0_data;	// @[UvmVerification.scala:417:17]
  wire [63:0]       _rf_1_ext_R1_data;	// @[UvmVerification.scala:417:17]
  wire [63:0]       _rf_ext_R0_data;	// @[UvmVerification.scala:417:17]
  wire              _stabilityDetector_io_stable;	// @[UvmVerification.scala:249:33]
  wire              _q_io_out_valid;	// @[UvmVerification.scala:223:17]
  wire [63:0]       _q_io_out_bits_prePc;	// @[UvmVerification.scala:223:17]
  wire [63:0]       _q_io_out_bits_currPc;	// @[UvmVerification.scala:223:17]
  wire [63:0]       _q_io_out_bits_insn;	// @[UvmVerification.scala:223:17]
  reg  [39:0]       wb_npc;	// @[UvmVerification.scala:201:19]
  reg  [39:0]       q_io_in_bits_prePc_REG;	// @[UvmVerification.scala:224:32]
  reg  [39:0]       q_io_in_bits_currPc_REG;	// @[UvmVerification.scala:225:33]
  reg  [31:0]       q_io_in_bits_insn_REG;	// @[UvmVerification.scala:226:31]
  reg               q_io_in_valid_REG;	// @[UvmVerification.scala:228:27]
  reg               trap_valid;	// @[Reg.scala:35:20]
  reg               sfence;	// @[Reg.scala:35:20]
  reg               trap_RET;	// @[Reg.scala:35:20]
  reg  [63:0]       eret_addr;	// @[Reg.scala:35:20]
  reg  [31:0]       commit_insn_r;	// @[Reg.scala:35:20]
  reg               io_uvm_out_commit_start_r;	// @[Reg.scala:35:20]
  reg               io_uvm_out_commit_valid_r;	// @[Reg.scala:35:20]
  wire [63:0]       _GEN = {24'h0, io_uvm_in_wb_reg_pc};	// @[UvmVerification.scala:224:22, :242:44]
  reg  [63:0]       io_uvm_out_commit_prevPc_r;	// @[Reg.scala:35:20]
  wire [63:0]       _GEN_0 = {24'h0, wb_npc};	// @[UvmVerification.scala:201:19, :224:22, :244:141]
  reg  [63:0]       io_uvm_out_commit_currPc_r;	// @[Reg.scala:35:20]
  reg  [63:0]       io_uvm_out_commit_insn_r;	// @[Reg.scala:35:20]
  reg  [1:0]        io_uvm_out_sim_halt_REG;	// @[UvmVerification.scala:258:33]
  reg               io_uvm_out_sfma_REG;	// @[UvmVerification.scala:341:45]
  reg               io_uvm_out_sfma_REG_1;	// @[UvmVerification.scala:341:37]
  reg               io_uvm_out_sfma_REG_2;	// @[UvmVerification.scala:341:29]
  reg               io_uvm_out_sfma_REG_3;	// @[UvmVerification.scala:341:78]
  wire [63:0]       _io_uvm_out_csr_evec_output = {24'h0, io_uvm_in_evec};	// @[UvmVerification.scala:224:22, :342:23]
  wire              _io_uvm_out_update_reg_valid_T_3 = io_uvm_in_wb_set_sboard & io_uvm_in_wb_wen;	// @[UvmVerification.scala:447:34]
  reg               io_uvm_out_update_reg_valid_r;	// @[Reg.scala:35:20]
  reg               io_uvm_out_update_reg_gpr_en_r;	// @[Reg.scala:35:20]
  reg  [63:0]       io_uvm_out_update_reg_pc_r;	// @[Reg.scala:35:20]
  reg  [4:0]        io_uvm_out_update_reg_rd_r;	// @[Reg.scala:35:20]
  reg  [4:0]        io_uvm_out_update_reg_rfd_r;	// @[Reg.scala:35:20]
  wire [31:0][63:0] _GEN_1 = {{io_uvm_in_ver_read[1983:1920]}, {io_uvm_in_ver_read[1919:1856]}, {io_uvm_in_ver_read[1855:1792]}, {io_uvm_in_ver_read[1791:1728]}, {io_uvm_in_ver_read[1727:1664]}, {io_uvm_in_ver_read[1663:1600]}, {io_uvm_in_ver_read[1599:1536]}, {io_uvm_in_ver_read[1535:1472]}, {io_uvm_in_ver_read[1471:1408]}, {io_uvm_in_ver_read[1407:1344]}, {io_uvm_in_ver_read[1343:1280]}, {io_uvm_in_ver_read[1279:1216]}, {io_uvm_in_ver_read[1215:1152]}, {io_uvm_in_ver_read[1151:1088]}, {io_uvm_in_ver_read[1087:1024]}, {io_uvm_in_ver_read[1023:960]}, {io_uvm_in_ver_read[959:896]}, {io_uvm_in_ver_read[895:832]}, {io_uvm_in_ver_read[831:768]}, {io_uvm_in_ver_read[767:704]}, {io_uvm_in_ver_read[703:640]}, {io_uvm_in_ver_read[639:576]}, {io_uvm_in_ver_read[575:512]}, {io_uvm_in_ver_read[511:448]}, {io_uvm_in_ver_read[447:384]}, {io_uvm_in_ver_read[383:320]}, {io_uvm_in_ver_read[319:256]}, {io_uvm_in_ver_read[255:192]}, {io_uvm_in_ver_read[191:128]}, {io_uvm_in_ver_read[127:64]}, {io_uvm_in_ver_read[63:0]}, {64'h0}};	// @[UvmVerification.scala:264:22, :473:43, :475:36]
  wire [31:0][63:0] _GEN_2 = {{io_uvm_in_fpu_ver_read[2047:1984]}, {io_uvm_in_fpu_ver_read[1983:1920]}, {io_uvm_in_fpu_ver_read[1919:1856]}, {io_uvm_in_fpu_ver_read[1855:1792]}, {io_uvm_in_fpu_ver_read[1791:1728]}, {io_uvm_in_fpu_ver_read[1727:1664]}, {io_uvm_in_fpu_ver_read[1663:1600]}, {io_uvm_in_fpu_ver_read[1599:1536]}, {io_uvm_in_fpu_ver_read[1535:1472]}, {io_uvm_in_fpu_ver_read[1471:1408]}, {io_uvm_in_fpu_ver_read[1407:1344]}, {io_uvm_in_fpu_ver_read[1343:1280]}, {io_uvm_in_fpu_ver_read[1279:1216]}, {io_uvm_in_fpu_ver_read[1215:1152]}, {io_uvm_in_fpu_ver_read[1151:1088]}, {io_uvm_in_fpu_ver_read[1087:1024]}, {io_uvm_in_fpu_ver_read[1023:960]}, {io_uvm_in_fpu_ver_read[959:896]}, {io_uvm_in_fpu_ver_read[895:832]}, {io_uvm_in_fpu_ver_read[831:768]}, {io_uvm_in_fpu_ver_read[767:704]}, {io_uvm_in_fpu_ver_read[703:640]}, {io_uvm_in_fpu_ver_read[639:576]}, {io_uvm_in_fpu_ver_read[575:512]}, {io_uvm_in_fpu_ver_read[511:448]}, {io_uvm_in_fpu_ver_read[447:384]}, {io_uvm_in_fpu_ver_read[383:320]}, {io_uvm_in_fpu_ver_read[319:256]}, {io_uvm_in_fpu_ver_read[255:192]}, {io_uvm_in_fpu_ver_read[191:128]}, {io_uvm_in_fpu_ver_read[127:64]}, {io_uvm_in_fpu_ver_read[63:0]}};	// @[UvmVerification.scala:468:42, :475:36]
  wire              _RunPassFail_T_4 = io_uvm_in_wb_reg_inst == 32'h6B;	// @[UvmVerification.scala:255:77]
  wire              _io_uvm_out_update_reg_rfd_T = io_uvm_in_dmem_resp_replay & io_uvm_in_dmem_resp_fpu;	// @[UvmVerification.scala:455:93]
  wire              _io_uvm_out_update_reg_valid_T_15 = io_uvm_in_wb_dcache_miss & io_uvm_in_wb_ctrl_wfd;	// @[UvmVerification.scala:455:295]
  wire [15:0]       _wb_insn_T_3 = (&(io_uvm_in_wb_reg_raw_inst[1:0])) ? io_uvm_in_wb_reg_inst[31:16] : 16'h0;	// @[UvmVerification.scala:221:{45,71,78,108}]
  always @(posedge clock) begin
    wb_npc <= io_uvm_in_mem_npc;	// @[UvmVerification.scala:201:19]
    q_io_in_bits_prePc_REG <= io_uvm_in_wb_reg_pc;	// @[UvmVerification.scala:224:32]
    q_io_in_bits_currPc_REG <= wb_npc;	// @[UvmVerification.scala:201:19, :225:33]
    q_io_in_bits_insn_REG <= {_wb_insn_T_3, io_uvm_in_wb_reg_raw_inst[15:0]};	// @[Cat.scala:33:92, UvmVerification.scala:221:{45,146}, :226:31]
    q_io_in_valid_REG <= io_uvm_in_wb_reg_valid & io_uvm_in_wb_ctrl_vector;	// @[UvmVerification.scala:228:{27,51}]
    io_uvm_out_sfma_REG <= io_uvm_in_fpu_1_wen;	// @[UvmVerification.scala:341:45]
    io_uvm_out_sfma_REG_1 <= io_uvm_out_sfma_REG;	// @[UvmVerification.scala:341:{37,45}]
    io_uvm_out_sfma_REG_2 <= io_uvm_out_sfma_REG_1;	// @[UvmVerification.scala:341:{29,37}]
    io_uvm_out_sfma_REG_3 <= io_uvm_in_fpu_ld;	// @[UvmVerification.scala:341:78]
    if (reset) begin
      trap_valid <= 1'h0;	// @[Reg.scala:35:20]
      sfence <= 1'h0;	// @[Reg.scala:35:20]
      trap_RET <= 1'h0;	// @[Reg.scala:35:20]
      eret_addr <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      commit_insn_r <= 32'h0;	// @[Reg.scala:35:20, UvmVerification.scala:226:21]
      io_uvm_out_commit_start_r <= 1'h0;	// @[Reg.scala:35:20]
      io_uvm_out_commit_valid_r <= 1'h0;	// @[Reg.scala:35:20]
      io_uvm_out_commit_prevPc_r <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      io_uvm_out_commit_currPc_r <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      io_uvm_out_commit_insn_r <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      io_uvm_out_sim_halt_REG <= 2'h0;	// @[Mux.scala:101:16, UvmVerification.scala:258:33]
      io_uvm_out_update_reg_valid_r <= 1'h0;	// @[Reg.scala:35:20]
      io_uvm_out_update_reg_gpr_en_r <= 1'h0;	// @[Reg.scala:35:20]
      io_uvm_out_update_reg_pc_r <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      io_uvm_out_update_reg_rd_r <= 5'h0;	// @[Reg.scala:35:20, UvmVerification.scala:433:17]
      io_uvm_out_update_reg_rfd_r <= 5'h0;	// @[Reg.scala:35:20, UvmVerification.scala:433:17]
    end
    else begin
      trap_valid <= io_uvm_in_wb_xcpt;	// @[Reg.scala:35:20]
      sfence <= io_uvm_in_sfence;	// @[Reg.scala:35:20]
      trap_RET <= io_uvm_in_eret;	// @[Reg.scala:35:20]
      eret_addr <= _io_uvm_out_csr_evec_output;	// @[Reg.scala:35:20, UvmVerification.scala:342:23]
      if (~io_uvm_out_commit_valid_r | trap_valid) begin	// @[Reg.scala:35:20, :36:{18,22}]
      end
      else	// @[Reg.scala:35:20, :36:{18,22}]
        commit_insn_r <= io_uvm_out_commit_insn_r[31:0];	// @[Reg.scala:35:20]
      io_uvm_out_commit_start_r <= io_uvm_in_wb_reg_valid & io_uvm_out_commit_prevPc_r == 64'h80000000 | io_uvm_out_commit_start_r;	// @[Reg.scala:35:20, :36:{18,22}, UvmVerification.scala:239:{96,123}]
      io_uvm_out_commit_valid_r <= io_uvm_in_wb_reg_valid & ~io_uvm_in_wb_ctrl_vector | io_uvm_in_vpu_commit_vld;	// @[Reg.scala:35:20, UvmVerification.scala:240:{65,67,94}]
      if (io_uvm_in_vpu_commit_vld & _q_io_out_valid) begin	// @[Decoupled.scala:51:35, UvmVerification.scala:223:17]
        io_uvm_out_commit_prevPc_r <= _q_io_out_bits_prePc;	// @[Reg.scala:35:20, UvmVerification.scala:223:17]
        io_uvm_out_commit_currPc_r <= _q_io_out_bits_currPc;	// @[Reg.scala:35:20, UvmVerification.scala:223:17]
        io_uvm_out_commit_insn_r <= _q_io_out_bits_insn;	// @[Reg.scala:35:20, UvmVerification.scala:223:17]
      end
      else begin	// @[Decoupled.scala:51:35]
        io_uvm_out_commit_prevPc_r <= _GEN;	// @[Reg.scala:35:20, UvmVerification.scala:242:44]
        io_uvm_out_commit_currPc_r <= _GEN_0;	// @[Reg.scala:35:20, UvmVerification.scala:244:141]
        io_uvm_out_commit_insn_r <= {32'h0, _wb_insn_T_3, io_uvm_in_wb_reg_raw_inst[15:0]};	// @[Reg.scala:35:20, UvmVerification.scala:221:{45,146}, :226:21, :247:81]
      end
      if (io_uvm_in_ver_read_withoutrestrict == 64'h0 & _RunPassFail_T_4)	// @[UvmVerification.scala:255:{41,51,77}, :264:22]
        io_uvm_out_sim_halt_REG <= 2'h1;	// @[Mux.scala:101:16, UvmVerification.scala:258:33]
      else	// @[UvmVerification.scala:255:51]
        io_uvm_out_sim_halt_REG <= {io_uvm_in_ver_read_withoutrestrict == 64'h22B8 & _RunPassFail_T_4, 1'h0};	// @[Mux.scala:101:16, UvmVerification.scala:255:77, :256:{41,54}, :258:33]
      io_uvm_out_update_reg_valid_r <= (io_uvm_in_ll_wen | _io_uvm_out_update_reg_rfd_T | io_uvm_in_fpu_sboard_clr) & ~(io_uvm_in_ll_wen & (_io_uvm_out_update_reg_valid_T_3 | io_uvm_in_id_wen)) & ~((_io_uvm_out_update_reg_valid_T_15 | io_uvm_in_fpu_sboard_set) & io_uvm_in_wb_valid & _io_uvm_out_update_reg_rfd_T) & ~((_io_uvm_out_update_reg_valid_T_15 | io_uvm_in_fpu_sboard_set) & io_uvm_in_fpu_sboard_clr);	// @[Reg.scala:35:20, UvmVerification.scala:447:34, :455:{93,121,149,151,169,216,266,295,320,371,431,484,512}]
      io_uvm_out_update_reg_gpr_en_r <= io_uvm_in_ll_wen;	// @[Reg.scala:35:20]
      if (io_uvm_in_ll_wen)
        io_uvm_out_update_reg_pc_r <= _rf_ext_R0_data;	// @[Reg.scala:35:20, UvmVerification.scala:417:17]
      else if (_io_uvm_out_update_reg_rfd_T)	// @[UvmVerification.scala:455:93]
        io_uvm_out_update_reg_pc_r <= _rf_1_ext_R0_data;	// @[Reg.scala:35:20, UvmVerification.scala:417:17]
      else if (io_uvm_in_fpu_sboard_clr)
        io_uvm_out_update_reg_pc_r <= _rf_1_ext_R1_data;	// @[Reg.scala:35:20, UvmVerification.scala:417:17]
      else
        io_uvm_out_update_reg_pc_r <= 64'h0;	// @[Reg.scala:35:20, UvmVerification.scala:264:22]
      io_uvm_out_update_reg_rd_r <= io_uvm_in_ll_waddr;	// @[Reg.scala:35:20]
      if (_io_uvm_out_update_reg_rfd_T)	// @[UvmVerification.scala:455:93]
        io_uvm_out_update_reg_rfd_r <= io_uvm_in_dmem_resp_waddr;	// @[Reg.scala:35:20]
      else	// @[UvmVerification.scala:455:93]
        io_uvm_out_update_reg_rfd_r <= io_uvm_in_fpu_sboard_clra;	// @[Reg.scala:35:20]
    end
  end // always @(posedge)
  `ifndef SYNTHESIS
    `ifdef FIRRTL_BEFORE_INITIAL
      `FIRRTL_BEFORE_INITIAL
    `endif // FIRRTL_BEFORE_INITIAL
    logic [31:0] _RANDOM_0;
    logic [31:0] _RANDOM_1;
    logic [31:0] _RANDOM_2;
    logic [31:0] _RANDOM_3;
    logic [31:0] _RANDOM_4;
    logic [31:0] _RANDOM_5;
    logic [31:0] _RANDOM_6;
    logic [31:0] _RANDOM_7;
    logic [31:0] _RANDOM_8;
    logic [31:0] _RANDOM_9;
    logic [31:0] _RANDOM_10;
    logic [31:0] _RANDOM_11;
    logic [31:0] _RANDOM_12;
    logic [31:0] _RANDOM_13;
    logic [31:0] _RANDOM_14;
    logic [31:0] _RANDOM_15;
    logic [31:0] _RANDOM_16;
    logic [31:0] _RANDOM_17;
    logic [31:0] _RANDOM_18;
    logic [31:0] _RANDOM_19;
    logic [31:0] _RANDOM_20;
    logic [31:0] _RANDOM_21;
    logic [31:0] _RANDOM_22;
    logic [31:0] _RANDOM_23;
    logic [31:0] _RANDOM_24;
    initial begin
      `ifdef INIT_RANDOM_PROLOG_
        `INIT_RANDOM_PROLOG_
      `endif // INIT_RANDOM_PROLOG_
      `ifdef RANDOMIZE_REG_INIT
        _RANDOM_0 = `RANDOM;
        _RANDOM_1 = `RANDOM;
        _RANDOM_2 = `RANDOM;
        _RANDOM_3 = `RANDOM;
        _RANDOM_4 = `RANDOM;
        _RANDOM_5 = `RANDOM;
        _RANDOM_6 = `RANDOM;
        _RANDOM_7 = `RANDOM;
        _RANDOM_8 = `RANDOM;
        _RANDOM_9 = `RANDOM;
        _RANDOM_10 = `RANDOM;
        _RANDOM_11 = `RANDOM;
        _RANDOM_12 = `RANDOM;
        _RANDOM_13 = `RANDOM;
        _RANDOM_14 = `RANDOM;
        _RANDOM_15 = `RANDOM;
        _RANDOM_16 = `RANDOM;
        _RANDOM_17 = `RANDOM;
        _RANDOM_18 = `RANDOM;
        _RANDOM_19 = `RANDOM;
        _RANDOM_20 = `RANDOM;
        _RANDOM_21 = `RANDOM;
        _RANDOM_22 = `RANDOM;
        _RANDOM_23 = `RANDOM;
        _RANDOM_24 = `RANDOM;
        wb_npc = {_RANDOM_8, _RANDOM_9[7:0]};	// @[UvmVerification.scala:201:19]
        q_io_in_bits_prePc_REG = {_RANDOM_9[31:8], _RANDOM_10[15:0]};	// @[UvmVerification.scala:201:19, :224:32]
        q_io_in_bits_currPc_REG = {_RANDOM_10[31:16], _RANDOM_11[23:0]};	// @[UvmVerification.scala:224:32, :225:33]
        q_io_in_bits_insn_REG = {_RANDOM_11[31:24], _RANDOM_12[23:0]};	// @[UvmVerification.scala:225:33, :226:31]
        q_io_in_valid_REG = _RANDOM_12[24];	// @[UvmVerification.scala:226:31, :228:27]
        trap_valid = _RANDOM_12[25];	// @[Reg.scala:35:20, UvmVerification.scala:226:31]
        sfence = _RANDOM_12[26];	// @[Reg.scala:35:20, UvmVerification.scala:226:31]
        trap_RET = _RANDOM_12[27];	// @[Reg.scala:35:20, UvmVerification.scala:226:31]
        eret_addr = {_RANDOM_12[31:28], _RANDOM_13, _RANDOM_14[27:0]};	// @[Reg.scala:35:20, UvmVerification.scala:226:31]
        commit_insn_r = {_RANDOM_14[31:28], _RANDOM_15[27:0]};	// @[Reg.scala:35:20]
        io_uvm_out_commit_start_r = _RANDOM_15[28];	// @[Reg.scala:35:20]
        io_uvm_out_commit_valid_r = _RANDOM_15[29];	// @[Reg.scala:35:20]
        io_uvm_out_commit_prevPc_r = {_RANDOM_15[31:30], _RANDOM_16, _RANDOM_17[29:0]};	// @[Reg.scala:35:20]
        io_uvm_out_commit_currPc_r = {_RANDOM_17[31:30], _RANDOM_18, _RANDOM_19[29:0]};	// @[Reg.scala:35:20]
        io_uvm_out_commit_insn_r = {_RANDOM_19[31:30], _RANDOM_20, _RANDOM_21[29:0]};	// @[Reg.scala:35:20]
        io_uvm_out_sim_halt_REG = _RANDOM_21[31:30];	// @[Reg.scala:35:20, UvmVerification.scala:258:33]
        io_uvm_out_sfma_REG = _RANDOM_22[0];	// @[UvmVerification.scala:341:45]
        io_uvm_out_sfma_REG_1 = _RANDOM_22[1];	// @[UvmVerification.scala:341:{37,45}]
        io_uvm_out_sfma_REG_2 = _RANDOM_22[2];	// @[UvmVerification.scala:341:{29,45}]
        io_uvm_out_sfma_REG_3 = _RANDOM_22[3];	// @[UvmVerification.scala:341:{45,78}]
        io_uvm_out_update_reg_valid_r = _RANDOM_22[4];	// @[Reg.scala:35:20, UvmVerification.scala:341:45]
        io_uvm_out_update_reg_gpr_en_r = _RANDOM_22[5];	// @[Reg.scala:35:20, UvmVerification.scala:341:45]
        io_uvm_out_update_reg_pc_r = {_RANDOM_22[31:6], _RANDOM_23, _RANDOM_24[5:0]};	// @[Reg.scala:35:20, UvmVerification.scala:341:45]
        io_uvm_out_update_reg_rd_r = _RANDOM_24[10:6];	// @[Reg.scala:35:20]
        io_uvm_out_update_reg_rfd_r = _RANDOM_24[15:11];	// @[Reg.scala:35:20]
      `endif // RANDOMIZE_REG_INIT
    end // initial
    `ifdef FIRRTL_AFTER_INITIAL
      `FIRRTL_AFTER_INITIAL
    `endif // FIRRTL_AFTER_INITIAL
  `endif // not def SYNTHESIS
  MyQueue q (	// @[UvmVerification.scala:223:17]
    .clock               (clock),
    .reset               (reset),
    .io_in_valid         (q_io_in_valid_REG),	// @[UvmVerification.scala:228:27]
    .io_in_bits_prePc    ({24'h0, q_io_in_bits_prePc_REG}),	// @[UvmVerification.scala:224:{22,32}]
    .io_in_bits_currPc   ({24'h0, q_io_in_bits_currPc_REG}),	// @[UvmVerification.scala:224:22, :225:{23,33}]
    .io_in_bits_insn     ({32'h0, q_io_in_bits_insn_REG}),	// @[UvmVerification.scala:226:{21,31}]
    .io_in_bits_minstret (io_uvm_in_minstret),
    .io_out_ready        (io_uvm_in_vpu_commit_vld),
    .io_flush            (io_uvm_in_flush),
    .io_out_valid        (_q_io_out_valid),
    .io_out_bits_prePc   (_q_io_out_bits_prePc),
    .io_out_bits_currPc  (_q_io_out_bits_currPc),
    .io_out_bits_insn    (_q_io_out_bits_insn)
  );
  StabilityDetector stabilityDetector (	// @[UvmVerification.scala:249:33]
    .clock     (clock),
    .reset     (reset),
    .io_in     (io_uvm_out_commit_prevPc_r[31:0]),	// @[Reg.scala:35:20, UvmVerification.scala:250:27]
    .io_stable (_stabilityDetector_io_stable)
  );
  rf_combMem rf_ext (	// @[UvmVerification.scala:417:17]
    .R0_addr (~io_uvm_in_ll_waddr),	// @[UvmVerification.scala:419:41]
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .W0_addr (~io_uvm_in_sboard_waddr),	// @[UvmVerification.scala:419:41]
    .W0_en   (_io_uvm_out_update_reg_valid_T_3 & (|io_uvm_in_sboard_waddr)),	// @[UvmVerification.scala:417:17, :433:{17,26}, :447:{34,57}]
    .W0_clk  (clock),
    .W0_data (_GEN),	// @[UvmVerification.scala:242:44]
    .R0_data (_rf_ext_R0_data)
  );
  rf_1_combMem rf_1_ext (	// @[UvmVerification.scala:417:17]
    .R0_addr (~io_uvm_in_dmem_resp_waddr),	// @[UvmVerification.scala:419:41]
    .R0_en   (1'h1),
    .R0_clk  (clock),
    .R1_addr (~io_uvm_in_fpu_sboard_clra),	// @[UvmVerification.scala:419:41]
    .R1_en   (1'h1),
    .R1_clk  (clock),
    .W0_addr (~io_uvm_in_sboard_waddr),	// @[UvmVerification.scala:419:41]
    .W0_en   (~_io_uvm_out_update_reg_valid_T_3 & io_uvm_in_id_wen & (|io_uvm_in_sboard_waddr)),	// @[UvmVerification.scala:417:17, :433:17, :447:{34,57}, :449:58]
    .W0_clk  (clock),
    .W0_data ({24'h0, io_uvm_in_ibuf_pc}),	// @[UvmVerification.scala:224:22, :447:57]
    .W1_addr (~io_uvm_in_wb_waddr),	// @[UvmVerification.scala:419:41]
    .W1_en   (~(_io_uvm_out_update_reg_valid_T_3 | io_uvm_in_id_wen) & (io_uvm_in_wb_dcache_miss & io_uvm_in_wb_ctrl_wfd | io_uvm_in_fpu_sboard_set) & io_uvm_in_wb_valid & (|io_uvm_in_wb_waddr)),	// @[UvmVerification.scala:417:17, :433:17, :447:{34,57}, :449:58, :451:{40,65,117}]
    .W1_clk  (clock),
    .W1_data (_GEN),	// @[UvmVerification.scala:242:44]
    .R0_data (_rf_1_ext_R0_data),
    .R1_data (_rf_1_ext_R1_data)
  );
  assign io_uvm_out_commit_start = io_uvm_out_commit_start_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_commit_valid = io_uvm_out_commit_valid_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_commit_prevPc = io_uvm_out_commit_prevPc_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_commit_currPc = trap_RET | trap_valid ? eret_addr : sfence ? _GEN_0 : io_uvm_out_commit_currPc_r;	// @[Reg.scala:35:20, UvmVerification.scala:244:{34,67,102,141}]
  assign io_uvm_out_commit_insn = trap_valid ? commit_insn_r : io_uvm_out_commit_insn_r[31:0];	// @[Reg.scala:35:20, UvmVerification.scala:247:32]
  assign io_uvm_out_sim_halt = io_uvm_out_sim_halt_REG;	// @[UvmVerification.scala:258:33]
  assign io_uvm_out_reg_gpr = io_uvm_in_ver_read;
  assign io_uvm_out_reg_fpr = io_uvm_in_fpu_ver_read;
  assign io_uvm_out_reg_vpr = {io_uvm_in_vpu_rfdata_31, io_uvm_in_vpu_rfdata_30, io_uvm_in_vpu_rfdata_29, io_uvm_in_vpu_rfdata_28, io_uvm_in_vpu_rfdata_27, io_uvm_in_vpu_rfdata_26, io_uvm_in_vpu_rfdata_25, io_uvm_in_vpu_rfdata_24, io_uvm_in_vpu_rfdata_23, io_uvm_in_vpu_rfdata_22, io_uvm_in_vpu_rfdata_21, io_uvm_in_vpu_rfdata_20, io_uvm_in_vpu_rfdata_19, io_uvm_in_vpu_rfdata_18, io_uvm_in_vpu_rfdata_17, io_uvm_in_vpu_rfdata_16, io_uvm_in_vpu_rfdata_15, io_uvm_in_vpu_rfdata_14, io_uvm_in_vpu_rfdata_13, io_uvm_in_vpu_rfdata_12, io_uvm_in_vpu_rfdata_11, io_uvm_in_vpu_rfdata_10, io_uvm_in_vpu_rfdata_9, io_uvm_in_vpu_rfdata_8, io_uvm_in_vpu_rfdata_7, io_uvm_in_vpu_rfdata_6, io_uvm_in_vpu_rfdata_5, io_uvm_in_vpu_rfdata_4, io_uvm_in_vpu_rfdata_3, io_uvm_in_vpu_rfdata_2, io_uvm_in_vpu_rfdata_1, io_uvm_in_vpu_rfdata_0};	// @[Cat.scala:33:92]
  assign io_uvm_out_csr_mstatusWr = io_uvm_in_status[63:0];	// @[UvmVerification.scala:315:28]
  assign io_uvm_out_csr_mepcWr = io_uvm_in_mepc;
  assign io_uvm_out_csr_mtvalWr = io_uvm_in_mtval;
  assign io_uvm_out_csr_mtvecWr = io_uvm_in_mtvec;
  assign io_uvm_out_csr_mcauseWr = io_uvm_in_mcause;
  assign io_uvm_out_csr_mipWr = io_uvm_in_mip;
  assign io_uvm_out_csr_mieWr = io_uvm_in_mie;
  assign io_uvm_out_csr_mscratchWr = io_uvm_in_mscratch;
  assign io_uvm_out_csr_midelegWr = io_uvm_in_mideleg;
  assign io_uvm_out_csr_medelegWr = io_uvm_in_medeleg;
  assign io_uvm_out_csr_minstretWr = io_uvm_in_minstret;
  assign io_uvm_out_csr_sstatusWr = io_uvm_in_sstatus;
  assign io_uvm_out_csr_sepcWr = io_uvm_in_sepc;
  assign io_uvm_out_csr_stvalWr = io_uvm_in_stval;
  assign io_uvm_out_csr_stvecWr = io_uvm_in_stvec;
  assign io_uvm_out_csr_scauseWr = io_uvm_in_scause;
  assign io_uvm_out_csr_satpWr = io_uvm_in_satp;
  assign io_uvm_out_csr_sscratchWr = io_uvm_in_sscratch;
  assign io_uvm_out_csr_vtypeWr = io_uvm_in_vtype;
  assign io_uvm_out_csr_vcsrWr = io_uvm_in_vcsr;
  assign io_uvm_out_csr_vlWr = io_uvm_in_vl;
  assign io_uvm_out_csr_vstartWr = io_uvm_in_vstart;
  assign io_uvm_out_update_reg_valid = io_uvm_out_update_reg_valid_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_update_reg_gpr_en = io_uvm_out_update_reg_gpr_en_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_update_reg_pc = io_uvm_out_update_reg_pc_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_update_reg_rd = io_uvm_out_update_reg_rd_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_update_reg_rfd = io_uvm_out_update_reg_rfd_r;	// @[Reg.scala:35:20]
  assign io_uvm_out_update_reg_data = io_uvm_out_update_reg_gpr_en_r ? _GEN_1[io_uvm_out_update_reg_rd_r] : _GEN_2[io_uvm_out_update_reg_rfd_r];	// @[Reg.scala:35:20, UvmVerification.scala:475:36]
  assign io_uvm_out_sfma = io_uvm_out_sfma_REG_2 | io_uvm_out_sfma_REG_3;	// @[UvmVerification.scala:341:{29,69,78}]
  assign io_uvm_out_csr_evec = _io_uvm_out_csr_evec_output;	// @[UvmVerification.scala:342:23]
endmodule

