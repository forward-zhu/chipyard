// Generated by CIRCT unknown git version
// Standard header to adapt well known macros to our needs.
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_REG_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_REG_INIT
`endif // not def RANDOMIZE
`ifndef RANDOMIZE
  `ifdef RANDOMIZE_MEM_INIT
    `define RANDOMIZE
  `endif // RANDOMIZE_MEM_INIT
`endif // not def RANDOMIZE

// RANDOM may be set to an expression that produces a 32-bit random unsigned value.
`ifndef RANDOM
  `define RANDOM $random
`endif // not def RANDOM

// Users can define 'PRINTF_COND' to add an extra gate to prints.
`ifndef PRINTF_COND_
  `ifdef PRINTF_COND
    `define PRINTF_COND_ (`PRINTF_COND)
  `else  // PRINTF_COND
    `define PRINTF_COND_ 1
  `endif // PRINTF_COND
`endif // not def PRINTF_COND_

// Users can define 'ASSERT_VERBOSE_COND' to add an extra gate to assert error printing.
`ifndef ASSERT_VERBOSE_COND_
  `ifdef ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ (`ASSERT_VERBOSE_COND)
  `else  // ASSERT_VERBOSE_COND
    `define ASSERT_VERBOSE_COND_ 1
  `endif // ASSERT_VERBOSE_COND
`endif // not def ASSERT_VERBOSE_COND_

// Users can define 'STOP_COND' to add an extra gate to stop conditions.
`ifndef STOP_COND_
  `ifdef STOP_COND
    `define STOP_COND_ (`STOP_COND)
  `else  // STOP_COND
    `define STOP_COND_ 1
  `endif // STOP_COND
`endif // not def STOP_COND_

// Users can define INIT_RANDOM as general code that gets injected into the
// initializer block for modules with registers.
`ifndef INIT_RANDOM
  `define INIT_RANDOM
`endif // not def INIT_RANDOM

// If using random initialization, you can also define RANDOMIZE_DELAY to
// customize the delay used, otherwise 0.002 is used.
`ifndef RANDOMIZE_DELAY
  `define RANDOMIZE_DELAY 0.002
`endif // not def RANDOMIZE_DELAY

// Define INIT_RANDOM_PROLOG_ for use in our modules below.
`ifndef INIT_RANDOM_PROLOG_
  `ifdef RANDOMIZE
    `ifdef VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM
    `else  // VERILATOR
      `define INIT_RANDOM_PROLOG_ `INIT_RANDOM #`RANDOMIZE_DELAY begin end
    `endif // VERILATOR
  `else  // RANDOMIZE
    `define INIT_RANDOM_PROLOG_
  `endif // RANDOMIZE
`endif // not def INIT_RANDOM_PROLOG_

module SVRegFileWrapper(
  input          clock,
                 io_in_readIn_rfReadEn_0,
                 io_in_readIn_rfReadEn_1,
                 io_in_readIn_rfReadEn_2,
                 io_in_readIn_rfReadEn_3,
  input  [4:0]   io_in_readIn_rfReadIdx_0,
                 io_in_readIn_rfReadIdx_1,
                 io_in_readIn_rfReadIdx_3,
  input          io_in_writeIn_rfWriteEn,
  input  [15:0]  io_in_writeIn_rfWriteMask,
  input  [4:0]   io_in_writeIn_rfWriteIdx,
  input  [127:0] io_in_writeIn_rfWriteData,
  input          io_in_permReadIn_rd_en,
  input  [7:0]   io_in_permReadIn_rd_preg_idx,
  output         io_out_readVld_0,
                 io_out_readVld_1,
                 io_out_readVld_2,
                 io_out_readVld_3,
  output [127:0] io_out_readData_0,
                 io_out_readData_1,
                 io_out_readData_2,
                 io_out_readData_3,
                 io_permReadOut_rdata,
  output         io_permReadOut_rvalid,
  output [127:0] io_rfData_0,
                 io_rfData_1,
                 io_rfData_2,
                 io_rfData_3,
                 io_rfData_4,
                 io_rfData_5,
                 io_rfData_6,
                 io_rfData_7,
                 io_rfData_8,
                 io_rfData_9,
                 io_rfData_10,
                 io_rfData_11,
                 io_rfData_12,
                 io_rfData_13,
                 io_rfData_14,
                 io_rfData_15,
                 io_rfData_16,
                 io_rfData_17,
                 io_rfData_18,
                 io_rfData_19,
                 io_rfData_20,
                 io_rfData_21,
                 io_rfData_22,
                 io_rfData_23,
                 io_rfData_24,
                 io_rfData_25,
                 io_rfData_26,
                 io_rfData_27,
                 io_rfData_28,
                 io_rfData_29,
                 io_rfData_30,
                 io_rfData_31
);

  wire [63:0] _regFile_io_read_0_data_0;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_0_data_1;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_1_data_0;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_1_data_1;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_2_data_0;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_2_data_1;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_3_data_0;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_3_data_1;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_4_data_0;	// @[VRegFileWrapper.scala:29:25]
  wire [63:0] _regFile_io_read_4_data_1;	// @[VRegFileWrapper.scala:29:25]
  SVRegFile regFile (	// @[VRegFileWrapper.scala:29:25]
    .clock              (clock),
    .io_read_0_addr     (io_in_readIn_rfReadIdx_0),
    .io_read_1_addr     (io_in_readIn_rfReadIdx_1),
    .io_read_3_addr     (io_in_readIn_rfReadIdx_3),
    .io_read_4_addr     (io_in_permReadIn_rd_preg_idx[4:0]),	// @[VRegFileWrapper.scala:55:29]
    .io_write_0_wen     (io_in_writeIn_rfWriteEn),
    .io_write_0_wmask_0 (io_in_writeIn_rfWriteMask[7:0]),	// @[VRegFileWrapper.scala:36:50]
    .io_write_0_wmask_1 (io_in_writeIn_rfWriteMask[15:8]),	// @[VRegFileWrapper.scala:36:50]
    .io_write_0_addr    (io_in_writeIn_rfWriteIdx),
    .io_write_0_data_0  (io_in_writeIn_rfWriteData[63:0]),	// @[VRegFileWrapper.scala:35:50]
    .io_write_0_data_1  (io_in_writeIn_rfWriteData[127:64]),	// @[VRegFileWrapper.scala:35:50]
    .io_read_0_data_0   (_regFile_io_read_0_data_0),
    .io_read_0_data_1   (_regFile_io_read_0_data_1),
    .io_read_1_data_0   (_regFile_io_read_1_data_0),
    .io_read_1_data_1   (_regFile_io_read_1_data_1),
    .io_read_2_data_0   (_regFile_io_read_2_data_0),
    .io_read_2_data_1   (_regFile_io_read_2_data_1),
    .io_read_3_data_0   (_regFile_io_read_3_data_0),
    .io_read_3_data_1   (_regFile_io_read_3_data_1),
    .io_read_4_data_0   (_regFile_io_read_4_data_0),
    .io_read_4_data_1   (_regFile_io_read_4_data_1),
    .io_rfData_0        (io_rfData_0),
    .io_rfData_1        (io_rfData_1),
    .io_rfData_2        (io_rfData_2),
    .io_rfData_3        (io_rfData_3),
    .io_rfData_4        (io_rfData_4),
    .io_rfData_5        (io_rfData_5),
    .io_rfData_6        (io_rfData_6),
    .io_rfData_7        (io_rfData_7),
    .io_rfData_8        (io_rfData_8),
    .io_rfData_9        (io_rfData_9),
    .io_rfData_10       (io_rfData_10),
    .io_rfData_11       (io_rfData_11),
    .io_rfData_12       (io_rfData_12),
    .io_rfData_13       (io_rfData_13),
    .io_rfData_14       (io_rfData_14),
    .io_rfData_15       (io_rfData_15),
    .io_rfData_16       (io_rfData_16),
    .io_rfData_17       (io_rfData_17),
    .io_rfData_18       (io_rfData_18),
    .io_rfData_19       (io_rfData_19),
    .io_rfData_20       (io_rfData_20),
    .io_rfData_21       (io_rfData_21),
    .io_rfData_22       (io_rfData_22),
    .io_rfData_23       (io_rfData_23),
    .io_rfData_24       (io_rfData_24),
    .io_rfData_25       (io_rfData_25),
    .io_rfData_26       (io_rfData_26),
    .io_rfData_27       (io_rfData_27),
    .io_rfData_28       (io_rfData_28),
    .io_rfData_29       (io_rfData_29),
    .io_rfData_30       (io_rfData_30),
    .io_rfData_31       (io_rfData_31)
  );
  assign io_out_readVld_0 = io_in_readIn_rfReadEn_0;
  assign io_out_readVld_1 = io_in_readIn_rfReadEn_1;
  assign io_out_readVld_2 = io_in_readIn_rfReadEn_2;
  assign io_out_readVld_3 = io_in_readIn_rfReadEn_3;
  assign io_out_readData_0 = io_in_writeIn_rfWriteEn & io_in_readIn_rfReadIdx_0 == io_in_writeIn_rfWriteIdx ? io_in_writeIn_rfWriteData : {_regFile_io_read_0_data_1, _regFile_io_read_0_data_0};	// @[Cat.scala:33:92, VRegFileWrapper.scala:29:25, :76:{34,59,88}]
  assign io_out_readData_1 = io_in_writeIn_rfWriteEn & io_in_readIn_rfReadIdx_1 == io_in_writeIn_rfWriteIdx ? io_in_writeIn_rfWriteData : {_regFile_io_read_1_data_1, _regFile_io_read_1_data_0};	// @[Cat.scala:33:92, VRegFileWrapper.scala:29:25, :76:{34,59,88}]
  assign io_out_readData_2 = io_in_writeIn_rfWriteEn & io_in_writeIn_rfWriteIdx == 5'h0 ? io_in_writeIn_rfWriteData : {_regFile_io_read_2_data_1, _regFile_io_read_2_data_0};	// @[Cat.scala:33:92, VRegFileWrapper.scala:29:25, :76:{34,59,88}]
  assign io_out_readData_3 = io_in_writeIn_rfWriteEn & io_in_readIn_rfReadIdx_3 == io_in_writeIn_rfWriteIdx ? io_in_writeIn_rfWriteData : {_regFile_io_read_3_data_1, _regFile_io_read_3_data_0};	// @[Cat.scala:33:92, VRegFileWrapper.scala:29:25, :76:{34,59,88}]
  assign io_permReadOut_rdata = {_regFile_io_read_4_data_1, _regFile_io_read_4_data_0};	// @[Cat.scala:33:92, VRegFileWrapper.scala:29:25]
  assign io_permReadOut_rvalid = io_in_permReadIn_rd_en;
endmodule

